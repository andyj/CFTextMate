<?xml version="1.0"?>
<!--
    Note: you can not put cfx or cf_ tags in here ... well you can
    but this is the dictionary for the cfxxxxx tags only (system tags)

	A better place to put the cfx and cf_ tags is in the user.xml file
    
    <!DOCTYPE dictionary [
  		<!ENTITY value_boolean SYSTEM "inc/value_boolean.xml">
	]>
 -->
<dictionary xmlns="http://www.cfeclipse.org/version1/dictionary" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude" xsi:schemaLocation="http://www.cfeclipse.org/version1/dictionary http://cfeclipse.tigris.org/version1/dictionary/dictionary.xsd">
	<tags>
<!--
	cfabort
		showError = "error_message"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfabort" single="true" xmlstyle="false">
	<help><![CDATA[
		Stops the processing of a CFML page at the tag location.
		CFML returns everything that was processed before the
		tag. The tag is often used with conditional logic to stop
		processing a page when a condition occurs.
	]]></help>
	<parameter name="showerror" type="String" required="false">
		<help><![CDATA[
			Error to display, in a standard CFML error page,
			when tag executes
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfapplet
		appletSource = "applet_name"
		name = "form_variable_name"
		height = "height_in_pixels"
		width = "width_in_pixels"
		vSpace = "space_above_and_below_in_pixels"
		hSpace = "space_on_each_side_in_pixels"
		align = "alignment_option"
		notSupported = "message_to_display_for_nonJava_browser"
		param_1 = "applet_parameter_name"
		param_2 = "applet_parameter_name"
		param_n = "applet_parameter_name"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfapplet" single="true" xmlstyle="false">
	<help><![CDATA[
		This tag references a registered custom Java applet. To
		register a Java applet, in the CFML Administrator, click
		Extensions \ Java Applets.

		Using this tag within a cfform tag is optional. If you use it
		within cfform, and the method attribute is defined in the
		Administrator, the return value is incorporated into the
		form.
	]]></help>
	<parameter name="appletsource" type="String" required="true">
		<help><![CDATA[
			Name of registered applet
		]]></help>
		<values/>
	</parameter>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Form variable name for applet
		]]></help>
		<values/>
	</parameter>
	<parameter name="height" type="Numeric" required="false">
		<help><![CDATA[
			Control's height, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="width" type="Numeric" required="false">
		<help><![CDATA[
			Control's width, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="vspace" type="Numeric" required="false">
		<help><![CDATA[
			Vertical margin above and below control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="hspace" type="Numeric" required="false">
		<help><![CDATA[
			Horizontal spacing to left and right of control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="align" type="String" required="false">
		<help><![CDATA[
			Alignment
		]]></help>
		<values>
			<value option="top"/>
			<value option="left"/>
			<value option="bottom"/>
			<value option="baseline"/>
			<value option="texttop"/>
			<value option="absbottom"/>
			<value option="middle"/>
			<value option="absmiddle"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="notsupported" type="String" required="false">
		<help><![CDATA[
			Text to display if a page that contains a Java applet-based
			cfform control is opened by a browser that does not
			support Java or has Java support disabled.
			Default:
			"<b>Browser must support Java to <br>view ColdFusion Java
			Applets!</b>"
		]]></help>
		<values default="&lt;b&gt;Browser must support Java to &lt;br&gt;view ColdFusion Java Applets!&lt;/b&gt;"/>
	</parameter>
</tag>
<!--
	cfapplication
		name = "application_name"
		loginStorage = "cookie" or "session"
		clientManagement = "boolean"
		clientStorage = "datasource_name" or "Registry" or "Cookie"
		setClientCookies = "boolean"
		sessionManagement = "boolean"
		sessionTimeout = #CreateTimeSpan(days, hours, minutes, seconds)#
		applicationTimeout = #CreateTimeSpan(days, hours, minutes, seconds)#
		setDomainCookies = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfapplication" single="true" xmlstyle="false">
	<help><![CDATA[
		Defines the scope of a CFML application; enables and
		disables storage of Client variables; specifies the Client
		variable storage mechanism; enables Session variables; and
		sets Application variable timeouts.
	]]></help>
	<return type="application" name="application"/>
	<return type="session" name="session"/>
	<return type="client" name="client"/>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			Name of application. Up to 64 characters
		]]></help>
		<values/>
	</parameter>
	<parameter name="clientmanagement" type="boolean" required="false">
		<help><![CDATA[
			enables client variables
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="clientstorage" type="String" required="false">
		<help><![CDATA[
			How client variables are stored
			* datasource_name: in ODBC or native data source.
				You must create storage repository in the
				Administrator.
			* registry: in the system registry.
			* cookie: on client computer in a cookie. Scalable.
				If client disables cookies in the browser, client
				variables do not work
		]]></help>
		<values default="registry">
			<value option="cookie"/>
			<value option="registry"/>
			<value option="datasource_name"/>
		</values>
	</parameter>
	<parameter name="setclientcookies" type="boolean" required="false">
		<help><![CDATA[
			No: CFML does not automatically send CFID and CFTOKEN
			cookies to client browser; you must manually code CFID and
			CFTOKEN on the URL for every page that uses Session or
			Client variables
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="sessionmanagement" type="boolean" required="false">
		<help><![CDATA[
			enables session variables
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="sessiontimeout" type="Timespan" required="false">
		<help><![CDATA[
			Lifespan of session variables. CreateTimeSpan function and
			values in days, hours, minutes, and seconds, separated by
			commas
		]]></help>
		<values/>
	</parameter>
	<parameter name="applicationtimeout" type="Timespan" required="false">
		<help><![CDATA[
			Lifespan of application variables. CreateTimeSpan function
			and values in days, hours, minutes, and seconds, separated
			by commas.
		]]></help>
		<values/>
	</parameter>
	<parameter name="setdomaincookies" type="boolean" required="false">
		<help><![CDATA[
			Yes: Sets CFID and CFTOKEN cookies for a domain (not a host)
			Required, for applications running on clusters.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfassociate
		baseTag = "base_tag_name"
		dataCollection = "collection_name"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfassociate" single="true" xmlstyle="false">
	<help><![CDATA[
		Allows subtag data to be saved with a base tag. Applies only
		to custom tags.
	]]></help>
	<parameter name="basetag" type="String" required="true">
		<help><![CDATA[
			Base tag name
		]]></help>
		<values/>
	</parameter>
	<parameter name="datacollection" type="String" required="false">
		<help><![CDATA[
			Structure in which base tag stores subtag data
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfbreak
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfbreak" single="true" xmlstyle="false">
	<help><![CDATA[
		Used within a cfloop tag. Breaks out of a loop.
	]]></help>
</tag>
<!--
	cfcache
		action = "cache" or "flush" or "clientCache" or "optimal"
		directory = "directory_name"
		cacheDirectory = "directory_name_for_cached_pages"
		expireURL = "wildcarded_URL_reference"
		username = "username"
		password = "password"
		port = "port_number"
		protocol = "protocol"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfcache" single="true" xmlstyle="false">
	<help><![CDATA[
		Stores a copy of a page on the server and/or client computer,
		to improve page rendering performance. To do this, the tag
		creates temporary files that contain the static HTML returned
		from a CFML page.

		Use this tag if it is not necessary to get dynamic content each
		time a user accesses a page.
		You can use this tag for simple URLs and for URLs that contain
		URL parameters.
	]]></help>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
			* cache: server-side and client-side caching.
			* flush: refresh cached page(s).
			* clientcache: browser-side caching only. To cache a personalized page, use this option.
			* servercache: server-side caching only. Not recommended.
			* optimal: same as "cache".
		]]></help>
		<values>
			<value option="cache"/>
			<value option="flush"/>
			<value option="clientcache"/>
			<value option="servercache"/>
			<value option="optimal"/>
		</values>
	</parameter>
	<parameter name="directory" type="String" required="false">
		<help><![CDATA[
			Absolute path of cache directory.
		]]></help>
		<values/>
	</parameter>
	<parameter name="Timespan" type="Timespan" required="false">
		<help><![CDATA[
			Absolute path of cache directory.
		]]></help>
		<values/>
	</parameter>
	<parameter name="expireurl" type="String" required="false">
		<help><![CDATA[
			Used with action = "flush". A URL reference. CFML
			matches it against the mappings in the specified cache
			directory. Can include wildcards. For example:
			"*/view.cfm?id=*".
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			A username
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			A password
		]]></help>
		<values/>
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			Remote port to which to connect
		]]></help>
		<values/>
	</parameter>
	<parameter name="protocol" type="String" required="false">
		<help><![CDATA[
			Protocol that is used to create URL from cache.
		]]></help>
		<values>
			<value option="http://"/>
			<value option="https://"/>
		</values>
	</parameter>
	<parameter name="cachedirectory" type="String" required="false">
		<help><![CDATA[
			Specifies the fully qualified path of the directory
			where pages are to be cached. The default is the directory
			of the current page.
		]]></help>
		<values/>
	</parameter>
	<parameter name="timeout" type="Timespan" required="false">
		<help><![CDATA[
			DateTime that specifies the oldest acceptable cached page.
			If the cached page is older than the specified datetime,
			ColdFusion refreshes the page.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfcase
		value = "value or delimited set of values"
		delimiters = "delimiter characters"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfcase" single="false" xmlstyle="false">
	<help><![CDATA[
		Used only inside the cfswitch tag body. Contains code to
		execute when the expression specified in the cfswitch tag has
		one or more specific values.
	]]></help>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			The value or values that the expression attribute of the
			cfswitch tag must match. To specify multiple matching
			values, separate the values with the delimiter character.
			The value or values must be simple constants or constant
			expressions, not variables.
		]]></help>
		<values/>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
			Specifies the delimiter character or characters that
			separate multiple values to match. If you specify multiple
			delimiter characters, you can use any of them to separate
			the values to be matched.
		]]></help>
		<values default=",">
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
</tag>
<!--
	cfcatch
		type = "exceptiontype"
		[Exception processing code here]
	/cfcatch

--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfcatch" single="false" xmlstyle="false">
	<help><![CDATA[
		Used inside a cftry tag. Together, they catch and process
		exceptions in CFML pages. Exceptions are events that
		disrupt the normal flow of instructions in a CFML page,
		such as failed database operations, missing include files, and
		developer-specified events.
	]]></help>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="application"/>
			<value option="database"/>
			<value option="template"/>
			<value option="security"/>
			<value option="object"/>
			<value option="missinginclude"/>
			<value option="expression"/>
			<value option="lock"/>
			<value option="custom_type"/>
			<value option="searchengine"/>
			<value option="any"/>
		</values>
	</parameter>
</tag>
<!--
	cfcol
		header = "column_header_text"
		width = "number_indicating_width_of_column"
		align = "Left" or "Right" or "Center"
		text = "column_text"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfcol" single="true" xmlstyle="false">
	<help><![CDATA[
		Defines table column header, width, alignment, and text. Used
		within a cftable tag.
	]]></help>
	<parameter name="header" type="String" required="true">
		<help><![CDATA[
			Column header text. To use this attribute, you must also
			use the cftable colHeaders attribute.
		]]></help>
		<values/>
	</parameter>
	<parameter name="width" type="Numeric" required="false">
		<help><![CDATA[
			Column width. If the length of data displayed exceeds this
			value, data is truncated to fit. To avoid this, use an
			HTML table tag.
		]]></help>
		<values default="20"/>
	</parameter>
	<parameter name="align" type="String" required="false">
		<help><![CDATA[
			Column alignment
		]]></help>
		<values default="left">
			<value option="left"/>
			<value option="center"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="text" type="String" required="true">
		<help><![CDATA[
			Double-quotation mark-delimited text; determines what to
			display. Rules: same as for cfoutput sections. You can
			embed hyperlinks, image references, and input controls
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfcollection
		action = "action"
		collection = "collection_name"
		path = "path_to_verity_collection"
		language = "language"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfcollection" single="true" xmlstyle="false">
	<help><![CDATA[
		Creates, registers, and administers Verity search engine
		collections.

		A collection that is created with the cfcollection tag is
		internal. A collection created any other way is external.

		A collection that is registered with CFML using the
		cfcollection tag or registered with the K2 Server by editing
		the k2server.ini file is registered. Other collections are
		unregistered.
	]]></help>
	<parameter name="action" type="String" required="true">
		<help><![CDATA[
			create: registers the collection with CFML.
				- If the collection is present: creates a map to it
				- If the collection is not present: creates it
			delete: unregisters a collection.
				- If the collection was registered with action = create:
					deletes its directories
				- If the collection was registered and mapped: does not
					delete collection directories
			optimize: optimizes the structure and contents of the
				collection for searching; recovers space.
			map: creates a map to the collection. It is not necessary
				to specify this value.
			repair: fixes data corruption in a collection.
		]]></help>
		<values>
			<value option="create"/>
			<value option="repair"/>
			<value option="delete"/>
			<value option="map"/>
			<value option="optimize"/>
		</values>
	</parameter>
	<parameter name="collection" type="String" required="false">
		<help><![CDATA[
			A collection name. The name can include spaces
		]]></help>
		<values/>
	</parameter>
	<parameter name="path" type="String" required="false">
		<help><![CDATA[
			Absolute path to a Verity collection.
		]]></help>
		<values/>
	</parameter>
	<parameter name="language" type="String" required="false">
		<help><![CDATA[
			Options are listed in Usage section. Requires the
			appropriate (European or Asian) Verity Locales language
			pack.
		]]></help>
		<values default="english"/>
	</parameter>
</tag>
<!--
	cfcontent
		type = "file_type"
		deleteFile = "boolean"
		file = "filename"
		reset = "boolean"
	[starting with a drive letter and a colon, or a forward
	or backward slash]
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfcontent" single="true" xmlstyle="false">
	<help><![CDATA[
		Does either or both of the following:
		* Sets the MIME content encoding header for the current page
		* Sends the contents of a file from the server as the page
			output
	]]></help>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			The MIME content type of the page, optionally followed by
			a semicolon and the character encoding. By default,
			CFML sends pages as text/html content type in
			the UTF-8 character encoding.
		]]></help>
		<values/>
	</parameter>
	<parameter name="deletefile" type="boolean" required="false">
		<help><![CDATA[
			Applies only if you specify a file with the file attribute.
			
			Yes: deletes the file on the server after sending its
				contents to the client.
			No: leaves the file on the server.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="file" type="String" required="false">
		<help><![CDATA[
			Name of file whose contents will be the page output. When
			using CFML in a distributed configuration, the file
			attribute must refer to a path on the system on which the
			web server runs. When you use this attribute, any other
			output on the current CFML page is ignored; only the
			contents of the file is sent to the client.
		]]></help>
		<values/>
	</parameter>
	<parameter name="reset" type="boolean" required="false">
		<help><![CDATA[
			The reset and file attributes are mutually exclusive.
			If you specify a file, this attribute has no effect.

			Yes: discards output that precedes call to cfcontent
			No: preserves output that precedes call to cfcontent. In
			this case all output is sent with the specified type.
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfcookie
		name = "cookie_name"
		value = "text"
		expires = "period"
		secure = "boolean"
		path = "URL"
		domain = ".domain"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfcookie" single="true" xmlstyle="false">
	<help><![CDATA[
		Defines web browser cookie variables, including expiration and
		security options.
	]]></help>
	<return type="String" parameter="name"/>
	<parameter name="name" type="variableName" required="true">
		<help><![CDATA[
			Name of cookie variable. CFML converts cookie names
			to all-uppercase. Cookie names set using this tag can
			include any printable ASCII characters except commas,
			semicolons or white space characters.
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Value to assign to cookie variable. Must be a string or
			variable that can be stored as a string.
		]]></help>
		<values/>
	</parameter>
	<parameter name="expires" type="Object" required="false">
		<help><![CDATA[
			Expiration of cookie variable.

			* The default: the cookie expires when the user closes the
				browser, that is, the cookie is "session only".
			* A date or date/time object (for example, 10/09/97)
			* A number of days (for example, 10, or 100)
			* now: deletes cookie from client cookie.txt file
				(but does not delete the corresponding variable the
				Cookie scope of the active page).
			* never: The cookie expires in 30 years from the time it
				was created (effectively never in web years).
		]]></help>
		<values/>
	</parameter>
	<parameter name="secure" type="boolean" required="false">
		<help><![CDATA[
			If browser does not support Secure Sockets Layer (SSL)
			security, the cookie is not sent. To use the cookie, the
			page must be accessed using the https protocol.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="path" type="String" required="false">
		<help><![CDATA[
			URL, within a domain, to which the cookie applies;
			typically a directory. Only pages in this path can use the
			cookie. By default, all pages on the server that set the
			cookie can access the cookie.

			path = "/services/login"
		]]></help>
		<values/>
	</parameter>
	<parameter name="domain" type="String" required="false">
		<help><![CDATA[
			Domain in which cookie is valid and to which cookie content
			can be sent from the user's system. By default, the cookie
			is only available to the server that set it. Use this
			attribute to make the cookie available to other servers.

			Must start with a period. If the value is a subdomain, the
			valid domain is all domain names that end with this string.
			This attribute sets the available subdomains on the site
			upon which the cookie can be used.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfdefaultcase
	...
	/cfdefaultcase
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfdefaultcase" single="false" xmlstyle="false">
	<help><![CDATA[
		Used only inside the cfswitch tag body. Contains code to
		execute when the expression specified in the cfswitch tag does
		not match any of the values specified by preceeding cfcase tags.
	]]></help>
</tag>
<!--
	cfdirectory
		action = "directory action"
		directory = "directory name"
		name = "query name"
		filter = "list filter"
		mode = "permission"
		sort = "sort specification"
		newDirectory = "new directory name"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfdirectory" single="true" xmlstyle="false">
	<help><![CDATA[
		Manages interactions with directories.
		Different combos cause different attributes to be
		required.
	]]></help>
	<return type="cfdirectory" parameter="name"/>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default="list">
			<value option="list"/>
			<value option="create"/>
			<value option="delete"/>
			<value option="rename"/>
		</values>
	</parameter>
	<parameter name="directory" type="String" required="true">
		<help><![CDATA[
			Absolute pathname of directory against which to perform
			action.
		]]></help>
		<values/>
	</parameter>
	<parameter name="name" type="variableName" required="true">
		<help><![CDATA[
			Name for output record set.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="false" value="list"/>
		</triggers>
	</parameter>
	<parameter name="filter" type="String" required="true">
		<help><![CDATA[
			File extension filter applied to returned names. For
			example: *.cfm. One filter can be applied.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="false" value="list"/>
		</triggers>
	</parameter>
	<parameter name="mode" type="String" required="false">
		<help><![CDATA[
			Applies only to UNIX and Linux. Permissions. Octal values
			of Unix chmod command. Assigned to owner, group, and
			other, respectively.
		]]></help>
		<values/>
	</parameter>
	<parameter name="sort" type="String" required="false">
		<help><![CDATA[
			Query column(s) by which to sort directory listing.
			Delimited list of columns from query output.
		]]></help>
		<values default="asc">
			<value option="asc"/>
			<value option="desc"/>
		</values>
		<triggers>
			<selectedValue attributeName="action" required="false" value="list"/>
		</triggers>
	</parameter>
	<parameter name="newdirectory" type="String" required="false">
		<help><![CDATA[
			New name for directory.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="false" value="rename"/>
		</triggers>
	</parameter>
</tag>
<!--
	cfdump
		var = "#variable#"
		expand = "boolean"
		label = "text"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfdump" single="true" xmlstyle="false">
	<help><![CDATA[
		Outputs the elements, variables and values of most kinds of
		CFML objects. Useful for debugging. You can display the
		contents of simple and complex variables, objects, components,
		user-defined functions, and other elements.
	]]></help>
	<parameter name="var" type="Object" required="true">
		<help><![CDATA[
			Variable to display. Enclose a variable name in pound
			signs.
		]]></help>
		<values/>
	</parameter>
	<parameter name="expand" type="boolean" required="false">
		<help><![CDATA[
			Yes: In Internet Explorer and Mozilla, expands views
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="label" type="String" required="false">
		<help><![CDATA[
			A string; header for the dump output.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfelse
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfelse" single="true" xmlstyle="false">
	<help><![CDATA[
		Used as the last control block in a cfif tag block to handle
		any case not identified by the cfif tag or a cfelseif tag.
	]]></help>
</tag>
<!--
	cfelseif
		expression
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfelseif" single="true" xmlstyle="false">
	<help><![CDATA[
		Used as a control block in a cfif tag block to handle any case
		not identified by the cfif tag or a cfelseif tag.
	]]></help>
</tag>
<!--
	cferror
		type = "a type"
		template = "template_path"
		mailTo = "email_address"
		exception = "exception_type"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cferror" single="true" xmlstyle="false">
	<help><![CDATA[
		Displays a custom HTML page when an error occurs. This lets
		you maintain a consistent look and feel among an application's
		functional and error pages
	]]></help>
	<parameter name="type" type="String" required="true">
		<help><![CDATA[
			Type of error that the custom error page handles. The type
			also determines how CFML handles the error page. For
			more information, see Specifying a custom error page in
			Developing CFML MX Applications.

			exception: a exception of the type specified by the
				exception attribute.
			validation: errors recognized by sever-side type
				validation.
			request: any encountered error.
			monitor: Dynamically invoked by the CFML language processor
				when it first detects an exception condition, before it
				searches for cftry/cfcatch or cferror handlers for the
				exception.
		]]></help>
		<values>
			<value option="exception"/>
			<value option="validation"/>
			<value option="request"/>
			<value option="monitor"/>
		</values>
	</parameter>
	<parameter name="template" type="String" required="true">
		<help><![CDATA[
			Relative path to the custom error page.
			(A CFML page was formerly called a template.)
		]]></help>
		<values/>
	</parameter>
	<parameter name="mailto" type="String" required="false">
		<help><![CDATA[
			An E-mail address. This attribute is available on the
			error page as the variable error.mailto. CFML does
			not automatically send anything to this address.
		]]></help>
		<values/>
	</parameter>
	<parameter name="exception" type="String" required="false">
		<help><![CDATA[
			Type of exception that the tag handles:

			application: application exceptions
			database: database exceptions
			template: CFML page exceptions
			security: security exceptions
			object: object exceptions
			missingInclude: missing include file exceptions
			expression: expression exceptions
			lock: lock exceptions
			custom_type: developer-defined exceptions, defined in the
				cfthrow tag
			any: all exception types
		]]></help>
		<values default="any">
			<value option="any"/>
			<value option="application"/>
			<value option="database"/>
			<value option="template"/>
			<value option="security"/>
			<value option="object"/>
			<value option="missinginclude"/>
			<value option="expression"/>
			<value option="lock"/>
			<value option="custom_type"/>
		</values>
	</parameter>
</tag>
<!--
	cfexecute
		name = " ApplicationName "
		arguments = "CommandLine Arguments"
		outputFile = "Output file name"
	   	timeout = "Timeout interval"
	   	...
	/cfexecute
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfexecute" single="false" xmlstyle="false">
	<help><![CDATA[
		Executes a CFML developer-specified process on a server
		computer.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Absolute path of the application to execute.

			On Windows, you must specify an extension; for example,
			C:\myapp.exe.
		]]></help>
		<values/>
	</parameter>
	<parameter name="arguments" type="Object" required="false">
		<help><![CDATA[
			Command-line variables passed to application. If specified
			as string, it is processed as follows:
			* Windows: passed to process control subsystem for parsing.
			* UNIX: tokenized into an array of arguments. The default
				token separator is a space; you can delimit arguments
				that have embedded spaces with double quotation marks.
			If passed as array, it is processed as follows:
			* Windows: elements are concatenated into a string of
				tokens, separated by spaces. Passed to process control
				subsystem for parsing.
			* UNIX: elements are copied into an array of exec()
				arguments
		]]></help>
		<values/>
	</parameter>
	<parameter name="outputfile" type="String" required="false">
		<help><![CDATA[
			File to which to direct program output. If no outputfile or
			variable attribute is specified, output is displayed on
			the page from which it was called.

			If not an absolute path (starting a with a drive letter and
			a colon, or a forward or backward slash), it is relative
			to the CFML temporary directory, which is returned
			by the GetTempDirectory function.
		]]></help>
		<values/>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Length of time, in seconds, that CFML waits for
			output from the spawned program.
		]]></help>
		<values default="0"/>
	</parameter>
</tag>
<!--
	cfexit
		method = "method"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfexit" single="true" xmlstyle="false">
	<help><![CDATA[
		This tag aborts processing of the currently executing CFML
		custom tag, exits the page within the currently executing CFML
		custom tag, or re-executes a section of code within the
		currently executing CFML custom tag.
	]]></help>
	<parameter name="method" type="String" required="false">
		<help><![CDATA[
			exittag: aborts processing of currently executing tag
			exittemplate: exits page of currently executing tag
			loop: reexecutes body of currently executing tag
		]]></help>
		<values>
			<value option="exittag"/>
			<value option="exittemplate"/>
			<value option="loop"/>
		</values>
	</parameter>
</tag>
<!--
	cffile
		action = "upload"
		fileField = "formfield"
		destination = "full_path_name"
		nameConflict = "behavior"
		accept = "mime_type/file_type"
		mode = "permission"
		attributes = "file_attribute_or_list">
		source = "full_path_name"
		charset = "charset_option">
		file = "full_path_name">
		variable = "var_name">
		output = "content"
		addNewLine = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cffile" single="true" xmlstyle="false">
	<help><![CDATA[
		Manages interactions with server files.
		Different combonations cause different attributes to be
		required.
	]]></help>
	<return type="cffile" name="cffile"/>
	<return type="String" parameter="variable"/>
	<parameter name="action" type="String" required="true">
		<help><![CDATA[
			Type of file manipulation that the tag performs.
		]]></help>
		<values>
			<value option="append"/>
			<value option="copy"/>
			<value option="delete"/>
			<value option="move"/>
			<value option="read"/>
			<value option="readbinary"/>
			<value option="rename"/>
			<value option="upload"/>
			<value option="write"/>
		</values>
	</parameter>
	<parameter name="file" type="String" required="true">
		<help><![CDATA[
			Pathname of the file.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="delete" required="true"/>
			<selectedValue attributeName="action" value="read" required="true"/>
			<selectedValue attributeName="action" value="readBinary" required="true"/>
			<selectedValue attributeName="action" value="write" required="true"/>
			<selectedValue attributeName="action" value="append" required="true"/>
		</triggers>
	</parameter>
	<parameter name="mode" type="String" required="false">
		<help><![CDATA[
			Applies only to UNIX and Linux. Permissions. Octal values
			of Unix chmod command. Assigned to owner, group, and
			other, respectively.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="append" required="false"/>
			<selectedValue attributeName="action" value="copy" required="false"/>
			<selectedValue attributeName="action" value="move" required="false"/>
			<selectedValue attributeName="action" value="rename" required="false"/>
			<selectedValue attributeName="action" value="write" required="false"/>
			<selectedValue attributeName="action" value="upload" required="false"/>
		</triggers>
	</parameter>
	<parameter name="output" type="String" required="true">
		<help><![CDATA[
			String to add to the file
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="append" required="true"/>
			<selectedValue attributeName="action" value="write" required="true"/>
		</triggers>
	</parameter>
	<parameter name="addnewline" type="boolean" required="false">
		<help><![CDATA[
			Yes: appends newline character to text written to file
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
		<triggers>
			<selectedValue attributeName="action" value="append" required="true"/>
			<selectedValue attributeName="action" value="write" required="false"/>
			<!-- <selectedValue attributeName="action" value="" required="false" /> -->
		</triggers>
	</parameter>
	<parameter name="attributes" type="String" required="false">
		<help><![CDATA[
			Applies to Windows. A comma-delimited list of attributes
			to set on the file.

			If omitted, the file's attributes are maintained.
		]]></help>
		<values>
			<value option="readonly"/>
			<value option="hidden"/>
			<value option="normal"/>
			<value option="system"/>
			<value option="temporary"/>
		</values>
		<triggers>
			<selectedValue attributeName="action" value="append" required="false"/>
			<selectedValue attributeName="action" value="copy" required="false"/>
			<selectedValue attributeName="action" value="move" required="false"/>
			<selectedValue attributeName="action" value="rename" required="false"/>
			<selectedValue attributeName="action" value="write" required="false"/>
			<selectedValue attributeName="action" value="upload" required="false"/>
		</triggers>
	</parameter>
	<parameter name="charset" type="String" required="false">
		<help><![CDATA[
			The character encoding in which the file contents is
			encoded.

			For more information on character encodings, see:
			www.w3.org/International/O-charset.html.
		]]></help>
		<values>
			<value option="utf-8"/>
			<value option="iso-8859-1"/>
			<value option="windows-1252"/>
			<value option="us-ascii"/>
			<value option="shift_jis"/>
			<value option="iso-2022-jp"/>
			<value option="euc-jp"/>
			<value option="euc-kr"/>
			<value option="big5"/>
			<value option="euc-cn"/>
			<value option="utf-16"/>
		</values>
		<triggers>
			<selectedValue attributeName="action" value="append" required="false"/>
			<selectedValue attributeName="action" value="move" required="false"/>
			<selectedValue attributeName="action" value="read" required="false"/>
			<selectedValue attributeName="action" value="write" required="false"/>
		</triggers>
	</parameter>
	<parameter name="source" type="String" required="true">
		<help><![CDATA[
			Pathname of the file (durring copy).
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="copy" required="true"/>
			<selectedValue attributeName="action" value="move" required="true"/>
			<selectedValue attributeName="action" value="rename" required="true"/>
		</triggers>
	</parameter>
	<parameter name="destination" type="String" required="true">
		<help><![CDATA[
			Pathname of a directory or file on web server
			(durring copy).
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="copy" required="true"/>
			<selectedValue attributeName="action" value="move" required="true"/>
			<selectedValue attributeName="action" value="rename" required="true"/>
			<selectedValue attributeName="action" value="upload" required="true"/>
		</triggers>
	</parameter>
	<parameter name="variable" type="variableName" required="true">
		<help><![CDATA[
			Name of variable to contain contents of text file.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="read" required="true"/>
			<selectedValue attributeName="action" value="readBinary" required="true"/>
		</triggers>
	</parameter>
	<parameter name="filefield" type="String" required="true">
		<help><![CDATA[
			Name of form field used to select the file.

			Do not use pound signs (#) to specify the field name.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="upload" required="true"/>
		</triggers>
	</parameter>
	<parameter name="nameconflict" type="String" required="false">
		<help><![CDATA[
			Action to take if filename is the same as that of a file
			in the directory.
		]]></help>
		<values>
			<value option="error"/>
			<value option="skip"/>
			<value option="overwrite"/>
			<value option="makeunique"/>
		</values>
		<triggers>
			<selectedValue attributeName="action" value="upload" required="false"/>
		</triggers>
	</parameter>
	<parameter name="accept" type="String" required="true">
		<help><![CDATA[
			Limits the MIME types to accept. Comma-delimited list. For
			example, to permit JPG and Microsoft Word file uploads:

			accept = "image/jpg, application/msword"
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" value="upload" required="false"/>
		</triggers>
	</parameter>
</tag>
<!--
	cfflush
		interval = "integer number of bytes"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfflush" single="true" xmlstyle="false">
	<help><![CDATA[
		Flushes currently available data to the client.
	]]></help>
	<parameter name="interval" type="Numeric" required="false">
		<help><![CDATA[
			Flushes output each time this number of bytes becomes
			available. HTML headers, and data that is already
			available when the tag is executed, are omitted from the
			count.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfform
		name = "name"
		action = "form_action"
		preserveData = "boolean"
		onSubmit = "javascript"
		onReset = "javascript"
		target = "window_name"
		encType = "type"
		codeBase = "URL"
		archive = "URL"
		scriptSrc = "path"
		id = "HTML id"
		class = "css class"
		style = "css style"
		passThrough = "HTML_attribute(s)"
		
		...
	/cfform
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfform" single="false" xmlstyle="false">
	<help><![CDATA[
		Builds a form with CFML custom control tags; these provide
		more functionality than standard HTML form input elements.
	]]></help>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			A name for the form.
		]]></help>
		<values/>
	</parameter>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
			Name of CFML page to execute when the form is
			submitted for processing.
		]]></help>
		<values/>
	</parameter>
	<parameter name="method" type="String" required="false">
		<help><![CDATA[
			The method the browser uses to send the form data
			to the server:
			- post: Send the data using the HTTP post method,
			This method sends the data in a separate message
			to the server.
			- get: Send the data using the HTTP get method,
			which puts the form field contents in the URL
			query string.
		]]></help>
		<values default="post">
			<value option="post"/>
			<value option="get"/>
		</values>
	</parameter>
	<parameter name="preservedata" type="boolean" required="false">
		<help><![CDATA[
			When the cfform action attribute posts back to the same
			page as the form, this determines whether to override the
			control values with the submitted values.
			 - false: values specified in the control tag attributes are used
			 - true: corresponding submitted values are used
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="onload" type="String" required="false">
		<help><![CDATA[
			JavaScript to execute when the form loads.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onsubmit" type="String" required="false">
		<help><![CDATA[
			JavaScript function to execute after input validation. Use
			for preprocessing data before form is submitted
		]]></help>
		<values/>
	</parameter>
	<parameter name="codebase" type="String" required="false">
		<help><![CDATA[
			URL of downloadable JRE plug-in (for Internet Explorer only).
			Default: /CFIDE/classes/cf-j2re-win.cab
		]]></help>
		<values default="/CFIDE/classes/cf-j2re-win.cab"/>
	</parameter>
	<parameter name="archive" type="String" required="false">
		<help><![CDATA[
			URL of downloadable Java classes for CFML controls.
			Default: /CFIDE/classes/cfapplets.jar
		]]></help>
		<values default="/CFIDE/classes/cfapplets.jar"/>
	</parameter>
	<parameter name="scriptsrc" type="String" required="false">
		<help><![CDATA[
			Lets the user control the URL of the script file; useful
			if you do not keep the file in the /cfide directory.
		]]></help>
		<values/>
	</parameter>
	<parameter name="style" type="String" required="false">
		<help><![CDATA[
			CSS Style passed through to <FORM>.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onreset" type="String" required="false">
		<help><![CDATA[
			JavaScript to execute when the user clicks a reset button.
		]]></help>
		<values/>
	</parameter>
	<parameter name="enctype" type="String" required="false">
		<help><![CDATA[
			MIME type passed through to <FORM>.
		]]></help>
		<values default="application/x-www-form-urlencoded">
			<value option="application/x-www-form-urlencoded"/>
			<value option="multipart/form-data"/>
			<value option="text/plain"/>
		</values>
	</parameter>
	<parameter name="id" type="String" required="false">
		<help><![CDATA[
			HTML id passed through to <FORM>.
		]]></help>
		<values/>
	</parameter>
	<parameter name="target" type="String" required="false">
		<help><![CDATA[
			Target window or frame passed through to <FORM>.
		]]></help>
		<values/>
	</parameter>
	<parameter name="class" type="String" required="false">
		<help><![CDATA[
			Form CSS class passed through to <FORM>.
		]]></help>
		<values/>
	</parameter>
	<parameter name="passthrough" type="String" required="false">
		<help><![CDATA[
			Passes arbitrary attribute-value pairs to the HTML code
			that is generated for the tag. You can use either of the
			following formats:
			
			passthrough="title=""myTitle"""
			passthrough='title="mytitle"'
		]]></help>
		<values/>
	</parameter>
	<parameter name="enablecab" type="String" required="false" compatibility="deprecated">
		<help><![CDATA[
			This attribute is deprecated.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfftp
		action = "action"
		username = "name"
		password = "password"
		server = "server"
		timeout = "timeout in seconds"
		port = "port"
		connection = "name"
		proxyServer = "proxy server"
		retryCount = "number"
		stopOnError = "boolean"
		passive = "boolean"
	
	OR
	
	cfftp
		action = "action"
		username = "name"
		password = "password"
		name = "query_name"
		server = "server"
		ASCIIExtensionList = "extensions"
		transferMode = "mode"
		failIfExists = "boolean"
		directory = "directory name"
		localFile = "filename"
		remoteFile = "filename"
		item = "directory or file"
		existing = "file or directory name"
		new = "file or directory name"
		proxyServer = "proxy server"
		passive = "boolean"
	
	OR
	
	cfftp
		action = "action"
		username = "name"
		password = "password"
		name = "query_name"
		server = "server"
		ASCIIExtensionList = "extensions"
		transferMode = "mode"
		failIfExists = "boolean"
		directory = "directory name"
		localFile = "filename"
		remoteFile = "filename"
		item = "directory or file"
		existing = "file or directory name"
		new = "file or directory name"
		proxyServer = "proxy server"
		passive = "boolean"
		timeout = "timeout in seconds"
		port = "port"
		connection = "name"
		retryCount = "number"
		stopOnError = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfftp" single="true" xmlstyle="false">
	<help><![CDATA[
		Lets users implement File Transfer Protocol (FTP) operations.
	]]></help>
	<return type="cfftp" name="cfftp"/>
	<return type="cfftplist" parameter="name"/>
	<return type="String" parameter="connection"/>
	<parameter name="action" type="String" required="true">
		<help><![CDATA[
			FTP operation to perform.
			open: create an FTP connection
			close: terminate an FTP connection
		]]></help>
		<values>
			<value option="open"/>
			<value option="close"/>
			<value option="changedir"/>
			<value option="createdir"/>
			<value option="listdir"/>
			<value option="removedir"/>
			<value option="getfile"/>
			<value option="putfile"/>
			<value option="rename"/>
			<value option="remove"/>
			<value option="getcurrentdir"/>
			<value option="getcurrenturl"/>
			<value option="existsdir"/>
			<value option="existsfile"/>
			<value option="exists"/>
		</values>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Overrides username specified in ODBC setup.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="connection" required="true" value=""/>
			<selectedValue attributeName="action" required="true" value="open"/>
		</triggers>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Overrides password specified in ODBC setup.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="connection" required="true" value=""/>
			<selectedValue attributeName="action" required="true" value="open"/>
		</triggers>
	</parameter>
	<parameter name="server" type="String" required="false">
		<help><![CDATA[
			FTP server to which to connect; for example,
			ftp.myserver.com
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="connection" required="true" value=""/>
			<selectedValue attributeName="action" required="true" value="open"/>
		</triggers>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Value in seconds for the timeout of all operations,
			including individual data request operations.
		]]></help>
		<values default="30"/>
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			Remote port to which to connect
		]]></help>
		<values default="21"/>
	</parameter>
	<parameter name="connection" type="variableName" required="false">
		<help><![CDATA[
			Name of the FTP connection. If you specify the username,
			password, and server attributes, and if no connection
			exists for them, CFML creates one. Calls to cfftp
			with the same connection name reuse the connection.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="open"/>
			<selectedValue attributeName="action" required="true" value="close"/>
		</triggers>
	</parameter>
	<parameter name="proxyserver" type="String" required="false">
		<help><![CDATA[
			The proxy server required to access the URL.
		]]></help>
		<values/>
	</parameter>
	<parameter name="retrycount" type="Numeric" required="false">
		<help><![CDATA[
			Number of retries until failure is reported.
		]]></help>
		<values default="1"/>
	</parameter>
	<parameter name="stoponerror" type="boolean" required="false">
		<help><![CDATA[
			Yes: halts processing, displays an appropriate error.
			No: populates the error	variables
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="passive" type="boolean" required="false">
		<help><![CDATA[
			Yes: enable passive mode
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="asciiextensionist" type="String" required="false">
		<help><![CDATA[
			Delimited list of file extensions that force ASCII
			transfer mode, if transferMode = "auto".
		]]></help>
		<values/>
	</parameter>
	<parameter name="transfermode" type="String" required="false">
		<help><![CDATA[
			ASCII FTP transfer mode
			Binary FTP transfer mode
			Auto FTP transfer mode
		]]></help>
		<values default="auto">
			<value option="auto"/>
			<value option="ascii"/>
			<value option="binary"/>
		</values>
	</parameter>
	<parameter name="failifexists" type="boolean" required="false">
		<help><![CDATA[
			Yes: if a local file with same name exists, getFile fails
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="directory" type="String" required="false">
		<help><![CDATA[
			Directory on which to perform an operation
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="changedir"/>
			<selectedValue attributeName="action" required="true" value="createdir"/>
			<selectedValue attributeName="action" required="true" value="listdir"/>
			<selectedValue attributeName="action" required="true" value="existsdir"/>
		</triggers>
	</parameter>
	<parameter name="localfile" type="String" required="false">
		<help><![CDATA[
			Name of the file on the local file system
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="getfile"/>
			<selectedValue attributeName="action" required="true" value="putfile"/>
		</triggers>
	</parameter>
	<parameter name="remotefile" type="String" required="false">
		<help><![CDATA[
			Name of the file on the FTP server file system.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="getfile"/>
			<selectedValue attributeName="action" required="true" value="putfile"/>
			<selectedValue attributeName="action" required="true" value="existsfile"/>
		</triggers>
	</parameter>
	<parameter name="item" type="String" required="false">
		<help><![CDATA[
			Object of these actions: file or directory.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="remove"/>
			<selectedValue attributeName="action" required="true" value="exists"/>
		</triggers>
	</parameter>
	<parameter name="existing" type="String" required="false">
		<help><![CDATA[
			Current name of the file or directory on the remote server.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="rename"/>
		</triggers>
	</parameter>
	<parameter name="new" type="String" required="false">
		<help><![CDATA[
			New name of file or directory on the remote server
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="rename"/>
		</triggers>
	</parameter>
	<parameter name="name" type="variableName" required="false">
		<help><![CDATA[
			Query name of directory listing.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="listdir"/>
		</triggers>
	</parameter>
</tag>
<!--
	cfgrid
		name = "name"
		height = "integer"
		width = "integer"
		autoWidth = "boolean"
		vSpace = "integer"
		hSpace = "integer"
		align = "value"
		query = "query_name"
		insert = "boolean"
		delete = "boolean"
		sort = "boolean"
		font = "column_font"
		fontSize = "size"
		italic = "boolean"
		bold = "boolean"
		textColor = "web color"
		href = "URL"
		hrefKey = "column_name"
		target = "URL_target"
		appendKey = "boolean"
		highlightHref = "boolean"
		onValidate = "javascript_function"
		onError = "text"
		gridDataAlign = "position"
		gridLines = "boolean"
		rowHeight = "pixels"
		rowHeaders = "boolean"
		rowHeaderAlign = "position"
		rowHeaderFont = "font_name"
		rowHeaderFontSize = "size"
		rowHeaderItalic = "boolean"
		rowHeaderBold = "boolean"
		rowHeaderTextColor = "web color"
		colHeaders = "boolean"
		colHeaderAlign = "position"
		colHeaderFont = "font_name"
		colHeaderFontSize = "size"
		colHeaderItalic = "boolean"
		colHeaderBold = "boolean"
		colHeaderTextColor = "web color"
		bgColor = "web color"
		selectColor = "web color"
		selectMode = "mode"
		maxRows = "number"
		notSupported = "text"
		pictureBar = "boolean"
		insertButton = "text"
		deleteButton = "text"
		sortAscendingButton = "text"
		sortDescendingButton = "text"
	zero or more cfgridcolumn and cfgridrow tags
	/cfgrid
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfgrid" single="false" xmlstyle="false">
	<help><![CDATA[
		Used within the cfform tag. Puts a grid control (a table of
		data) in a CFML form. To specify grid columns and row
		data, use the cfgridcolumn and cfgridrow tags, or use the
		query attribute, with or without cfgridcolumn tags.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name of grid element.
		]]></help>
		<values/>
	</parameter>
	<parameter name="height" type="Numeric" required="false">
		<help><![CDATA[
			Control's height, in pixels.
			Default for applet: 300
		]]></help>
		<values default="300"/>
	</parameter>
	<parameter name="width" type="Numeric" required="false">
		<help><![CDATA[
			Control's width, in pixels.
			Default for applet: 300
		]]></help>
		<value default="300"/>
	</parameter>
	<parameter name="autowidth" type="boolean" required="false">
		<help><![CDATA[
			Yes: sets column widths so that all columns display within
				grid width.
			No: sets columns to equal widths. User can resize columns.
				Horizontal scroll bars are not available, because if
				you specify a column width and set autoWidth = "Yes",
				CFML sets to this width, if possible
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="vspace" type="Numeric" required="false">
		<help><![CDATA[
			Vertical margin above and below control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="hspace" type="Numeric" required="false">
		<help><![CDATA[
			Horizontal spacing to left and right of control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="align" type="String" required="false">
		<help><![CDATA[
			Alignment of the grid cell contents
		]]></help>
		<values>
			<value option="top"/>
			<value option="left"/>
			<value option="bottom"/>
			<value option="baseline"/>
			<value option="texttop"/>
			<value option="absbottom"/>
			<value option="middle"/>
			<value option="absmiddle"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="query" type="String" required="false">
		<help><![CDATA[
			Name of query associated with grid control.
		]]></help>
		<values/>
	</parameter>
	<parameter name="insert" type="boolean" required="false">
		<help><![CDATA[
			User can insert row data in grid.
			Takes effect only if selectmode="edit"
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="delete" type="boolean" required="false">
		<help><![CDATA[
			User can delete row data from grid.
			Takes effect only if selectmode="edit"
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="sort" type="boolean" required="false">
		<help><![CDATA[
			The sort button performs simple text sort on column. User
			can sort columns by clicking column head or by clicking
			sort buttons. Not valid with selectmode=browse.

			Yes: sort buttons display on grid control
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="font" type="String" required="false">
		<help><![CDATA[
			Font of data in column.
		]]></help>
		<values default="arial">
			<value option="arial"/>
			<value option="times"/>
			<value option="courier"/>
			<value option="arialunicodeMS"/>
		</values>
	</parameter>
	<parameter name="fontsize" type="Numeric" required="false">
		<help><![CDATA[
			Size of text in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="italic" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in italics
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="bold" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in bold
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="textcolor" type="String" required="false">
		<help><![CDATA[
			Text color for control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values default="black">
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="href" type="String" required="false">
		<help><![CDATA[
			URL or query column name that contains a URL to hyperlink
			each grid column with.
		]]></help>
		<values/>
	</parameter>
	<parameter name="hrefkey" type="String" required="false">
		<help><![CDATA[
			The query column to use for the value appended to the href
			URL of each column, instead of the column's value.
		]]></help>
		<values/>
	</parameter>
	<parameter name="target" type="String" required="false">
		<help><![CDATA[
			Frame in which to open link specified in href.
		]]></help>
		<values/>
	</parameter>
	<parameter name="appendkey" type="boolean" required="false">
		<help><![CDATA[
			When used with href, passes CFTREEITEMKEY variable
			with the value of the selected tree item in URL to the
			application page specified in the cfform action
			attribute
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="highlighthref" type="boolean" required="false">
		<help><![CDATA[
			Yes: Highlights links that are associated with a cftreeitem
				with a URL attribute value.
			No: Disables highlight.
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="onvalidate" type="String" required="false">
		<help><![CDATA[
			JavaScript function to validate user input. The form object,
			input object, and input object value are passed to the
			specified routine, which should return True if validation
			succeeds; False, otherwise.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			JavaScript function to execute if validation fails.
		]]></help>
		<values/>
	</parameter>
	<parameter name="griddataalign" type="String" required="false">
		<help><![CDATA[
			Left: left-aligns data within column.
			Right: right-aligns data within column.
			Center: center-aligns data within column.
		]]></help>
		<values default="left">
			<value option="left"/>
			<value option="center"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="gridlines" type="boolean" required="false">
		<help><![CDATA[
			Yes: enables row and column rules in grid control
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="rowheight" type="Numeric" required="false">
		<help><![CDATA[
			Minimum row height, in pixels, of grid control. Used with
			cfgridcolumn type = "Image"; defines space for graphics to
			display in row.
		]]></help>
		<values/>
	</parameter>
	<parameter name="rowheaders" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays a column of numeric row labels in grid
			control
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="rowheaderalign" type="String" required="false">
		<help><![CDATA[
			Left: left-aligns data within row header
			Right: right-aligns data within row header
			Center: center-aligns data within row header
		]]></help>
		<values default="left">
			<value option="left"/>
			<value option="center"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="rowheaderfont" type="String" required="false">
		<help><![CDATA[
			Font of data in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="rowheaderfontsize" type="Numeric" required="false">
		<help><![CDATA[
			Size of text in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="rowheaderitalic" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in italics
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="rowheaderbold" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in bold
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="rowheadertextcolor" type="String" required="false">
		<help><![CDATA[
			Text color for control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values default="black">
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="colheaders" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays a column of numeric row labels in grid
			control
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="colheaderalign" type="String" required="false">
		<help><![CDATA[
			Left: left-aligns data within row header
			Right: right-aligns data within row header
			Center: center-aligns data within row header
		]]></help>
		<values default="left">
			<value option="left"/>
			<value option="center"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="colheaderfont" type="String" required="false">
		<help><![CDATA[
			Font of data in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="colheaderfontsize" type="Numeric" required="false">
		<help><![CDATA[
			Size of text in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="colheaderitalic" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in italics
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="colheaderbold" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in bold
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="colheadertextcolor" type="String" required="false">
		<help><![CDATA[
			Text color for control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="bgcolor" type="String" required="false">
		<help><![CDATA[
			Background color of grid control.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="selectcolor" type="String" required="false">
		<help><![CDATA[
			Background color for a selected item.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="selectmode" type="String" required="false">
		<help><![CDATA[
			Selection mode for items in the control.
			- Edit: user can edit grid data. Selecting a cell opens
			  the editor for the cell type.
			- Row: user selections automatically extend to the row
			  that contains selected cell.
			- Single: user selections are limited to selected cell.
			- Column: user selections automatically extend
			  to column that contains selected cell.
			- Browse: user can only browse grid data.
		]]></help>
		<values>
			<value option="edit"/>
			<value option="single"/>
			<value option="row"/>
			<value option="column"/>
			<value option="browse"/>
		</values>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of rows to display in grid.
		]]></help>
		<values/>
	</parameter>
	<parameter name="notsupported" type="String" required="false">
		<help><![CDATA[
			Text to display if a page that contains a Java applet-based
			cfform control is opened by a browser that does not
			support Java or has Java support disabled.
			Default:
			"<b>Browser must support Java to <br>view ColdFusion Java
			Applets!</b>"
		]]></help>
		<values default="&lt;b&gt;Browser must support Java to &lt;br&gt;view ColdFusion Java Applets!&lt;/b&gt;"/>
	</parameter>
	<parameter name="picturebar" type="boolean" required="false">
		<help><![CDATA[
			Yes: images for Insert, Delete, Sort buttons
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="insertbutton" type="String" required="false">
		<help><![CDATA[
			Text for the insert button. Takes effect only if
			selectmode="edit".
		]]></help>
		<values default="Insert">
			<value option="Insert"/>
			<value option="Add"/>
		</values>
	</parameter>
	<parameter name="deletebutton" type="String" required="false">
		<help><![CDATA[
			Text of Delete button text. Takes effect only if
			selectmode="edit".
		]]></help>
		<values default="Delete">
			<value option="Delete"/>
			<value option="Remove"/>
		</values>
	</parameter>
	<parameter name="sortascendingbutton" type="String" required="false">
		<help><![CDATA[
			Sort button text
		]]></help>
		<values default="A -&gt; Z">
			<value option="A -&gt; Z"/>
			<value option="Asc"/>
			<value option="Ascending"/>
		</values>
	</parameter>
	<parameter name="sortdescendingbutton" type="String" required="false">
		<help><![CDATA[
			Sort button text
		]]></help>
		<values default="Z -&gt; A">
			<value option="Z -&gt; A"/>
			<value option="Desc"/>
			<value option="Descending"/>
		</values>
	</parameter>
</tag>
<!--
	cfgridcolumn
		name = "column_name"
		header = "header"
		width = "column_width"
		type = "type"
		display = "boolean"
		select = "boolean"
		font = "column_font"
		fontSize = "size"
		italic = "boolean"
		bold = "boolean"
		textColor = "web color" or "expression"
		bgColor = "web color" or "expression"
		dataAlign = "position"
		href = "URL"
		hrefKey = "column_name"
		target = "URL_target"
		headerFont = "font_name"
		headerFontSize = "size"
		headerItalic = "boolean"
		headerBold = "boolean"
		headerTextColor = "web color"
		headerAlign = "position"
		numberFormat = "format"
		values = "Comma-separated strings and/or numeric range"
		valuesDisplay = "Comma-separated strings and/or numeric range"
		valuesDelimiter = "delimiter character"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfgridcolumn" single="true" xmlstyle="false">
	<help><![CDATA[
		Used with the cfgrid tag in a cfform. Use this tag to specify
		column data in a cfgrid control. The font and alignment
		attributes used in cfgridcolumn override global font or
		alignment settings defined in cfgrid.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name of grid column element. If grid uses a query, column
			name must specify name of a query column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="header" type="boolean" required="false">
		<help><![CDATA[
			Column header text. Used only if cfgrid colHeaders = "Yes".
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="width" type="Numeric" required="false">
		<help><![CDATA[
			Column width, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="font" type="String" required="false">
		<help><![CDATA[
			Font of data in column.
		]]></help>
		<values default="arial">
			<value option="arial"/>
			<value option="times"/>
			<value option="courier"/>
			<value option="arialunicodeMS"/>
		</values>
	</parameter>
	<parameter name="fontsize" type="Numeric" required="false">
		<help><![CDATA[
			Size of text in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="italic" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in italics
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="bold" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in bold
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="bgcolor" type="String" required="false">
		<help><![CDATA[
			Background color of control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="textcolor" type="String" required="false">
		<help><![CDATA[
			Text color for control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="href" type="String" required="false">
		<help><![CDATA[
			URL o r query column name that contains a URL to hyperlink
			each grid column with.
		]]></help>
		<values/>
	</parameter>
	<parameter name="hrefkey" type="String" required="false">
		<help><![CDATA[
			The query column to use for the value appended to the href
			URL of each column, instead of the column's value.
		]]></help>
		<values/>
	</parameter>
	<parameter name="target" type="String" required="false">
		<help><![CDATA[
			Frame in which to open link specified in href.
		]]></help>
		<values/>
	</parameter>
	<parameter name="select" type="boolean" required="false">
		<help><![CDATA[
			Yes: user can select the column in grid control.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="display" type="boolean" required="false">
		<help><![CDATA[
			No: hides column
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			image: grid displays image that corresponds to value in
			column (a built-in CFML image name, or an image in
			cfide\classes directory or subdirectory referenced with
			relative URL). If image is larger than column cell, it is
			clipped to fit. Built-in image names
		]]></help>
		<values>
			<value option="cd"/>
			<value option="computer"/>
			<value option="document"/>
			<value option="element"/>
			<value option="folder"/>
			<value option="floppy"/>
			<value option="fixed"/>
			<value option="remote"/>
		</values>
	</parameter>
	<parameter name="headerfont" type="String" required="false">
		<help><![CDATA[
			Font of data in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="headerfontsize" type="Numeric" required="false">
		<help><![CDATA[
			Size of text in column.
		]]></help>
		<values/>
	</parameter>
	<parameter name="headeritalic" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in italics
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="headerbold" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays grid control text in bold
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="headertextcolor" type="String" required="false">
		<help><![CDATA[
			Text color for control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="dataalign" type="String" required="false">
		<help><![CDATA[
			Column data alignment
		]]></help>
		<values>
			<value option="left"/>
			<value option="right"/>
			<value option="center"/>
		</values>
	</parameter>
	<parameter name="headeralign" type="String" required="false">
		<help><![CDATA[
			Column header text alignment
		]]></help>
		<values>
			<value option="left"/>
			<value option="right"/>
			<value option="center"/>
		</values>
	</parameter>
	<parameter name="numberformat" type="String" required="false">
		<help><![CDATA[
			Format for displaying numeric data in grid. See
			numberFormat mask characters.
		]]></help>
		<values/>
	</parameter>
	<parameter name="values" type="String" required="false">
		<help><![CDATA[
			Formats cells in column as drop-down list boxes; specify
			items in drop-down list. Example:
			values = "arthur, scott, charles, 1-20, mabel"
		]]></help>
		<values/>
	</parameter>
	<parameter name="valuesdisplay" type="String" required="false">
		<help><![CDATA[
			Maps elements in values attribute to string to display in
			drop-down list. Delimited strings and/or numeric range(s).
		]]></help>
		<values/>
	</parameter>
	<parameter name="valuesdelimiter" type="String" required="false">
		<help><![CDATA[
			Maps elements in values attribute to string to display in
			drop-down list. Delimited strings and/or numeric range(s).
		]]></help>
		<values>
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
</tag>
<!--
	cfgridrow
		data = "col1, col2, ..."
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfgridrow" single="true" xmlstyle="false">
	<help><![CDATA[
		Lets you define a cfgrid that does not use a query as source
		for row data. If a query attribute is specified in cfgrid, the
		cfgridrow tags are ignored.
	]]></help>
	<parameter name="data" type="String" required="true">
		<help><![CDATA[
			Delimited list of column values. If a value contains a
			comma, it must be escaped with another comma
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfgridupdate
		grid = "gridname"
		dataSource = "data source name"
		dbType = "type"
		dbServer = "dbms"
		dbName = "database name"
		tableName = "table name"
		connectString = "connection string"
		username = "data source username"
		password = "data source password"
		tableOwner = "table owner"
		tableQualifier = "qualifier"
		provider = "COMProvider" 
		providerDSN = "datasource" 
		keyOnly = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfgridupdate" single="true" xmlstyle="false">
	<help><![CDATA[
		Used within a cfgrid tag. Updates data sources directly from
		edited grid data. This tag provides a direct interface with
		your data source.

		This tag applies delete row actions first, then insert row
		actions, then update row actions. If it encounters an error,
		it stops processing rows.
	]]></help>
	<parameter name="grid" type="String" required="true">
		<help><![CDATA[
			Name of cfgrid form element that is the source for the
			update action.
		]]></help>
		<values/>
	</parameter>
	<parameter name="datasource" type="String" required="true">
		<help><![CDATA[
			Name of data source for the update action.
		]]></help>
		<values/>
	</parameter>
	<parameter name="tablename" type="String" required="true">
		<help><![CDATA[
			Table in which to insert form fields.

			ORACLE drivers: must be uppercase.
			Sybase driver: case-sensitive. Must be the same case used
				when table was created
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Overrides username specified in ODBC setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Overrides password specified in ODBC setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="tableowner" type="String" required="false">
		<help><![CDATA[
			Table owner, if supported.
		]]></help>
		<values/>
	</parameter>
	<parameter name="tablequalifier" type="String" required="false">
		<help><![CDATA[
			For data sources that support table qualifiers, use this
			field to specify qualifier for table. The purpose of table
			qualifiers varies among drivers. For SQL Server and
			Oracle, qualifier refers to name of database that contains
			table. For Intersolv dBASE driver, qualifier refers to
			directory where DBF files are located.
		]]></help>
		<values/>
	</parameter>
	<parameter name="keyonly" type="boolean" required="false">
		<help><![CDATA[
			Applies to the update action:
			Yes: the WHERE criteria are limited to the key values
			No: the WHERE criteria include key values and the original
				values of changed fields
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfheader
		name = "header_name"
		value = "header_value"
		charset="charset"
	OR
	cfheader
		statusCode = "status_code"
		statusText = "status_text"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfheader" single="true" xmlstyle="false">
	<help><![CDATA[
		Generates custom HTTP response headers to return to the client.
	]]></help>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			Header name
			Required if statusCode not specified
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			HTTP header value
		]]></help>
		<values/>
	</parameter>
	<parameter name="charset" type="String" required="false">
		<help><![CDATA[
			The character encoding in which to encode the header value.

			For more information on character encodings, see:
			www.w3.org/International/O-charset.html.
		]]></help>
		<values>
			<value option="utf-8"/>
			<value option="iso-8859-1"/>
			<value option="windows-1252"/>
			<value option="us-ascii"/>
			<value option="shift_jis"/>
			<value option="iso-2022-jp"/>
			<value option="euc-jp"/>
			<value option="euc-kr"/>
			<value option="big5"/>
			<value option="euc-cn"/>
			<value option="utf-16"/>
		</values>
	</parameter>
	<parameter name="statuscode" type="Numeric" required="false">
		<help><![CDATA[
			HTTP status code
			Required if name not specified
  				]]></help>
		<values/>
	</parameter>
	<parameter name="statustext" type="String" required="false">
		<help><![CDATA[
			Explains status code
  				]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfhtmlhead
		text = "text"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfhtmlhead" single="true" xmlstyle="false">
	<help><![CDATA[
		Writes text to the head section of a generated HTML page. It is
		useful for embedding JavaScript code, or putting other HTML
		tags, such as meta, link, title, or base in an HTML page
		header.
	]]></help>
	<parameter name="text" type="String" required="true">
		<help><![CDATA[
			Text to add to the <head> area of an HTML page.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfhttp
		url = "server_URL"
		port = "port_number"
		method = "method_name"
		proxyServer = "hostname"
		proxyPort = "port_number"
		username = "username"
		password = "password"
		userAgent = "user_agent"
		resolveURL = "boolean"
		throwOnError = "yes" or no"
		redirect = "boolean"
		timeout = "timeout_period"
		path = "path"
		file = "filename"
		name = "queryname"
		columns = "query_columns"
		firstrowasheaders = "boolean"
		delimiter = "character"
		textQualifier = "character"
	   [cfhttpparam tags - optional for some methods]
   /cfhttp
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfhttp" single="false" xmlstyle="false" hybrid="true">
	<help><![CDATA[
		Generates an HTTP request and handles the response from the
		server.
	]]></help>
	<return type="cfhttp" name="cfhttp"/>
	<parameter name="URL" type="URL" required="true">
		<help><![CDATA[
			Address of the resource on the server which will handle
			the request. The URL must include the hostname or IP
			address.

			If you do not specify the transaction protocol (http:// or
			https://), CFML defaults to http.

			If you specify a port number in this attribute, it
			overrides any port attribute value.

			The cfhttppparam tag URL attribute appends query string
			attribute-value pairs to the URL.
		]]></help>
		<values/>
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			Port number on the server to which to send the request.
			A port value in the url attribute overrides this value.
			(default: http 80 - https 443)
		]]></help>
		<values default="80"/>
	</parameter>
	<parameter name="method" type="String" required="false">
		<help><![CDATA[
			* GET Requests information from the server. Any data that
			  the server requires to identify the requested
			  information must be in the URL or in cfhttp type="URL"
			  tags.
			* POST Sends information to the server for processing.
			  Requires one or more cfhttpparam tags. Often used for
			  submitting form-like data.
		]]></help>
		<values default="get">
			<value option="get"/>
			<value option="post"/>
		</values>
	</parameter>
	<parameter name="proxyserver" type="String" required="false">
		<help><![CDATA[
			The proxy server required to access the URL.
		]]></help>
		<values/>
	</parameter>
	<parameter name="proxyport" type="Numeric" required="false">
		<help><![CDATA[
			The port to use on The proxy server.
		]]></help>
		<values default="80"/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			A username. May be required by server.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			A password. May be required by server
		]]></help>
		<values/>
	</parameter>
	<parameter name="useragent" type="String" required="false">
		<help><![CDATA[
			Text to put in the user agent request header. Used to
			identify the request client software. Can make the
			CFML application appear to be a browser.
		]]></help>
		<values default="ColdFusion"/>
	</parameter>
	<parameter name="resolveurl" type="boolean" required="false">
		<help><![CDATA[
			No does not resolve URLs in the response body. As a result,
				any relative URL links in the response body do not work.
			Yes resolves URLs in the response body to absolute URLs,
				including the port number, so that links in a retrieved
				page remain functional.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="throwonerror" type="boolean" required="false">
		<help><![CDATA[
			Yes if the server returns an error response code, throws
				an exception that can be caught using the cftry and
				cfcatch or CFML error pages.
			No does not throw an exception if an error response is
				returned. In this case, your application can use the
				cfhttp.StatusCode variable to determine if there was
				an error and its cause.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="redirect" type="boolean" required="false">
		<help><![CDATA[
			If the response header includes a Location field,
			determines whether to redirect execution to the URL
			specified in the field.
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Value, in seconds of the maximum time the request can take.
			If the timeout passes without a response, CFML
			considers the request to have failed.
		]]></help>
		<values/>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			Sepcifies a character that separates quiery columns.
		]]></help>
		<values>
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
	<parameter name="name" type="String" required="false"><!-- VariableName -->
		<help><![CDATA[
			Tells ColdFusion to create a query object with the given
			name from the returned HTTP response body.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get"/>
			<selectedValue attributeName="method" required="false" value="post"/>
		</triggers>
	</parameter>
	<parameter name="columns" type="String" required="false">
		<help><![CDATA[
			The column names for the query, separated by commas, with no
			spaces. Column names must start with a letter. The remaining
			characters can be letters, numbers, or underscore
			characters (_).
			
			If there are no column name headers in the response,
			specify this attribute to identify the column names.
			
			If you specify this attribute, and the firstrowasHeader
			attribute is True (the default), the column names specified
			by this attribute replace the first line of the response.
			You can use this behavior to replace the column names
			retrieved by the request with your own names.
			
			If a duplicate column heading is encountered in either this
			attribute or in the column names from the response,
			ColdFusion appends an underscore to the name to make it
			unique.
			
			If the number of columns specified by this attribute does
			not equal the number of columns in the HTTP response body,
			ColdFusion generates an error.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get"/>
			<selectedValue attributeName="method" required="false" value="post"/>
		</triggers>
	</parameter>
	<parameter name="firstrowasheaders" type="boolean" required="false">
		<help><![CDATA[
			Determines how ColdFusion processes the first row of the
			query record set:
			* yes: processes the first row as column heads. If you
			specify a columns attribute, ColdFusion ignores the
			first row of the file.
			* no: processes the first row as data. If you do not
			specify a columns attribute, ColdFusion generates column
			names by appending numbers to the word "column"; for
			example, "column_1".
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get"/>
			<selectedValue attributeName="method" required="false" value="post"/>
		</triggers>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			A character that separates query columns. The response
			body must use this character to separate the query columns.
		]]></help>
		<values default=",">
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get"/>
			<selectedValue attributeName="method" required="false" value="post"/>
		</triggers>
	</parameter>
	<parameter name="textqualifier" type="String" required="false">
		<help><![CDATA[
			A character that, optionally, specifies the start and end
			of a text column. This character must surround any text
			fields in the response body that contain the delimiter
			character as part of the field value.
			
			To include this character in column text, escape it by
			using two characters in place of one. For example, if the
			qualifier is a double-quotation mark, escape it as "". 
		]]></help>
		<values default="&quot;">
			<value option="&quot;"/>
			<value option="'"/>
		</values>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get"/>
			<selectedValue attributeName="method" required="false" value="post"/>
		</triggers>
	</parameter>
</tag>
<!--
	cfhttpparam
		type = "transaction type"
		name = "data name"
		value = "data value"
		file = "filename"
		encoded = "boolean"
		mimeType = "MIME type designator"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfhttpparam" single="true" xmlstyle="false">
	<help><![CDATA[
		Allowed inside cfhttp tag bodies only. Required for cfhttp POST
		operations. Optional for all others. Specifies parameters to
		build an HTTP request.
	]]></help>
	<parameter name="type" type="String" required="true">
		<help><![CDATA[
			Information type
			* CGI: Specifies an HTTP header. CFML URL encodes
				the header by default.
			* File: Tells CFML to send the contents of the
				specified file. CFML does not URL encode the
				file contents
			* URL: Specifies a URL query string name-value pair to
				append to the cfhttp url attribute. CFML URL
				encodes the query string.
			* FormField: Specifies a form field to send. CFML
				URL encodes the Form field by default.
			* Cookie: Specifies a cookie to send as an HTTP header.
				CFML URL encodes the cookie.
		]]></help>
		<values>
			<value option="cgi"/>
			<value option="file"/>
			<value option="url"/>
			<value option="formfield"/>
			<value option="cookie"/>
		</values>
	</parameter>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			Variable name for data that is passed. Ignored for Body
			and XML types. For File type, specifies the filename to
			send in the request.
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Value of the data that is sent. Ignored for File type. The
			value must contain string data or data that CFML can
			convert to a string for all type attributes except Body.
			Body types can have string or binary values.
		]]></help>
		<values/>
	</parameter>
	<parameter name="file" type="String" required="false">
		<help><![CDATA[
			Applies to File type; ignored for all other types. The
			absolute path to the file that is sent in the request body.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfif expression
	   [HTML and CFML tags]
	/cfif
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfif" single="false" xmlstyle="false">
	<help><![CDATA[
		Creates simple and compound conditional statements in CFML.
		Tests an expression, variable, function return value, or
		string. Used, optionally, with the cfelse and cfelseif tags.
	]]></help>
</tag>
<!--
	cfinclude
		template = "template_name"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfinclude" single="true" xmlstyle="false">
	<help><![CDATA[
		Embeds references to CFML pages in CFML. You can embed
		cfinclude tags recursively. For another way to encapsulate
		CFML, see cfmodule. (A CFML page was formerly sometimes
		called a CFML template or a template.)
	]]></help>
	<parameter name="template" type="String" required="true">
		<help><![CDATA[
			A logical path to a CFML page.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfindex
		collection = "collection_name"
		action = "action"
		type = "type"
		title = "title"
		key = "ID"
		body = "body"
		custom1 = "custom_value"
		custom2 = "custom_value"
		URLpath = "URL"
		extensions = "file_extensions"
		query = "query_name"
		recurse = "boolean"
		language = "language"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfindex" single="true" xmlstyle="false">
	<help><![CDATA[
		Populates a Verity search engine collection with an index of
		documents on a file system or of CFML query result sets.

		A collection must exist before it can be populated.
	]]></help>
	<parameter name="collection " type="String" required="true">
		<help><![CDATA[
			Name of a collection that is registered by CFML; for
				example, "personnel"
			Name and absolute path of a collection that is not
			registered by CFML; for example:
			"e:\collections\personnel"
		]]></help>
		<values/>
	</parameter>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
			- update: updates a collection and adds key to the index.
			- delete: removes collection documents as specified by
			the key attribute.
			- purge: deletes all of the documents in a collection.
			Causes the collection to be taken offline, preventing
			searches.
			- refresh: deletes all of the documents in a collection,
			and then performs an update.
		]]></help>
		<values>
			<value option="update"/>
			<value option="delete"/>
			<value option="purge"/>
			<value option="refresh"/>
		</values>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			file: using the key attribute value of the query result as
				input, applies action value to filenames or filepaths.
			path: using the key attribute value of the query result as
				input, applies action to filenames or filepaths that
				pass the extensions filter
			custom: If action = "update" or "delete": applies action to
				custom entities in query results.
		]]></help>
		<values>
			<value option="file"/>
			<value option="path"/>
			<value option="custom"/>
		</values>
	</parameter>
	<parameter name="title" type="String" required="false">
		<help><![CDATA[
			* Title for collection
			* Query column name for type and a valid query name
			Permits searching collections by title or displaying a
			separate title from the key
		]]></help>
		<values/>
	</parameter>
	<parameter name="key" type="String" required="false">
		<help><![CDATA[
			* Absolute path and filename, if type = "file"
			* Absolute path, if type = "path"
			* A query column name (typically, the primary key column
				name), if type = "custom"
			* A query column name, if type = any other value

			This attribute is required for the actions listed, unless
			you intend for its value to be an empty string.
		]]></help>
		<values/>
	</parameter>
	<parameter name="body" type="String" required="false">
		<help><![CDATA[
			* ASCII text to index
			* Query column name(s), if name is specified in query

			You can specify columns in a delimited list. For example:
			"emp_name, dept_name, location"
		]]></help>
		<values/>
	</parameter>
	<parameter name="custom1" type="String" required="false">
		<help><![CDATA[
			Custom field in which you can store data during an indexing
			operation. Specify a query column name for type, and a
			query name.
		]]></help>
		<values/>
	</parameter>
	<parameter name="custom2" type="String" required="false">
		<help><![CDATA[
			Custom field in which you can store data during an indexing
			operation. Specify a query column name for type, and a
			query name.
		]]></help>
		<values/>
	</parameter>
	<parameter name="urlpath" type="URL" required="false">
		<help><![CDATA[
			If type="file" or "path", specifies the URL path. When the
			collection is searched with cfsearch, this pathname is
			prefixed to filenames and returned as the url attribute.
		]]></help>
		<values/>
	</parameter>
	<parameter name="extensions" type="String" required="false">
		<help><![CDATA[
			Delimited list of file extensions that CFML uses to
			index files, if type = "Path".
			"*." returns files with no extension.

			For example: the following code returns files with a
			listed extension or no extension:
			extensions = ".htm, .html, .cfm, .cfml, "*."
		]]></help>
		<values/>
	</parameter>
	<parameter name="query" type="String" required="false">
		<help><![CDATA[
			Query against which collection is generated
		]]></help>
		<values/>
	</parameter>
	<parameter name="recurse" type="boolean" required="false">
		<help><![CDATA[
			Yes: if type = "path", directories below the path
				specified in key are included in indexing operation
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="language" type="String" required="false">
		<help><![CDATA[
			For options, see cfcollection. Requires the appropriate
			Verity Locales language pack (Western Europe, Asia,
			Multilanguage, Eastern Europe/Middle Eastern).
		]]></help>
		<values default="english"/>
	</parameter>
	<parameter name="status" type="String" required="false">
		<help><![CDATA[
			The name of the structure into which ColdFusion MX
			returns status information.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfinput 
		type = "input_type"
		name = "name"
		value = "initial_value"
		required = "boolean"
		range = "min_value, max_value"
		validate = "data_type"
		onValidate = "javascript_function"
		pattern = "regexp"
		message = "validation_msg"
		onError = "text"
		size = "integer"
		maxLength = "integer"
		checked 
		passThrough = "HTML_attributes"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfinput" single="true" xmlstyle="false">
	<help><![CDATA[
		Used within the cfform tag, to place radio buttons, check boxes,
		or text boxes on a form. Provides input validation for the
		specified control type.
	]]></help>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			text: creates a text entry box control
			radio: creates a radio button control
			checkbox: creates a check box control
			password: creates a password entry control
		]]></help>
		<values default="text">
			<value option="text"/>
			<value option="radio"/>
			<value option="checkbox"/>
			<value option="password"/>
		</values>
	</parameter>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name for form input element.
		]]></help>
		<values/>
	</parameter>
	<parameter name="required" type="boolean" required="false">
		<help><![CDATA[
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="validate" type="String" required="false">
		<help><![CDATA[
			date: verifies format mm/dd/yy.
			eurodate: verifies date format dd/mm/yyyy.
			time: verifies time format hh:mm:ss.
			float: verifies floating point format.
			integer: verifies integer format.
			telephone: verifies telephone format ###-###-####. The
				separator can be a blank. Area code and exchange must
				begin with digit 1 - 9.
			zipcode: verifies, in U.S. formats only, 5- or 9-digit
				format #####-####. The separator can be a blank.
			creditcard: strips blanks and dashes; verifies number using
				mod10 algorithm. Number must have 13-16 digits.
			social_security_number: verifies format ###-##-####. The
				separator can be a blank.
			regular_expression: matches input against pattern
				attribute.
		]]></help>
		<values>
			<value option="date"/>
			<value option="eurodate"/>
			<value option="time"/>
			<value option="float"/>
			<value option="integer"/>
			<value option="telephone"/>
			<value option="zipcode"/>
			<value option="creditcard"/>
			<value option="social_security_number"/>
			<value option="regular_expression"/>
		</values>
	</parameter>
	<parameter name="message" type="String" required="false">
		<help><![CDATA[
			Message text to display if validation fails
		]]></help>
		<values/>
	</parameter>
	<parameter name="range" type="String" required="false">
		<help><![CDATA[
			Minimum and maximum value range, separated by a comma. If
			type = "text" or "password", this applies only to numeric
			data.
		]]></help>
		<values/>
	</parameter>
	<parameter name="maxlength" type="Numeric" required="false">
		<help><![CDATA[
			Maximum length of text entered, if type=text or password.
		]]></help>
		<values/>
	</parameter>
	<parameter name="pattern" type="Regex" required="false">
		<help><![CDATA[
			JavaScript regular expression pattern to validate input.
			ColdFusion uses this attribute only if you specify regex
			in the validate attribute. Omit leading and trailing slashes.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onvalidate" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to validate user input. The form
			 object, input object, and input object values are passed
			 to the routine, which should return True if validation
			 succeeds, and False otherwise. If used, the validate
			 attribute is ignored.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to execute if validation fails.
		]]></help>
		<values/>
	</parameter>
	<parameter name="size" type="Numeric" required="false">
		<help><![CDATA[
			Size of input control. Ignored, if type=radio or checkbox.
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Initial value for form input element.
		]]></help>
		<values/>
	</parameter>
	<parameter name="checked" type="boolean" required="false">
		<help><![CDATA[
			Selects a control. No value is required. Applies if
			type=radio or checkbox.
			Default: false
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="passthrough" type="String" required="false">
		<help><![CDATA[
			Passes one or more arbitrary attribute-value pairs to the
			HTML code that is generated for the tag. You can use either
			of the following formats to include the quotation marks
			around the attribute value:

			passthrough="ID=""myID"""
			passthrough='ID="myID"'

			The second format, which surrounds all the attribute-value
			pairs to be passed through in single quotation marks is
			clearer, particularly when you pass multiple HTML
			attributes.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfinsert
		dataSource = "ds_name"
		tableName = "tbl_name"
		tableOwner = "owner"
		tableQualifier = "tbl_qualifier"
		username = "username"
		password = "password"
		formFields = "formfield1, formfield2, ..."
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfinsert" single="true" xmlstyle="false">
	<help><![CDATA[
		Inserts records in data sources from data in a CFML form
		or form Scope.
	]]></help>
	<parameter name="datasource" type="String" required="true">
		<help><![CDATA[
			Data source; contains table.
		]]></help>
		<values/>
	</parameter>
	<parameter name="tablename" type="String" required="true">
		<help><![CDATA[
			Table in which to insert form fields.

			ORACLE drivers: must be uppercase.
			Sybase driver: case-sensitive. Must be the same case used
				when table was created
		]]></help>
		<values/>
	</parameter>
	<parameter name="tableowner" type="String" required="false">
		<help><![CDATA[
			For data sources that support table ownership (such as SQL
			Server, Oracle, and Sybase SQL Anywhere), use this field to
			specify the owner of the table.
		]]></help>
		<values/>
	</parameter>
	<parameter name="tablequalifier" type="String" required="false">
		<help><![CDATA[
			For data sources that support table qualifiers, use this
			field to specify qualifier for table. The purpose of table
			qualifiers varies among drivers. For SQL Server and
			Oracle, qualifier refers to name of database that contains
			table. For Intersolv dBASE driver, qualifier refers to
			directory where DBF files are located.
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Overrides username specified in ODBC setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Overrides password specified in ODBC setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="formfields" type="String" required="false">
		<help><![CDATA[
			Comma-delimited list of form fields to insert. If not
			specified, all fields in the form are included.

			If a form field is not matched by a column name in the
			database, CFML throws an error.

			The database table key field must be present in the form.
			It may be hidden.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfldap
		server = "server_name"
		port = "port_number"
	   username = "name"
	   password = "password"
	   action = "action"
	   name = "name"
	   timeout = "seconds"
	   maxRows = "number"
	   start = "distinguished_name"
	   scope = "scope"
	   attributes = "attribute, attribute"
		returnAsBinary = "column_name, column_name"
	   filter = "filter"
	   sort = "attribute[, attribute]..."
	   sortControl = "nocase" and/or "desc" or "asc"
	   dn = "distinguished_name"
	   startRow = "row_number"
	   modifyType = "replace" or "add" or "delete"
	   rebind = "boolean"
	   referral = "number_of_allowed_hops"
	   secure = "multi_field_security_string"
	   separator = "separator_character"
	   delimiter = "delimiter_character"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfldap" single="true" xmlstyle="false">
	<help><![CDATA[
		Provides an interface to a Lightweight Directory Access Protocol
		(LDAP) directory server, such as the Netscape Directory Server.
	]]></help>
	<parameter name="server" type="String" required="true">
		<help><![CDATA[
			Host name or IP address of LDAP server.
		]]></help>
		<values/>
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			Port of the LDAP server (default 389).
		]]></help>
		<values default="389"/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			The User ID. Required if secure = "CFSSL_BASIC"
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Password that corresponds to user name.
			If secure = "CFSSL_BASIC", V2 encrypts the password before
			transmission.
		]]></help>
		<values/>
	</parameter>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
			* query: returns LDAP entry information only. Requires name,
				start, and attributes attributes.
			* add: adds LDAP entries to LDAP server. Requires attributes
				attribute.
			* modify: modifies LDAP entries, except distinguished name dn
				attribute, on LDAP server. Requires dn. See modifyType attribute.
			* modifyDN: modifies distinguished name attribute for LDAP
				entries on LDAP server. Requires dn.
			* delete: deletes LDAP entries on an LDAP server. Requires dn.
		]]></help>
		<values default="query">
			<value option="query"/>
			<value option="add"/>
			<value option="modify"/>
			<value option="modifyDN"/>
			<value option="delete"/>
		</values>
	</parameter>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			Required if action = "Query"
			Name of LDAP query. The tag validates the value.
		]]></help>
		<values/>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Maximum length of time, in seconds, to wait for LDAP processing.
			Default 60000
		]]></help>
		<values default="60000"/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of entries for LDAP queries.
		]]></help>
		<values/>
	</parameter>
	<parameter name="start" type="Numeric" required="false">
		<help><![CDATA[
			Required if action = "Query"
			Distinguished name of entry to be used to start a search.
		]]></help>
		<values/>
	</parameter>
	<parameter name="scope" type="String" required="false">
		<help><![CDATA[
			Scope of search, from entry specified in start attribute for
			action = "Query".
			* oneLevel: entries one level below entry.
			* base: only the entry.
			* subtree: entry and all levels below it.
		]]></help>
		<values default="onelevel">
			<value option="onelevel"/>
			<value option="base"/>
			<value option="subtree"/>
		</values>
	</parameter>
	<parameter name="attributes" type="String" required="false">
		<help><![CDATA[
			Required if action = "Query", "Add", "ModifyDN", or "Modify"
			For queries: comma-delimited list of attributes to return. For
			queries, to get all attributes, specify "*".
			
			If action = "add" or "modify", you can specify a list of update
			columns. Separate attributes with a semicolon.
			
			If action = "ModifyDN", CFML passes attributes to the
			LDAP server without syntax checking.
		]]></help>
		<values/>
	</parameter>
	<parameter name="filter" type="String" required="false">
		<help><![CDATA[
			Search criteria for action = "Query".
			List attributes in the form:
			"(attribute operator value)" Example: "(sn = Smith)"
		]]></help>
		<values/>
	</parameter>
	<parameter name="sort" type="String" required="false">
		<help><![CDATA[
			Attribute(s) by which to sort query results. Use a comma
			delimiter.
		]]></help>
		<values/>
	</parameter>
	<parameter name="sortcontrol" type="String" required="false">
		<help><![CDATA[
			Default asc
			* nocase: case-insensitive sort
			* asc: ascending (a to z) case-sensitive sort
			* desc: descending (z to a) case-sensitive sort

			You can enter a combination of sort types; for example,
			sortControl = "nocase, asc".
		]]></help>
		<values default="asc">
			<value option="nocase"/>
			<value option="asc"/>
			<value option="desc"/>
			<value option="nocase, desc"/>
			<value option="nocase, asc"/>
		</values>
	</parameter>
	<parameter name="dn" type="String" required="false">
		<help><![CDATA[
			Distinguished name, for update action. Example:
			"cn = Bob Jensen, o = Ace Industry, c = US"
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="add"/>
			<selectedValue attributeName="action" required="true" value="modify"/>
			<selectedValue attributeName="action" required="true" value="modifyDN"/>
			<selectedValue attributeName="action" required="true" value="delete"/>
		</triggers>
	</parameter>
	<parameter name="startrow" type="Numeric" required="false">
		<help><![CDATA[
			Used with action = "query". First row of LDAP query to insert
			into a CFML query.
		]]></help>
		<values/>
	</parameter>
	<parameter name="modifytype" type="String" required="false">
		<help><![CDATA[
			Default replace

			How to process an attribute in a multi-value list.
			* add: appends it to any attributes
			* delete: deletes it from the set of attributes
			* replace: replaces it with specified attributes

			You cannot add an attribute that is already present or that is
			empty.
		]]></help>
		<values default="replace">
			<value option="add"/>
			<value option="delete"/>
			<value option="replace"/>
		</values>
	</parameter>
	<parameter name="rebind" type="boolean" required="false">
		<help><![CDATA[
			* Yes: attempt to rebind referral callback and reissue query by
				referred address using original credentials.
			* No: referred connections are anonymous
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="referral" type="Numeric" required="false">
		<help><![CDATA[
			Number of hops allowed in a referral. A value of 0 disables
			referred addresses for LDAP; no data is returned.
		]]></help>
		<values/>
	</parameter>
	<parameter name="secure" type="String" required="false">
		<help><![CDATA[
			Security to employ, and required information. One option:
			* CFSSL_BASIC

			"CFSSL_BASIC" provides V2 SSL encryption
			and server authentication.
		]]></help>
		<values>
			<value option="CFSSL_BASIC"/>
		</values>
	</parameter>
	<parameter name="separator" type="String" required="false">
		<help><![CDATA[
			Default , (a comma)
			Delimiter to separate attribute values of multi-value
			attributes. Used by query, add, and modify actions, and by
			cfldap to output multi-value attributes.

			For example, if $ (dollar sign), the attributes attribute could
			be "objectclass = top$person", where the first value of
			objectclass is top, and the second value is person. This avoids
			confusion if values include commas.
		]]></help>
		<values default=",">
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			Separator between attribute name-value pairs. Use this
			attribute if:

			* the attributes attribute specifies more than one item, or
			* an attribute contains the default delimiter (semicolon). For
				example: mgrpmsgrejecttext;lang-en

			Used by query, add, and modify actions, and by cfldap to output
			multi-value attributes.

			For example, if $ (dollar sign), you could specify
			"cn = Double Tree Inn$street = 1111 Elm; Suite 100 where the
			semicolon is part of the street value.
		]]></help>
		<values default=";">
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
</tag>
<!--
	cflocation
		url = "URL"
		addToken = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cflocation" single="true" xmlstyle="false">
	<help><![CDATA[
		Stops execution of the current page and opens a CFML page or HTML file.
	]]></help>
	<parameter name="url" type="String" required="true">
		<help><![CDATA[
			URL of HTML file or CFML page to open.
		]]></help>
		<values/>
	</parameter>
	<parameter name="addtoken" type="boolean" required="false">
		<help><![CDATA[
			clientManagement must be enabled (see cfapplication).
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cflock
		timeout = "timeout in seconds "
		scope = "Application" or "Server" or "Session"
		name = "lockname"
		throwOnTimeout = "boolean"
		type = "readOnly" or "exclusive "
		[...CFML to be synchronized...]
	/cflock
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cflock" single="false" xmlstyle="false">
	<help><![CDATA[
		Ensures the integrity of shared data. Instantiates the
		following kinds of locks:

		* Exclusive allows single-thread access to the CFML constructs
		* Read-only allows multiple requests to access CFML constructs
	]]></help>
	<parameter name="timeout" type="Numeric" required="true">
		<help><![CDATA[
			Maximum length of time, in seconds, to wait to obtain a
			lock. If lock is obtained, tag execution continues.
			Otherwise, behavior depends on throwOnTimeout attribute
			value.
		]]></help>
		<values/>
	</parameter>
	<parameter name="scope" type="String" required="false">
		<help><![CDATA[
			Lock scope. Mutually exclusive with the name attribute.
			Lock name. Only one request in the specified scope can
			execute the code within this tag (or within any other
			cflock tag with the same lock scope scope) at a time.
		]]></help>
		<values>
			<value option="Application"/>
			<value option="Server"/>
			<value option="Session"/>
		</values>
	</parameter>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			Lock name. Mutually exclusive with the scope attribute.
			Only one request can execute the code within a cflock tag
			with a given name at a time. Cannot be an empty string.
		]]></help>
		<values/>
	</parameter>
	<parameter name="throwontimeout" type="boolean" required="false">
		<help><![CDATA[
			How timeout conditions are handled.
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			readOnly: lets more than one request read shared data.
			exclusive: lets one request read or write shared data.
		]]></help>
		<values default="exclusive">
			<value option="readonly"/>
			<value option="exclusive"/>
		</values>
	</parameter>
</tag>
<!--
	cflog
		text = "text"
		log = "log type"
		file = "filename"
		type = "message type"
		application = "application name yes or no"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cflog" single="true" xmlstyle="false">
	<help><![CDATA[
		Writes a message to a log file.
	]]></help>
	<parameter name="text" type="String" required="true">
		<help><![CDATA[
			Message text to log.
		]]></help>
		<values/>
	</parameter>
	<parameter name="log" type="String" required="false">
		<help><![CDATA[
			If you omit the file attribute, writes messages to standard
			log file. Ignored, if you specify file attribute.

			Application: writes to Application.log, normally used for
				application-specific messages.
			Scheduler: writes to Scheduler.log, normally used to log
				the execution of scheduled tasks.
		]]></help>
		<values>
			<value option="Application"/>
			<value option="Scheduler"/>
		</values>
	</parameter>
	<parameter name="file" type="String" required="false">
		<help><![CDATA[
			Message file. Specify only the main part of the filename.
			For example, to log to the Testing.log file, specify
			"Testing".

			The file must be located in the default log directory. You
			cannot specify a directory path. If the file does not
			exist, it is created automatically, with the suffix .log.
		]]></help>
		<values/>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			Type (severity) of the message
		]]></help>
		<values>
			<value option="information"/>
			<value option="warning"/>
			<value option="error"/>
			<value option="fatal"/>
		</values>
	</parameter>
	<parameter name="application" type="boolean" required="false">
		<help><![CDATA[
			log application name, if it is specified in a cfapplication
			tag.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfloop
		index = "parameter_name"
		from = "beginning_value"
		to = "ending_value"
		step = "increment"
		... HTML or CFML code ...
	/cfloop

	cfloop
		condition = "expression"
		...
	/cfloop

	cfloop
		query = "query_name"
		startRow = "row_num"
		endRow = "row_num"
		...
	/cfloop

	cfloop
		index = "index_name"
		list = "list_items"
		delimiters = "item_delimiter"
		...
	/cfloop
	===============================================
	cfloop
		index = "parameter_name"
		from = "beginning_value"
		to = "ending_value"
		step = "increment"
		condition = "expression"
		query = "query_name"
		startRow = "row_num"
		endRow = "row_num"
		list = "list_items"
		delimiters = "item_delimiter"
		collection = "Object"
		item = "String"
		... HTML or CFML code ...
	/cfloop
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfloop" single="false" xmlstyle="false">
	<help><![CDATA[
		Different items are required based on loop type. Items listed
		as required may not be depending on your loop type.
		Loop forms:
		[query] [condition] [index + from + to ] [index + list]
		[collection + item ]
	]]></help>
	<parameter name="index" type="String" required="false">
		<help><![CDATA[
			Index value. CFML sets it to from value and
			increments or decrements by step value, until it equals to
			value.
		]]></help>
		<values/>
	</parameter>
	<parameter name="to" type="Numeric" required="false">
		<help><![CDATA[
			Beginning value of index.
		]]></help>
		<values/>
	</parameter>
	<parameter name="from" type="Numeric" required="false">
		<help><![CDATA[
			Ending value of index.
		]]></help>
		<values/>
	</parameter>
	<parameter name="step" type="Numeric" required="false">
		<help><![CDATA[
			Ending value of index.
		]]></help>
		<values/>
	</parameter>
	<parameter name="condition" type="boolean" required="false">
		<help><![CDATA[
			Condition that controls the loop.
		]]></help>
		<values/>
	</parameter>
	<parameter name="query" type="String" required="false">
		<help><![CDATA[
			Query that controls the loop.
		]]></help>
		<values/>
	</parameter>
	<parameter name="startrow" type="Numeric" required="false">
		<help><![CDATA[
			First row of query that is included in the loop.
		]]></help>
		<values/>
	</parameter>
	<parameter name="endrow" type="Numeric" required="false">
		<help><![CDATA[
			Last row of query that is included in the loop.
		]]></help>
		<values/>
	</parameter>
	<parameter name="list" type="String" required="false">
		<help><![CDATA[
			A list, variable, or filename; contains a list
		]]></help>
		<values/>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
			Character(s) that separates items in list
		]]></help>
		<values default=",">
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
	<parameter name="collection" type="Object" required="false">
		<help><![CDATA[
			The collection attribute is used with the item attribute.
			often to loop over a structure
		]]></help>
		<values/>
	</parameter>
	<parameter name="item" type="String" required="false">
		<help><![CDATA[
			The item attribute is used with the collection attribute.
			often to loop over a structure
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfmail
		to = "recipient"
		from = "sender"
		cc = "copy_to"
		bcc = "blind_copy_to"
		subject = "msg_subject"
	 	type = "msg_type"
	 	mimeattach = "path"
	 	query = "query_name"
	 	group = "query_column"
	 	groupcasesensitive = "boolean"
	 	startrow = "query_row"
	 	maxrows = "max_msgs"
	 	server = "serverspecs"
	 	port = "port_id"
	 	mailerid = "headerid"
	 	timeout = "seconds"

	[(Optional) Mail message body and/or cfhttpparam tags]
	/cfmail
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfmail" single="false" xmlstyle="false">
	<help><![CDATA[
		Sends an e-mail message that optionally contains query output,
		using an SMTP server.
	]]></help>
	<parameter name="to" type="String" required="true">
		<help><![CDATA[
			Message recipient e-mail addresses.
		]]></help>
		<values/>
	</parameter>
	<parameter name="from" type="String" required="true">
		<help><![CDATA[
			E-mail message sender:
		]]></help>
		<values/>
	</parameter>
	<parameter name="cc" type="String" required="false">
		<help><![CDATA[
			Address(es) to which to copy the message
		]]></help>
		<values/>
	</parameter>
	<parameter name="bcc" type="String" required="false">
		<help><![CDATA[
			Address(es) to which to copy the message, without listing
			them in the message header.
		]]></help>
		<values/>
	</parameter>
	<parameter name="subject" type="String" required="true">
		<help><![CDATA[
			Message subject. Can be dynamically generated.
		]]></help>
		<values/>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			The MIME media type of the part. Can be a can be valid MIME
			media type
		]]></help>
		<values default="text/plain">
			<value option="plain"/>
			<value option="html"/>
			<value option="text"/>
			<value option="text/html"/>
			<value option="text/plain"/>
		</values>
	</parameter>
	<parameter name="mimeattach" type="String" required="false">
		<help><![CDATA[
			Path of file to attach to message. Attached file is
			MIME-encoded. CFML attempts to determine the MIME
			type of the file; use the cfmailparam tag to send an
			attachement and specify the MIME type.
		]]></help>
		<values/>
	</parameter>
	<parameter name="query" type="String" required="false">
		<help><![CDATA[
			Name of cfquery from which to draw data for message(s).
			Use this attribute to send more than one message, or to
			send query results within a message.
		]]></help>
		<values/>
	</parameter>
	<parameter name="group" type="String" required="false">
		<help><![CDATA[
			Query column to use when you group sets of records to send
			as a message. For example, to send a set of billing
			statements to a customer, group on "Customer_ID."
			Case-sensitive. Eliminates adjacent duplicates when data is
			sorted by the specified field.
		]]></help>
		<values/>
	</parameter>
	<parameter name="groupcasesensitive" type="boolean" required="false">
		<help><![CDATA[
			Whether to consider case when using the group attribute. To
			group on case-sensitive records, set this attribute to Yes.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="startrow" type="Numeric" required="false">
		<help><![CDATA[
			Row in a query to start from.
		]]></help>
		<values default="1"/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of messages to send when looping over a
			query.
		]]></help>
		<values/>
	</parameter>
	<parameter name="server" type="String" required="false">
		<help><![CDATA[
			SMTP server address, or (Enterprise edition only) a
			comma-delimited list of server addresses, to use for
			sending messages. At least one server must be specified
			here or in the CFML MX Administrator. A value here
			overrides the Administrator. A value that includes a port
			specification overrides the port attribute. See the Usage
			section for details.
		]]></help>
		<values/>
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			TCP/IP port on which SMTP server listens for requests
			(normally 25). A value here overrides the Administrator.
		]]></help>
		<values/>
	</parameter>
	<parameter name="mailerid" type="String" required="false">
		<help><![CDATA[
			Mailer ID to be passed in X-Mailer SMTP header, which
			identifies the mailer application.
		]]></help>
		<values/>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Number of seconds to wait before timing out connection to
			SMTP server. A value here overrides the Administrator.
		]]></help>
		<values/>
	</parameter>
	<parameter name="debug" type="boolean" required="false">
		<help><![CDATA[
			* Yes: sends debugging output to standard output. By
			default, if the console window is unavailable, ColdFusion
			sends output to cf_root\runtime\logs\coldfusion-out.log on
			server configurations. On J2EE configurations, with JRun,
			the default location is jrun_home/logs/servername-out.log.
			* No: does not generate debugging output.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfmailparam
		file = "file-name"
		contentID = "content ID"
		disposition = "disposition type"
   	or
   	cfmailparam
   		name = "header-name"
   		value = "header-value"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfmailparam" single="true" xmlstyle="false">
	<help><![CDATA[
		Attaches a file or adds a header to an e-mail message. Can only
		be used in the cfmail tag. You can use more than one
		cfmailparam tag within a cfmail tag.
	]]></help>
	<parameter name="file" type="String" required="true">
		<help><![CDATA[
			Attaches file to a message. Mutually exclusive with name
			attribute. The file is MIME encoded before sending.
		]]></help>
		<values/>
	</parameter>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name of header. Case-insensitive. Mutually exclusive with
			file attribute.
			The values listed are from rfc2822
		]]></help>
		<values>
			<value option="Message-Context"/>
			<value option="Apparently-To"/>
			<value option="Approved-By"/>
			<value option="Fax"/>
			<value option="Telefax"/>
			<value option="For-Approval"/>
			<value option="For-Comment"/>
			<value option="For-Handling"/>
			<value option="Mail-System-Version"/>
			<value option="Mailer"/>
			<value option="Originating-Client"/>
			<value option="X-Mailer "/>
			<value option="X-Newsreader"/>
			<value option="X-MimeOLE"/>
			<value option="User-Agent"/>
			<value option="Originator-Info"/>
			<value option="Phone"/>
			<value option="X-Envelope-From"/>
			<value option="Envelope-To"/>
			<value option="X-Envelope-To"/>
			<value option="X-Face"/>
			<value option="X-RCPT-TO"/>
			<value option="X-Sender"/>
			<value option="X-X-Sender"/>
			<value option="Posted-To"/>
			<value option="X-Admin"/>
			<value option="Errors-To"/>
			<value option="Return-Receipt-To"/>
			<value option="Read-Receipt-To"/>
			<value option="X-Confirm-reading-to"/>
			<value option="Return-Receipt-Requested"/>
			<value option="Register-Mail-Reply-Requested-By"/>
			<value option="Abuse-Reports-To"/>
			<value option="X-Complaints-To"/>
			<value option="X-Report-Abuse-To"/>
			<value option="Content-Alias"/>
			<value option="Delivered-To"/>
			<value option="X-Loop"/>
			<value option="Translated-By"/>
			<value option="Translation-Of"/>
			<value option="X-UIDL"/>
			<value option="X-URI"/>
			<value option="X-URL"/>
			<value option="X-IMAP"/>
			<value option="X-OriginalArrivalTime"/>
			<value option="Precedence"/>
			<value option="X-MSMail-Priority"/>
			<value option="X-Priority"/>
			<value option="Content-Length"/>
			<value option="Content-Conversion"/>
			<value option="Content-Class"/>
			<value option="Content-SGML-Entity"/>
			<value option="X-MIME-Autoconverted"/>
			<value option="List-Digest"/>
			<value option="Mailing-List"/>
			<value option="X-Mailing-List"/>
			<value option="List-Software"/>
			<value option="List-URL"/>
			<value option="X-Listserver"/>
			<value option="X-List-Host"/>
			<value option="Fcc"/>
			<value option="Speech-Act"/>
			<value option="Status"/>
			<value option="X-No-Archive"/>
		</values>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Value of the header.
		]]></help>
		<values/>
	</parameter>
	<parameter name="contentID" type="String" required="false">
		<help><![CDATA[
			The Identifier for the attached file. This ID should
			be globally unique and is used to identify the file in
			an IMG or other tag in the mail body that references
			the file content.
		]]></help>
		<values/>
	</parameter>
	<parameter name="disposition" type="String" required="false">
		<help><![CDATA[
			How the attached file is to be handled. Can be one
			of the following:
			 - attachment: present the file as an attachment
			 - inline: display the file contents in the message
		]]></help>
		<values default="attachment">
			<value option="attachment"/>
			<value option="inline"/>
		</values>
	</parameter>
</tag>
<!--
	cfmodule
		template = "path"
		name = "tag_name"
		attributeCollection = "collection_structure"
		attribute_name1 = "valuea"
		attribute_name2 = "valueb" ...
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfmodule" single="false" xmlstyle="false" hybrid="true" allowanyattribute="true">
	<help><![CDATA[
		Invokes a custom tag for use in CFML application pages.
		This tag processes custom tag name conflicts.
	]]></help>
	<parameter name="template" type="String" required="false">
		<help><![CDATA[
			Mutually exclusive with the name attribute. A path to the
			page that implements the tag.

                    Relative path: expanded from the current page
                    Absolute path: expanded using CFML mapping
                    A physical path is not valid.
		]]></help>
		<values/>
	</parameter>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			Mutually exclusive with the template attribute. A custom
			tag name, in the form "Name.Name.Name..." Identifies
			subdirectory, under the CFML tag root directory,
			that contains custom tag page. For example (Windows format):

			<cfmodule name = "superduper.Forums40.GetUserOptions">

			This identifies the page GetUserOptions.cfm in the
			directory CustomTags\superduper\Forums40 under the
			CFML root directory.
		]]></help>
		<values/>
	</parameter>
	<parameter name="attributecollection" type="Struct" required="false">
		<help><![CDATA[
			A collection of key-value pairs that represent
			attribute names and values. You can specify multiple
			key-value pairs. You can specify this attribute only
			once.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfoutput
		query = "query_name"
		group = "query_column"
		groupCaseSensitive = "boolean"
		startRow = "start_row"
		maxRows = "max_rows_output"
	/cfoutput
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfoutput" single="false" xmlstyle="false">
	<help><![CDATA[
		Displays output that can contain the results of processing
		CFML variables and functions. Can loop over the results
		of a database query.
	]]></help>
	<parameter name="query" type="String" required="false">
		<help><![CDATA[
			Name of cfquery from which to draw data for output section.
		]]></help>
		<values/>
	</parameter>
	<parameter name="group" type="String" required="false">
		<help><![CDATA[
			Query column to use to group sets of records. Eliminates
			adjacent duplicate rows when data is sorted. Use if you
			retrieved a record set ordered on one or more a query
			columns. For example, if a record set is ordered on
			"Customer_ID" in the cfquery tag, you can group the output
			on "Customer_ID."
		]]></help>
		<values/>
	</parameter>
	<parameter name="groupcasesensitive" type="boolean" required="false">
		<help><![CDATA[
			Whether to consider the case in grouping rows.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="startrow" type="Numeric" required="false">
		<help><![CDATA[
			Row from which to start output.
		]]></help>
		<values/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of rows to display.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfparam
		name = "param_name"
		type = "data_type"
		default = "value"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfparam" single="true" xmlstyle="false">
	<help><![CDATA[
		Tests for a parameter's existence, tests its data type, and, if
		a default value is not assigned, optionally provides one.
	]]></help>
	<return type="Any" parameter="name"/>
	<parameter name="name" type="variableName" required="true">
		<help><![CDATA[
			Name of parameter to test (such as "client.email" or
			"cookie.backgroundColor"). If omitted, and if the
			parameter does not exist, an error is thrown.
		]]></help>
		<values/>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			The valid format for the data; one of the following.
			* any: any type of value.
			* array: an array of values.
			* binary: a binary value.
			* boolean: a Boolean value: yes, no, true, false, or a number.
			* date or time: a date-time value.
			* guid: a Universally Unique Identifier of the form "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX" where 'X' is a hexadecimal number.
			* numeric: a numeric value
			* query: a query object.
			* string: a string value or single character.
			* struct: a structure.
			* UUID: a ColdFusion Universally Unique Identifier, formatted 'XXXXXXXX-XXXX-XXXX-XXXXXXXXXXXXXXX', where 'X' is a hexadecimal number. See CreateUUID.
			* variableName: a string formatted according to ColdFusion variable naming conventions.
		]]></help>
		<values default="Any">
			<value option="Any"/>
			<value option="Array"/>
			<value option="Binary"/>
			<value option="boolean"/>
			<value option="date"/>
			<value option="Numeric"/>
			<value option="guid"/>
			<value option="Query"/>
			<value option="String"/>
			<value option="Struct"/>
			<value option="UUID"/>
			<value option="variablename"/>
		</values>
	</parameter>
	<parameter name="default" type="Object" required="false">
		<help><![CDATA[
			Value to set parameter to if it does not exist. Any
			expression used for the default attribute is evaluated,
			even if the parameter exists.
			The result is not assigned if the parameter exists,
			but if the expression has side effects, they still occur.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfpop
		server = "servername"
		port = "port_number"
		username = "username"
		password = "password"
		action = "action"
		name = "queryname"
		messageNumber = "number"
		uid = "number"
		attachmentPath = "path"
		timeout = "seconds"
		maxRows = "number"
		startRow = "number"
		generateUniqueFilenames = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfpop" single="true" xmlstyle="false">
	<return type="cfpop" parameter="name"/>
	<help><![CDATA[
		Retrieves or deletes e-mail messages from a POP mail server.
	]]></help>
	<parameter name="server" type="String" required="true">
		<help><![CDATA[
			POP server identifier:
				A host name; for example, "biff.upperlip.com"
				An IP address; for example, "192.1.2.225"
		]]></help>
		<values/>
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			POP port
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Overrides username.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Overrides password
		]]></help>
		<values/>
	</parameter>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
			getHeaderOnly: returns message header information only
			getAll: returns message header information, message text,
				and attachments if attachmentPath is specified
			delete: deletes messages on POP server
		]]></help>
		<values>
			<value option="getHeaderOnly"/>
			<value option="getAll"/>
			<value option="delete"/>
		</values>
	</parameter>
	<parameter name="name" type="variableName" required="false">
		<help><![CDATA[
			Name for query object that contains the retrieved message
			information.
		]]></help>
		<values/>
	</parameter>
	<parameter name="messagenumber" type="Numeric" required="false">
		<help><![CDATA[
			Message number or comma-delimited list of message numbers
			to get or delete. Invalid message numbers are ignored.
			Ignored if uid is specified.
		]]></help>
		<values/>
	</parameter>
	<parameter name="uid" type="String" required="false">
		<help><![CDATA[
			UID or a comma-delimited list of UIDs to get or delete.
			Invalid UIDs are ignored.
		]]></help>
		<values/>
	</parameter>
	<parameter name="attachmentpath" type="String" required="false">
		<help><![CDATA[
			If action="getAll", specifies a directory in which to save
			any attachments. If the directory does not exist,
			CFML creates it.

			If you omit this attribute, CFML does not save any
			attachments. If you specify a relative path, the path root
			is the CFML temporary directory, which is returned by
			the GetTempDirectory function.
		]]></help>
		<values/>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Maximum time, in seconds, to wait for mail processing
		]]></help>
		<values/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Number of messages to return or delete, starting with the
			number in startRow. Ignored if messageNumber or uid is
			specified.
		]]></help>
		<values/>
	</parameter>
	<parameter name="startrow" type="Numeric" required="false">
		<help><![CDATA[
			First row number to get or delete. Ignored if messageNumber
			or uid is specified.
		]]></help>
		<values/>
	</parameter>
	<parameter name="generateuniquefilenames" type="boolean" required="false">
		<help><![CDATA[
			Yes: Generate unique filenames for files attached to an
			e-mail message, to avoid naming conflicts when files are
			saved
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfprocessingdirective
		suppressWhiteSpace = "boolean"
    [CFML tags]
    /cfprocessingdirective
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfprocessingdirective" single="false" xmlstyle="true">
	<help><![CDATA[
		Provides the following insformation to CFML on how to
		process the current page:

		* Specifies whether to remove excess whitespace character from
		CFML generated content in the tag body.
		* Identifies the character encoding (character set) of the page
		contents.
	]]></help>
	<parameter name="suppresswhitespace" type="boolean" required="false">
		<help><![CDATA[
			Boolean; whether to suppress white space characters within
			the cfprocessingdirective block that are generated by CFML
			tags and often do not affect HTML appearance. Does not
			affect any white space in HTML code.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfprocparam
		type = "in" or "out" or "inout"
		variable = "variable name"
		value = "parameter value"
		CFSQLType = "parameter datatype"
		maxLength = "length"
		scale = "decimal places"
		null = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfprocparam" single="true" xmlstyle="false">
	<help><![CDATA[
		Defines stored procedure parameters. This tag is nested within
		a cfstoredproc tag.
	]]></help>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			in: The parameter is used to send data to the database
				system only. Passes the parameter by value.
			out: The parameter is used to receive data from the
				database system only. Passes the parameter as a bound
				variable.
			inout: The parameter is used to send and receive data.
				Passes the parameter as a bound variable.
		]]></help>
		<values default="in">
			<value option="in"/>
			<value option="out"/>
			<value option="inout"/>
		</values>
	</parameter>
	<parameter name="variable" type="String" required="false">
		<help><![CDATA[
			CFML variable name; references the value that the
			output parameter has after the stored procedure is called.
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Value that CFML passes to the stored procedure.
		]]></help>
		<values/>
	</parameter>
	<parameter name="cfsqltype" type="String" required="true">
		<help><![CDATA[
			SQL type to which the parameter (any type) is bound.
			CFML supports the following values, where the last
			element of the name corresponds to the SQL data type.
			Different database systems might support different subsets
			of this list. See your DBMS documentation for information
			on supported parameter types.
		]]></help>
		<values>
			<value option="CF_SQL_BIGINT"/>
			<value option="CF_SQL_BIT"/>
			<value option="CF_SQL_CHAR"/>
			<value option="CF_SQL_BLOB"/>
			<value option="CF_SQL_CLOB"/>
			<value option="CF_SQL_DATE"/>
			<value option="CF_SQL_DECIMAL"/>
			<value option="CF_SQL_DOUBLE"/>
			<value option="CF_SQL_FLOAT"/>
			<value option="CF_SQL_IDSTAMP"/>
			<value option="CF_SQL_INTEGER"/>
			<value option="CF_SQL_LONGVARCHAR"/>
			<value option="CF_SQL_MONEY"/>
			<value option="CF_SQL_MONEY4"/>
			<value option="CF_SQL_NUMERIC"/>
			<value option="CF_SQL_REAL"/>
			<value option="CF_SQL_REFCURSOR"/>
			<value option="CF_SQL_SMALLINT"/>
			<value option="CF_SQL_TIME"/>
			<value option="CF_SQL_TIMESTAMP"/>
			<value option="CF_SQL_TINYINT"/>
			<value option="CF_SQL_VARCHAR"/>
		</values>
	</parameter>
	<parameter name="maxlength" type="Numeric" required="false">
		<help><![CDATA[
			Maximum length of a string or character IN or INOUT value
			attribute. A maxLength of 0 allows any length. The
			maxLength attribute is not required when specifying
			type=out.
		]]></help>
		<values default="0"/>
	</parameter>
	<parameter name="scale" type="Numeric" required="false">
		<help><![CDATA[
			Number of decimal places in numeric parameter. A scale of 0
			allows any number of decimal places.
		]]></help>
		<values default="0"/>
	</parameter>
	<parameter name="null" type="boolean" required="false">
		<help><![CDATA[
			Whether the parameter is passed in as a null value. Not
			used with OUT type parameters.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfprocresult
		name = "query_name"
		resultSet = "1-n"
		maxRows = "maxrows"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfprocresult" single="true" xmlstyle="false">
	<return type="query" parameter="name"/>
	<help><![CDATA[
		Associates a query object with a result set returned by a
		stored procedure. Other CFML tags, such as cfoutput and
		cftable, use this query object to access the result set. This
		tag is nested within a cfstoredproc tag.
	]]></help>
	<parameter name="name" type="variableName" required="true">
		<help><![CDATA[
			Name for the query result set.
		]]></help>
		<values/>
	</parameter>
	<parameter name="resultset" type="Numeric" required="false">
		<help><![CDATA[
			Names one result set, if stored procedure returns more than
			one.
		]]></help>
		<values/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of rows returned in result set.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfquery
		name = "query_name"
		dataSource = "ds_name"
		dbtype = "Query"
		username = "username"
		password = "password"
		maxRows = "number"
		blockFactor = "blocksize"
		timeout = "seconds"
		cachedAfter = "date"
		cachedWithin = "Timespan"
	Either of the following:
		debug = "boolean"
	or
		debug
	>
		[SQL statement(s)]
	/cfquery
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfquery" single="false" xmlstyle="false">
	<help><![CDATA[
		Passes queries or SQL statements to a data source.
		It is recommended that you use the cfqueryparam tag within
		every cfquery tag, to help secure your databases from
		unauthorized users
	]]></help>
	<return type="query" parameter="name"/>
	<parameter name="name" type="variableName" required="false">
		<help><![CDATA[
			Name of query. Used in page to reference query record set.
			Must begin with a letter. Can include letters, numbers,
			and underscores.
		]]></help>
		<values/>
	</parameter>
	<parameter name="datasource" type="String" required="false">
		<help><![CDATA[
			Name of data source from which query gets data.
		]]></help>
		<values/>
	</parameter>
	<parameter name="dbtype" type="String" required="false">
		<help><![CDATA[
			query. Use this value to specify the results of a query as
			input.
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Overrides username in data source setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Overrides password in data source setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of rows to return in record set.
			-1 returns all records.
		]]></help>
		<values default="-1"/>
	</parameter>
	<parameter name="blockfactor" type="Numeric" required="false">
		<help><![CDATA[
			Maximum rows to get at a time from server. Range: 1 - 100.
			Might not be supported by some database systems.
		]]></help>
		<values/>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of seconds that each action of a query is
			permitted to execute before returning an error. The
			cumulative time may exceed this value.

			For JDBC statements, CFML sets this attribute. For
			other drivers, check driver documentation.
		]]></help>
		<values/>
	</parameter>
	<parameter name="cachedafter" type="DateTime" required="false">
		<help><![CDATA[
			Date value (for example, April 16, 1999, 4-16-99). If date
			of original query is after this date, CFML uses
			cached query data. To use cached data, current query must
			use same SQL statement, data source, query name, user name,
			password.

			A date/time object is in the range 100 AD-9999 AD.

			When specifying a date value as a string, you must enclose
			it in quotation marks.
		]]></help>
		<values/>
	</parameter>
	<parameter name="cachedwithin" type="Timespan" required="false">
		<help><![CDATA[
			Timespan, using the CreateTimeSpan function. If original
			query date falls within the time span, cached query data is
			used. CreateTimeSpan defines a period from the present,
			back. Takes effect only if query caching is enabled in the
			Administrator.

			To use cached data, the current query must use the same SQL
			statement, data source, query name, user name, and password.
		]]></help>
		<values/>
	</parameter>
	<parameter name="debug" type="boolean" required="false">
		<help><![CDATA[
			Yes: If debugging is enabled, but the Administrator
				Database Activity option is not enabled, displays SQL
				submitted to datasource and number of records returned
				by query.
			No: If the Administrator Database Activity option is
				enabled, suppresses display.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfqueryparam
		value = "parameter value"
		CFSQLType = "parameter type"
		maxLength = "maximum parameter length"
		scale = "number of decimal places"
		null = "boolean"
		list = "boolean"
		separator = "separator character"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfqueryparam" single="true" xmlstyle="false">
	<help><![CDATA[
		Verifies the data type of a query parameter and, for DBMSs that
		support bind variables, enables CFML to use bind variables
		in the SQL statement. Bind variable usage enhances performance
		when executing a cfquery statement multiple times.

		This tag is nested within a cfquery tag, embedded in a query SQL
		statement. If you specify optional parameters, this tag performs
		data validation.
	]]></help>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			Value that CFML passes to the right of the comparison
			operator in a where clause.

			If CFSQLType is a date or time option, ensure that the date
			value uses your DBMS-specific date format. Use the
			CreateODBCDateTime or DateFormat and TimeFormat functions
			to format the date value.
		]]></help>
		<values/>
	</parameter>
	<parameter name="cfsqltype" type="String" required="false">
		<help><![CDATA[
			SQL type that parameter (any type) is bound to.
		]]></help>
		<values>
			<value option="cf_sql_bigint"/>
			<value option="cf_sql_bit"/>
			<value option="cf_sql_char"/>
			<value option="cf_sql_blob"/>
			<value option="cf_sql_clob"/>
			<value option="cf_sql_date"/>
			<value option="cf_sql_decimal"/>
			<value option="cf_sql_double"/>
			<value option="cf_sql_float"/>
			<value option="cf_sql_idstamp"/>
			<value option="cf_sql_integer"/>
			<value option="cf_sql_longvarchar"/>
			<value option="cf_sql_money"/>
			<value option="cf_sql_money4"/>
			<value option="cf_sql_numeric"/>
			<value option="cf_sql_real"/>
			<value option="cf_sql_refcursor"/>
			<value option="cf_sql_smallint"/>
			<value option="cf_sql_time"/>
			<value option="cf_sql_timestamp"/>
			<value option="cf_sql_tinyint"/>
			<value option="cf_sql_varchar"/>
		</values>
	</parameter>
	<parameter name="maxlength" type="Numeric" required="false">
		<help><![CDATA[
			Maximum length of parameter.
		]]></help>
		<values/>
	</parameter>
	<parameter name="scale" type="Numeric" required="false">
		<help><![CDATA[
			Number of decimal places in parameter. Applies to
			CF_SQL_NUMERIC and CF_SQL_DECIMAL.
		]]></help>
		<values/>
	</parameter>
	<parameter name="null" type="boolean" required="false">
		<help><![CDATA[
			Whether parameter is passed as a null value.

                    Yes: tag ignores the value attribute
                    No: does not
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="list" type="boolean" required="false">
		<help><![CDATA[
			Yes: The value attribute value is a delimited list
			No: it is not
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="separator" type="char" required="false">
		<help><![CDATA[
			Character that separates values in list, in value attribute.
		]]></help>
		<values>
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
</tag>
<!--
	cfregistry 
		action = "getAll"
		branch = "branch"
		type = "data type"
		name = "query name" 
		sort = "criteria"
		
	cfregistry 
		action = "get"
		branch = "branch"
		entry = "key or value"
		variable = "variable"
		type = "data type"
   
	cfregistry 
		action = "set"
		branch = "branch"
		entry = "key or value"
		type = "value type"
		value = "data"
		
	cfregistry 
		action = "delete"
		branch = "branch"
		entry = "key or value"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfregistry" single="true" xmlstyle="false">
	<help><![CDATA[
		Reads, writes, and deletes keys and values in the system registry.
		Provides persistent storage of client variables.
	]]></help>
	<return type="cfregistry" parameter="name"/>
	<return type="String" parameter="variable"/>
	<parameter name="action" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="getAll"/>
			<value option="get"/>
			<value option="set"/>
			<value option="delete"/>
		</values>
	</parameter>
	<parameter name="branch" type="String" required="true">
		<help><![CDATA[
			Name of a registry branch.
		]]></help>
		<values/>
	</parameter>
	<parameter name="entry" type="String" required="false">
		<help><![CDATA[
			Registry value to access.
			Note: For key deletion this attribute is required.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="get"/>
			<selectedValue attributeName="action" required="true" value="set"/>
		</triggers>
	</parameter>
	<parameter name="variable" type="variableName" required="false">
		<help><![CDATA[
			Variable into which to put value.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="get"/>
		</triggers>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			* string: returns string values.
			* dWord: returns DWord values.
			* key: returns keys.
			* any: returns keys and values.
		]]></help>
		<values default="String">
			<value option="String"/>
			<value option="dWord"/>
			<value option="key"/>
			<value option="Any"/>
		</values>
	</parameter>
	<parameter name="name" type="variableName" required="false">
		<help><![CDATA[
			Name of record set to contain returned keys and values.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="true" value="getAll"/>
		</triggers>
	</parameter>
	<parameter name="sort" type="String" required="false">
		<help><![CDATA[
			Sorts query column data (case-insensitive). Sorts on Entry, Type,
			and Value columns as text. Specify a combination of columns from
			query output, in a comma-delimited list.
			For example: sort = "value desc, entry asc"
			* asc: ascending (a to z) sort order.
			* desc: descending (z to a) sort order.
		]]></help>
		<values>
			<value option="entry asc"/>
			<value option="entry desc"/>
			<value option="type asc"/>
			<value option="type desc"/>
			<value option="value asc"/>
			<value option="value desc"/>
		</values>
	</parameter>
	<parameter name="directory" type="String" required="true">
		<help><![CDATA[
			Absolute pathname of directory against which to perform
			action.
		]]></help>
		<values/>
	</parameter>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name for output record set.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="false" value="list"/>
		</triggers>
	</parameter>
	<parameter name="filter" type="String" required="true">
		<help><![CDATA[
			File extension filter applied to returned names. For
			example: *.cfm. One filter can be applied.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="false" value="list"/>
		</triggers>
	</parameter>
	<parameter name="mode" type="String" required="false">
		<help><![CDATA[
			Applies only to UNIX and Linux. Permissions. Octal values
			of Unix chmod command. Assigned to owner, group, and
			other, respectively.
		]]></help>
		<values/>
	</parameter>
	<parameter name="sort" type="String" required="false">
		<help><![CDATA[
			Query column(s) by which to sort directory listing.
			Delimited list of columns from query output.
		]]></help>
		<values default="asc">
			<value option="asc"/>
			<value option="desc"/>
		</values>
		<triggers>
			<selectedValue attributeName="action" required="false" value="list"/>
		</triggers>
	</parameter>
	<parameter name="newdirectory" type="String" required="false">
		<help><![CDATA[
			New name for directory.
		]]></help>
		<values/>
		<triggers>
			<selectedValue attributeName="action" required="false" value="rename"/>
		</triggers>
	</parameter>
	<parameter name="recurse" type="boolean" required="false">
		<help><![CDATA[
			Whether ColdFusion performs the action on subdirectories.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
		<triggers>
			<selectedValue attributeName="action" required="false" value="list"/>
			<selectedValue attributeName="action" required="false" value="delete"/>
		</triggers>
	</parameter>
</tag>
<!--
	cfreport
		report = "report_path"
		orderBy = "result_order"
		username = "username"
		password = "password"
		formula = "formula"
		...
	/cfreport
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfreport" single="false" xmlstyle="false">
	<help><![CDATA[
		Runs a predefined Crystal Reports report. Applies only to
		Windows systems. Uses the CFCRYSTAL.exe file to generate
		reports. Sets parameters in the Crystal Reports engine
		according to its attribute values.
	]]></help>
	<parameter name="report" type="String" required="true">
		<help><![CDATA[
			Report path. Store Crystal Reports files in the same
			directories as CFML page files.
		]]></help>
		<values/>
	</parameter>
	<parameter name="orderby" type="String" required="false">
		<help><![CDATA[
			Orders results according to your specifications.
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Username required for entry into database from which report
			is created. Overrides default settings for data source in
			CFML Administrator.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Password that corresponds to username required for database
			access. Overrides default settings for data source in
			CFML Administrator.
		]]></help>
		<values/>
	</parameter>
	<parameter name="formula" type="String" required="false">
		<help><![CDATA[
			One or more named formulas. Terminate each formula with a
			semicolon. Use the format:

			formula = "formulaname1='formula1';formulaname2='formula2';"

			If you use a semicolon in a formula, you must escape it by
			typing it twice (;;). For example:

			formula = "Name1 = 'Val_1a;;Val_1b';Name2 = 'Val2';"
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfrethrow
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfrethrow" single="true" xmlstyle="false">
	<help><![CDATA[
		Rethrows the currently active exception. Preserves the
		exception's cfcatch.type and cfcatch.tagContext variable
		values.
	]]></help>
</tag>
<!--
	cfsavecontent
		variable = "variable name"
		[the content]
	/cfsavecontent
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfsavecontent" single="false" xmlstyle="false">
	<help><![CDATA[
		Saves the generated content of the cfsavecontent tag, including
		the results of evaluating expressions and executing custom tags,
		in the specified variable.
	]]></help>
	<return type="String" parameter="variable"/>
	<parameter name="variable" type="variableName" required="true">
		<help><![CDATA[
			Name ofthe variable in which to save the generated content
			of the tag.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfschedule
		action = "update"
		task = "taskname"
		operation = "HTTPRequest"
		file = "filename"
		path = "path_to_file"
		startDate = "date"
		startTime = "time"
		url = "URL"
		port = "port_number"
		publish = "boolean"
		endDate = "date"
		endTime = "time"
		interval = "seconds"
		requestTimeOut = "seconds"
		username = "username"
		password = "password"
		proxyServer = "hostname"
		proxyPort = "port_number"
		proxyUser = "username"
		proxyPassword = "password"
		resolveURL = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfschedule" single="true" xmlstyle="false">
	<help><![CDATA[
		Provides a programmatic interface to the CFML scheduling
		engine. Can run a CFML page at scheduled intervals, with the
		option to write the page output to a static HTML page. This
		feature enables you to schedule pages that publish data, such
		as reports, without waiting while a database transaction is
		performed to populate the page.
	]]></help>
	<parameter name="action" type="String" required="true">
		<help><![CDATA[
			delete: deletes the specified task
			update: updates an existing task or creates a new task,
				if one with the name specified by the task attribute
				does not exist
			run: executes the specified task
		]]></help>
		<values>
			<value option="delete"/>
			<value option="update"/>
			<value option="run"/>
		</values>
	</parameter>
	<parameter name="task" type="String" required="true">
		<help><![CDATA[
			Name of the task.
		]]></help>
		<values/>
	</parameter>
	<parameter name="operation" type="String" required="false">
		<help><![CDATA[
			Operation that the scheduler performs. Must be HTTPRequest.
		]]></help>
		<values/>
	</parameter>
	<parameter name="file" type="String" required="false">
		<help><![CDATA[
			Name of the file in which to store the published output of
			the scheuled task
		]]></help>
		<values/>
	</parameter>
	<parameter name="path" type="String" required="false">
		<help><![CDATA[
			Path to the directory in which to put the published file.
		]]></help>
		<values/>
	</parameter>
	<parameter name="startdate" type="String" required="false">
		<help><![CDATA[
			Date on which to first run the scheuled task.
		]]></help>
		<values/>
	</parameter>
	<parameter name="starttime" type="String" required="false">
		<help><![CDATA[
			Time at which to run the scheduled of task starts.
		]]></help>
		<values/>
	</parameter>
	<parameter name="URL" type="URL" required="false">
		<help><![CDATA[
			URL of the page to execute.
		]]></help>
		<values/>
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			Port to use on the server that is specified by the url
			parameter. If resolveURL = "yes", retrieved document URLs
			that specify a port number are automatically resolved, to
			preserve links in the retrieved document. A port value in
			the url attribute overrides this value.
		]]></help>
		<values default="80"/>
	</parameter>
	<parameter name="publish" type="boolean" required="false">
		<help><![CDATA[
			Yes: save the result to a file
			No: does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="enddate" type="String" required="false">
		<help><![CDATA[
			Date when scheduled task ends.
		]]></help>
		<values/>
	</parameter>
	<parameter name="endtime" type="Numeric" required="false">
		<help><![CDATA[
			Time when scheduled task ends (seconds).
		]]></help>
		<values/>
	</parameter>
	<parameter name="interval" type="String" required="false">
		<help><![CDATA[
		Interval at which task is scheduled.
			* number of seconds (minimum is 60)
			* once
			* daily
			* weekly
			* monthly
		]]></help>
		<values>
			<value option="once"/>
			<value option="daily"/>
			<value option="weekly"/>
			<value option="monthly"/>
		</values>
	</parameter>
	<parameter name="requesttimeout" type="Numeric" required="false">
		<help><![CDATA[
			Can be used to extend the default timeout period.
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Username, if URL is protected.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Password, if URL is protected.
		]]></help>
		<values/>
	</parameter>
	<parameter name="proxyserver" type="String" required="false">
		<help><![CDATA[
			Host name or IP address of a proxy server.
		]]></help>
		<values/>
	</parameter>
	<parameter name="proxyport" type="Numeric" required="false">
		<help><![CDATA[
			Port number to use on the proxy server.
		]]></help>
		<values default="80"/>
	</parameter>
	<parameter name="proxyuser" type="String" required="false">
		<help><![CDATA[
			User name to provide to the proxy server.
		]]></help>
		<values/>
	</parameter>
	<parameter name="proxypassword" type="String" required="false">
		<help><![CDATA[
			Password to provide to the proxy server.
		]]></help>
		<values/>
	</parameter>
	<parameter name="resolveurl" type="boolean" required="false">
		<help><![CDATA[
			Yes: resolve links in the output page to absolute
				references
			No: does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfscript
		[cfscript code here]
	/cfscript
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfscript" single="false" xmlstyle="false">
	<help><![CDATA[
		Encloses a code block that contains cfscript statements.

		You cannot use some CFML reserved words in this tag. You
		cannot put a user-defined function whose name begins with any
		of these strings within this tag:
		cf,cf_,_cf,CFML,CFML_,_CFML
	]]></help>
</tag>
<!--
	cfsearch
		name = "search_name"
		collection = "collection_name"
		type = "criteria"
		criteria = "search_expression"
		maxRows = "number"
		startRow = "row_number"
		language = "language"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfsearch" single="true" xmlstyle="false">
	<help><![CDATA[
		Searches Verity collections using CFML or K2Server,
		whichever search engine a collection is registered by.
		(CFML can also search collections that have not been
		registered, with the cfcollection tag.)

		A collection must be created and indexed before this tag can
		return search results.
	]]></help>
	<return type="cfsearch" parameter="name"/>
	<parameter name="name" type="variableName" required="true">
		<help><![CDATA[
			Name of the search query.
		]]></help>
		<values/>
	</parameter>
	<parameter name="collection" type="String" required="true">
		<help><![CDATA[
			One or more path(s) and/or registered collection name(s).
			For a registered collection, specify the collection name.
			For an unregistered collection, specify an absolute path.
			Registered names are listed in the CFML Administrator,
			Verity Collections and Verity Server pages.
			
			To specify multiple collections, use a comma delimiter. For
			example: "CFUSER, e:\collections\personnel"
			
			If you specify multiple collections, you cannot include a
			combination of collections that are registered by K2Server
			and registered by Verity.
		]]></help>
		<values/>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			simple: STEM and MANY operators are implicitly used. See
				Using Verity Search Expressions in Developing
				CFML MX Applications.
			explicit: operators must be invoked explicitly
		]]></help>
		<values default="simple">
			<value option="simple"/>
			<value option="explicit"/>
		</values>
	</parameter>
	<parameter name="criteria" type="String" required="false">
		<help><![CDATA[
			Search criteria. Follows the syntax rules of the type
			attribute. If you pass a mixed-case entry in this attribute,
			the search is case-sensitive. If you pass all uppercase or
			all lowercase, the search is case-insensitive. Follow
			Verity syntax and delimiter character rules; see Using
			Verity Search Expressions in Developing CFML MX
			Applications.
		]]></help>
		<values/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of rows to return in query results.
			Default: all
		]]></help>
		<values default="all"/>
	</parameter>
	<parameter name="startrow" type="Numeric" required="false">
		<help><![CDATA[
			First row number to get.
			Default: 1
		]]></help>
		<values default="1"/>
	</parameter>
	<parameter name="language" type="String" required="false">
		<help><![CDATA[
			For options, see cfcollection. Requires the CFML
			International Search Pack.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfselect 
		name = "name"
		required = "boolean"
		message = "text"
		onError = "text"
		size = "integer"
		multiple = "boolean"
		query = "queryname"
		selected = "column_value"
		value = "text"
		display = "text"
		passThrough = "html_attributes"

	zero or more HTML option tags
	/cfselect
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfselect" single="false" xmlstyle="false">
	<help><![CDATA[
		Constructs a drop-down list box form control. Used within a
		cfform tag.

		You can populate the list from a query, or by using the HTML
		option tag.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name of the select form element
		]]></help>
		<values/>
	</parameter>
	<parameter name="size" type="Numeric" required="false">
		<help><![CDATA[
			Number of entries to display at one time. The default, 1,
			displays a drop-down list. Any other value displays a list
			box with size number of entries visible at one time.
		]]></help>
		<values default="1"/>
	</parameter>
	<parameter name="required" type="boolean" required="false">
		<help><![CDATA[
			If true a list element must be selected when form is submitted.
			Note: This attribute has no effect if you omit the size
			attribute or set it to 1 because the browser always submits
			the displayed item. You can work around this issue format
			forms by having an initial option tag with value=" " (note the
			space character between the quotation marks).
			Default: false
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="message" type="String" required="false">
		<help><![CDATA[
			Message to display if required="true" and no selection is made.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to execute if validation fails.
		]]></help>
		<values/>
	</parameter>
	<parameter name="multiple" type="boolean" required="false">
		<help><![CDATA[
			- true: allow selecting multiple elements in drop-down list
			- false: don't allow selecting multiple elements
			Default: false
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="query" type="String" required="false">
		<help><![CDATA[
			Name of query to populate drop-down list.
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Query column to use for the value of each list element.
			Used with query attribute.
		]]></help>
		<values/>
	</parameter>
	<parameter name="display" type="String" required="false">
		<help><![CDATA[
			Query column to use for the display label of each list
			element. Used with query attribute.
		]]></help>
		<values/>
	</parameter>
	<parameter name="selected" type="String" required="false">
		<help><![CDATA[
			One or more option values to preselect in the selection list.
			To specify multiple values, use a comma-delimited list. This
			attribute applies only if selection list items are generated
			from a query. The cfform preservedata attribute value can
			override this value.
		]]></help>
		<values/>
	</parameter>
	<parameter name="passthrough" type="String" required="false">
		<help><![CDATA[
			Passes one or more arbitrary attribute-value pairs to the
			HTML code that is generated for the tag. You can use either
			of the following formats to include the quotation marks
			around the attribute value:
			
			passthrough="ID=""myID"""
			passthrough='ID="myID"'
			
			The second format, which surrounds all the attribute-value
			pairs to be passed through in single quotation marks is
			clearer, particularly when you pass multiple HTML
			attributes.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfset
		var variable_name = expression
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfset" allowanyattribute="true" single="true" xmlstyle="false">
	<help><![CDATA[
		Sets a value in CFML. Used to create a variable, if it
		does not exist, and assign it a value. Also used to call
		functions.
	]]></help>
</tag>
<!--
	cfsetting
		enableCFoutputOnly = "boolean"
		showDebugOutput = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfsetting" single="false" hybrid="true" xmlstyle="false">
	<help><![CDATA[
		Controls aspects of page processing, such as the output of
		HTML code in pages.
	]]></help>
	<parameter name="enablecfoutputonly" type="boolean" required="false">
		<help><![CDATA[
			Yes: blocks output of HTML that is outside cfoutput tags
			No: displays HTML that is outside cfoutput tags.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="showdebugoutput" type="boolean" required="false">
		<help><![CDATA[
			Yes: If debugging is enabled in the Administrator, displays
				debugging information
			No: suppresses debugging information that would otherwise
				display at end of generated page.
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfsilent
	...
	/cfsilent
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfsilent" single="false" xmlstyle="false">
	<help><![CDATA[
		Suppresses output produced by CFML within a tag's scope.
	]]></help>
</tag>
<!--
	cfslider 
		name = "name"
		label = "text"
		range = "min_value, max_value"
		scale = "uinteger"
		value = "integer"
		onValidate = "script_name"
		message = "text"
		onError = "text"
		height = "integer"
		width = "integer"
		vSpace = "integer"
		hSpace = "integer"
		align = "alignment"
		lookAndFeel = "motif" or "windows" or "metal"
		vertical = "boolean"
		bgColor = "color"
		textColor = "color"
		font = "font_name"
		fontSize = "integer"
		italic = "boolean"
		bold = "boolean"
		notSupported = "text"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfslider" single="true" xmlstyle="false">
	<help><![CDATA[
		Puts a slider control, for selecting a numeric value from a
		range, in a ColdFusion form. The slider moves over the slider
		groove. As the user moves the slider, the current value
		displays. Used within a cfform tag.
		Not supported with Flash forms.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name for cfslider control.
		]]></help>
		<values/>
	</parameter>
	<parameter name="label" type="String" required="false">
		<help><![CDATA[
			Label to display with control.
			For example, "Volume" This displays: "Volume %value%"
			To reference the value, use "%value%". If %% is omitted,
			slider value displays directly after label.
		]]></help>
		<values/>
	</parameter>
	<parameter name="range" type="String" required="false">
		<help><![CDATA[
			Numeric slider range values.
			Separate values with a comma.
		]]></help>
		<values default="0,100"/>
	</parameter>
	<parameter name="scale" type="Numeric" required="false">
		<help><![CDATA[
			Unsigned integer. Defines slider scale, within range.
			For example: if range = "0,1000" and scale = "100",
			the display values are: 0, 100, 200, 300, ...
			Signed and unsigned integers in ColdFusion are in the
			range -2,147,483,648 to 2,147,483,647. 
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Starting slider setting. Must be within the range values.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onvalidate" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to validate user input; in this
			case, a change to the default slider value. Specify only
			the function name.
		]]></help>
		<values/>
	</parameter>
	<parameter name="message" type="String" required="false">
		<help><![CDATA[
			Message text to appear if validation fails.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to execute if validation fails.
			Specify only the function name.
		]]></help>
		<values/>
	</parameter>
	<parameter name="height" type="Numeric" required="false">
		<help><![CDATA[
			Slider control height, in pixels.
		]]></help>
		<values default="40"/>
	</parameter>
	<parameter name="width" type="Numeric" required="false">
		<help><![CDATA[
			Slider control width, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="vspace" type="Numeric" required="false">
		<help><![CDATA[
			Vertical spacing above and below slider, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="hspace" type="Numeric" required="false">
		<help><![CDATA[
			Horizontal spacing to left and right of slider, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="align" type="String" required="false">
		<help><![CDATA[
			Alignment of slider:
			* top
			* left
			* bottom
			* baseline
			* texttop
			* absbottom
			* middle
			* absmiddle
			* right
		]]></help>
		<values>
			<value option="top"/>
			<value option="left"/>
			<value option="bottom"/>
			<value option="baseline"/>
			<value option="texttop"/>
			<value option="absbottom"/>
			<value option="middle"/>
			<value option="absmiddle"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="lookandfeel" type="String" required="false">
		<help><![CDATA[
			- motif: renders slider in Motif style
			- windows: renders slider in Windows style
			- metal: renders slider in Java Swing style
			If platform does not support style option, tag defaults to
			platform default style.
			Default: windows
		]]></help>
		<values default="windows">
			<value option="motif"/>
			<value option="windows"/>
			<value option="metal"/>
		</values>
	</parameter>
	<parameter name="vertical" type="boolean" required="false">
		<help><![CDATA[
			Yes: Renders slider in browser vertically. You must set
			width and height attributes; ColdFusion does not
			automatically swap width and height values.
			No: Renders slider horizontally.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="bgcolor" type="String" required="false">
		<help><![CDATA[
			Background color of control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="gray"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="textcolor" type="String" required="false">
		<help><![CDATA[
			Text color for control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="gray"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="font" type="String" required="false">
		<help><![CDATA[
			Font name for data in tree control.
		]]></help>
		<values default="arial">
			<value option="arial"/>
			<value option="times"/>
			<value option="courier"/>
			<value option="arialunicodeMS"/>
		</values>
	</parameter>
	<parameter name="fontsize" type="Numeric" required="false">
		<help><![CDATA[
			Font size for text in tree control, in points.
		]]></help>
		<values/>
	</parameter>
	<parameter name="italic" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays tree control text in italics
			No: it does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="bold" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays tree control text in bold
			No: it does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="notsupported" type="String" required="false">
		<help><![CDATA[
			Text to display if a page that contains a Java applet-based
			cfform control is opened by a browser that does not
			support Java or has Java support disabled.
			Default:
			"<b>Browser must support Java to <br>view ColdFusion Java
			Applets!</b>"
		]]></help>
		<values default="&lt;b&gt;Browser must support Java to &lt;br&gt;view ColdFusion Java Applets!&lt;/b&gt;"/>
	</parameter>
</tag>
<!--
	cfstoredproc
		procedure = "procedure name"
		dataSource = "ds_name"
		username = "username"
		password = "password"
		blockFactor = "blocksize"
		debug = "boolean"
		returnCode = "boolean"
		result = "result_name"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfstoredproc" single="false" xmlstyle="false">
	<help><![CDATA[
		Executes a stored procedure in a server database. It
		specifies database connection information and identifies
		the stored procedure.
	]]></help>
	<return type="cfstoredproc" name="cfstoredproc"/>
	<parameter name="procedure" type="String" required="true">
		<help><![CDATA[
			Name of stored procedure on database server.
		]]></help>
		<values/>
	</parameter>
	<parameter name="datasource" type="String" required="true">
		<help><![CDATA[
			Name of data source that points to database that contains
			stored procedure.
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Overrides username in data source setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Overrides password in data source setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="blockfactor" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of rows to get at a time from server.
			Range is 1 to 100.
		]]></help>
		<values/>
	</parameter>
	<parameter name="debug" type="boolean" required="false">
		<help><![CDATA[
			Yes: Lists debug information on each statement
			No: does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="returncode" type="boolean" required="false">
		<help><![CDATA[
			Yes: Tag populates cfstoredproc.statusCode with status
				code returned by stored procedure.
			No: does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cfswitch
		expression = "expression"
		[one or more cfcase tags
		zero or one cfdefaultcase tags]
	/cfswitch
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfswitch" single="false" xmlstyle="false">
	<help><![CDATA[
		Evaluates a passed expression and passes control to the cfcase
		tag that matches the expression result. You can, optionally,
		code a cfdefaultcase tag, which receives control if there is no
		matching cfcase tag value.
	]]></help>
	<parameter name="expression" type="String" required="true">
		<help><![CDATA[
			CFML expression that yields a scalar value.
			CFML converts integers, real numbers, Booleans, and
			dates to numeric values. For example, True, 1, and 1.0 are
			all equal.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cftable
		query = "query_name"
		maxRows = "maxrows_table"
		colSpacing = "number_of_spaces"
		headerLines = "number_of_lines"
		HTMLTable
		border
		colHeaders
		startRow = "row_number">
	/cftable

--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cftable" single="false" xmlstyle="false">
	<help><![CDATA[
		Builds a table in a CFML page. This tag renders data as
		preformatted text, or, with the HTMLTable attribute, in an
		HTML table. If you do not want to write HTML table tag code, or
		if your data can be presented as preformatted text, use this
		tag.

		Preformatted text (defined in HTML with the <pre> and </pre>
		tags) displays text in a fixed-width font. It displays white
		space and line breaks exactly as they are written within the
		pre tags. For more information, see an HTML reference guide.

		To define table column and row characteristics, use the cfcol
		tag within this tag.
	]]></help>
	<parameter name="query" type="String" required="true">
		<help><![CDATA[
			Name of cfquery from which to draw data.
		]]></help>
		<values/>
	</parameter>
	<parameter name="maxrows" type="Numeric" required="false">
		<help><![CDATA[
			Maximum number of rows to display in the table.
		]]></help>
		<values/>
	</parameter>
	<parameter name="colspacing" type="Numeric" required="false">
		<help><![CDATA[
			Number of spaces between columns
		]]></help>
		<values/>
	</parameter>
	<parameter name="headerlines" type="Numeric" required="false">
		<help><![CDATA[
			Number of lines to use for table header (the default leaves
			one line between header and first row of table).
		]]></help>
		<values/>
	</parameter>
	<parameter name="htmltable" type="Any" required="false">
		<help><![CDATA[
			Renders data in an HTML 3.0 table.

			If you use this attribute (regardless of its value),
			CFML renders data in an HTML table.
		]]></help>
		<values/>
	</parameter>
	<parameter name="border" type="Any" required="false">
		<help><![CDATA[
			Displays border around table.

			If you use this attribute (regardless of its value),
			CFML displays a border around the table.

			Use this only if you use the HTMLTable attribute.
		]]></help>
		<values/>
	</parameter>
	<parameter name="colheaders" type="Any" required="false">
		<help><![CDATA[
			Displays column heads. If you use this attribute, you must
			also use the cfcol tag header attribute to define them.

			If you use this attribute (regardless of its value),
			CFML displays column heads.
		]]></help>
		<values/>
	</parameter>
	<parameter name="startrow" type="Numeric" required="false">
		<help><![CDATA[
			The query result row to put in the first table row.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cftextinput
		name = "name"
		value = "text"
		required = "boolean"
		range = "min_value, max_value"
		validate = "data_type"
		pattern = "Java regular expression"
		onValidate = "script_name"
		message = "text"
		onError = "text"
		size = "integer"
		font = "font_name"
		fontSize = "integer"
		italic = "boolean"
		bold = "boolean"
		height = "integer"
		width = "integer"
		vSpace = "integer"
		hSpace = "integer"
		align = "alignment"
		bgColor = "color"
		textColor = "color"
		maxLength = "integer"
		notSupported = "text"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cftextinput" single="true" xmlstyle="false">
	<help><![CDATA[
		Puts a single-line text entry box in a cfform tag and controls
		its display characteristics.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name for the cftextinput control.
		]]></help>
		<values/>
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Initial value to display in text control.
		]]></help>
		<values/>
	</parameter>
	<parameter name="required" type="boolean" required="false">
		<help><![CDATA[
			Yes: the user must enter or change text
			No
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="range" type="String" required="false">
		<help><![CDATA[
			Minimum-maximum value range, delimited by a comma.
			Valid only for numeric data.
		]]></help>
		<values/>
	</parameter>
	<parameter name="validate" type="String" required="false">
		<help><![CDATA[
			date: verifies format mm/dd/yy.
			eurodate: verifies date format dd/mm/yyyy.
			time: verifies time format hh:mm:ss.
			float: verifies floating point format.
			integer: verifies integer format.
			telephone: verifies telephone format ###-###-####. The
				separator can be a blank. Area code and exchange must
				begin with digit 1 - 9.
			zipcode: verifies, in U.S. formats only, 5- or 9-digit
				format #####-####. The separator can be a blank.
			creditcard: strips blanks and dashes; verifies number using
				mod10 algorithm. Number must have 13-16 digits.
			social_security_number: verifies format ###-##-####. The
				separator can be a blank.
			regular_expression: matches input against pattern
				attribute.
		]]></help>
		<values>
			<value option="date"/>
			<value option="eurodate"/>
			<value option="time"/>
			<value option="float"/>
			<value option="integer"/>
			<value option="telephone"/>
			<value option="zipcode"/>
			<value option="creditcard"/>
			<value option="social_security_number"/>
			<value option="regular_expression"/>
		</values>
	</parameter>
	<parameter name="onvalidate" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to validate user input. The form
			object, input object, and input object value are passed to
			routine, which should return True if validation succeeds,
			False otherwise. The validate attribute is ignored.
		]]></help>
		<values/>
	</parameter>
	<parameter name="pattern" type="Regex" required="false">
		<help><![CDATA[
			JavaScript regular expression pattern to validate input.
			Omit leading and trailing slashes
		]]></help>
		<values/>
	</parameter>
	<parameter name="message" type="String" required="false">
		<help><![CDATA[
			Message text to display if validation fails
		]]></help>
		<values/>
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to execute if validation fails.
		]]></help>
		<values/>
	</parameter>
	<parameter name="size" type="Numeric" required="false">
		<help><![CDATA[
			Number of characters displayed before horizontal scroll
			bar displays.
		]]></help>
		<values/>
	</parameter>
	<parameter name="font" type="String" required="false">
		<help><![CDATA[
			Font name for data in tree control.
		]]></help>
		<values default="arial">
			<value option="arial"/>
			<value option="times"/>
			<value option="courier"/>
			<value option="arialunicodeMS"/>
		</values>
	</parameter>
	<parameter name="fontsize" type="Numeric" required="false">
		<help><![CDATA[
			Font size for text in tree control, in points.
		]]></help>
		<values/>
	</parameter>
	<parameter name="italic" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays tree control text in italics
			No: it does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="bold" type="boolean" required="false">
		<help><![CDATA[
			Yes: displays tree control text in bold
			No: it does not
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="height" type="Numeric" required="false">
		<help><![CDATA[
			Tree control height, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="width" type="Numeric" required="false">
		<help><![CDATA[
			Tree control width, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="vspace" type="Numeric" required="false">
		<help><![CDATA[
			Vertical margin above and below tree control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="hspace" type="Numeric" required="false">
		<help><![CDATA[
			Horizontal spacing to left and right of tree control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="align" type="String" required="false">
		<help><![CDATA[
			* top
			* left
			* bottom
			* baseline
			* texttop
			* absbottom
			* middle
			* absmiddle
			* right
		]]></help>
		<values>
			<value option="top"/>
			<value option="left"/>
			<value option="bottom"/>
			<value option="baseline"/>
			<value option="texttop"/>
			<value option="absbottom"/>
			<value option="middle"/>
			<value option="absmiddle"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="bgcolor" type="String" required="false">
		<help><![CDATA[
			Background color of control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="gray"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="textcolor" type="String" required="false">
		<help><![CDATA[
			Text color for control. For a hex value, use the form:
			textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
			signs or none.
		]]></help>
		<values>
			<value option="black"/>
			<value option="red"/>
			<value option="blue"/>
			<value option="magenta"/>
			<value option="cyan"/>
			<value option="orange"/>
			<value option="darkgray"/>
			<value option="pink"/>
			<value option="gray"/>
			<value option="white"/>
			<value option="lightgray"/>
			<value option="yellow"/>
		</values>
	</parameter>
	<parameter name="maxlength" type="Numeric" required="false">
		<help><![CDATA[
			The maximum length of text entered.
		]]></help>
		<values/>
	</parameter>
	<parameter name="notsupported" type="String" required="false">
		<help><![CDATA[
			Text to display if a page that contains a Java applet-based
			cfform control is opened by a browser that does not
			support Java or has Java support disabled.
			Default:
			"<b>Browser must support Java to <br>view ColdFusion Java
			Applets!</b>"
		]]></help>
		<values default="&lt;b&gt;Browser must support Java to &lt;br&gt;view ColdFusion Java Applets!&lt;/b&gt;"/>
	</parameter>
</tag>
<!--
	cfthrow
		type = "exception_type "
		message = "message"
		detail = "detail_description "
		errorCode = "error_code "
		extendedInfo = "additional_information"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfthrow" single="true" xmlstyle="false">
	<help><![CDATA[
		Throws a developer-specified exception, which can be caught
		with a cfcatch tag that has any of the following type attribute
		options:
                type = "custom_type"
                type = "Application"
                type = "Any"
	]]></help>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			* A custom type
			* Application
			Do not enter another predefined type; types are not
			generated by CFML applications. If you specify
			Application, you need not specify a type for cfcatch.
		]]></help>
		<values default="Custom">
			<value option="Custom"/>
			<value option="Application"/>
			<value option="Database"/>
			<value option="Template"/>
			<value option="Security"/>
			<value option="Object"/>
			<value option="MissingInclude"/>
			<value option="Expression"/>
			<value option="Lock"/>
			<value option="SearchEngine"/>
		</values>
	</parameter>
	<parameter name="message" type="String" required="false">
		<help><![CDATA[
			Message that describes exception event.
		]]></help>
		<values/>
	</parameter>
	<parameter name="detail" type="String" required="false">
		<help><![CDATA[
			Description of the event. CFML appends error position
			to description; server uses this parameter if an error is
			not caught by your code.
		]]></help>
		<values/>
	</parameter>
	<parameter name="errorcode" type="String" required="false">
		<help><![CDATA[
			A custom error code that you supply.
		]]></help>
		<values/>
	</parameter>
	<parameter name="extendedinfo" type="String" required="false">
		<help><![CDATA[
			A custom error code that you supply.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cftransaction
		action = "begin" or "commit" or "rollback"
		isolation = "read_uncommitted" or "read_committed" or "repeatable_read"
	/cftransaction
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cftransaction" single="false" xmlstyle="false">
	<help><![CDATA[
		Instructs the database management system to treat multiple
		database operations as a single transaction. Provides database
		commit and rollback processing.
	]]></help>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
			<ul>
			<li>begin: the start of the block of code to execute</li>
			<li>commit: commits a pending transaction</li>
			<li>rollback: rolls back a pending transaction</li>
			</ul>
		]]></help>
		<values default="begin">
			<value option="begin"/>
			<value option="commit"/>
			<value option="rollback"/>
		</values>
	</parameter>
	<parameter name="isolation" type="String" required="false">
		<help><![CDATA[
			ODBC lock type.
		]]></help>
		<values>
			<value option="read_uncommitted"/>
			<value option="read_committed"/>
			<value option="repeatable_read"/>
		</values>
	</parameter>
</tag>
<!--
	cftree
		name = "name"
		required = "boolean"
		delimiter = "delimiter"
		completePath = "boolean"
		appendKey = "boolean"
		highlightHref = "boolean"
		onValidate = "script_name"
		message = "text"
		onError = "text"
		lookAndFeel = "motif" or "windows" or "metal"
		font = "font"
		fontSize = "size"
		italic = "boolean"
		bold = "boolean"
		height = "integer"
		width = "integer"
		vSpace = "integer"
		hSpace = "integer"
		align = "alignment"
		border = "boolean"
		hScroll = "boolean"
		vScroll = "boolean"
		notSupported = "text"
	...
	/cftree
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cftree" single="false" xmlstyle="false">
	<help><![CDATA[
		Inserts a tree control in a form. Validates user selections.
		Used within a cftree tag block. You can use a CFML query
		to supply data to the tree.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name for tree control.
		]]></help>
		<values/>
	</parameter>
	<parameter name="required" type="boolean" required="false">
		<help><![CDATA[
			- true: user must select an item in tree control
			- false: they do not
			Default: false
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			Character to separate elements in form variable path.
			Default: \\
		]]></help>
		<values default="\\">
			<value option="\\"/>
			<value option=","/>
			<value option=";"/>
			<value option="|"/>
			<value option=":"/>
		</values>
	</parameter>
	<parameter name="completepath" type="boolean" required="false">
		<help><![CDATA[
			Yes: passes the root part of treename.path form variable
				when cftree is submitted
			No, or omitted: root level of form variable is not passed;
				path value starts with the first node
			For the preserveData attribute of cfform to work with the
			tree, you must set this attribute to Yes.
			If you specify a root name for a tree item with cftreeitem
			queryasroot, that value is returned. If you do not specify
			a root name, CFML returns the query name as the root.
			Default: false
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="appendkey" type="boolean" required="false">
		<help><![CDATA[
			- true: if you use cftreeitem href attributes, ColdFusion
			  appends a CFTREEITEMKEY query string variable with
			  the value of the selected tree item to the cfform action URL.
			- false: do not append the tree item value to the URL.
			Default: true
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="highlighthref" type="boolean" required="false">
		<help><![CDATA[
			- true: highlights as a link the displayed value for any
			  cftreeitem tag that specifies a href attribute.
			- false: disables highlighting.
			Default: true
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="onvalidate" type="String" required="false">
		<help><![CDATA[
			JavaScript function to validate user input. The form object,
			input object, and input object value are passed to the
			specified routine, which should return True if validation
			succeeds; False, otherwise.
		]]></help>
		<values/>
	</parameter>
	<parameter name="message" type="String" required="false">
		<help><![CDATA[
			Message to display if validation fails.
		]]></help>
		<values/>
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			JavaScript function to execute if validation fails.
		]]></help>
		<values/>
	</parameter>
	<parameter name="lookandfeel" type="String" required="false">
		<help><![CDATA[
			- motif: renders slider in Motif style
			- windows: renders slider in Windows style
			- metal: renders slider in Java Swing style
			If platform does not support style option, tag defaults to
			platform default style.
			Default: windows
		]]></help>
		<values default="windows">
			<value option="motif"/>
			<value option="windows"/>
			<value option="metal"/>
		</values>
	</parameter>
	<parameter name="font" type="String" required="false">
		<help><![CDATA[
			Font name for data in tree control.
		]]></help>
		<values default="arial">
			<value option="arial"/>
			<value option="times"/>
			<value option="courier"/>
			<value option="arialunicodeMS"/>
		</values>
	</parameter>
	<parameter name="fontsize" type="Numeric" required="false">
		<help><![CDATA[
			Font size for text in tree control, in points.
		]]></help>
		<values/>
	</parameter>
	<parameter name="italic" type="boolean" required="false">
		<help><![CDATA[
			- true: displays tree control text in italics
			- false: it does not
			Default: false
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="bold" type="boolean" required="false">
		<help><![CDATA[
			- true: displays tree control text in bold
			- false: it does not
			Default: false
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="height" type="Numeric" required="false">
		<help><![CDATA[
			Tree control height, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="width" type="Numeric" required="false">
		<help><![CDATA[
			Tree control width, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="vspace" type="Numeric" required="false">
		<help><![CDATA[
			Vertical margin above and below tree control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="hspace" type="Numeric" required="false">
		<help><![CDATA[
			Horizontal spacing to left and right of tree control, in pixels.
		]]></help>
		<values/>
	</parameter>
	<parameter name="align" type="String" required="false">
		<help><![CDATA[
			Alignment of the tree control applet object.
		]]></help>
		<values>
			<value option="top"/>
			<value option="left"/>
			<value option="bottom"/>
			<value option="baseline"/>
			<value option="texttop"/>
			<value option="absbottom"/>
			<value option="middle"/>
			<value option="absmiddle"/>
			<value option="right"/>
		</values>
	</parameter>
	<parameter name="border" type="boolean" required="false">
		<help><![CDATA[
			- true: display a border around the tree control.
			- false: no border
			Default: true
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="hscroll" type="boolean" required="false">
		<help><![CDATA[
			- true: permits horizontal scrolling
			- false: no horizontal scrolling
			Default: true
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="vscroll" type="boolean" required="false">
		<help><![CDATA[
			- true: permits vertical scrolling
			- false: no vertical scrolling
			Default: true
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="notsupported" type="String" required="false">
		<help><![CDATA[
			Text to display if a page that contains a Java applet-based
			cfform control is opened by a browser that does not
			support Java or has Java support disabled.
			Default:
			"<b>Browser must support Java to <br>view ColdFusion Java
			Applets!</b>"
		]]></help>
		<values default="&lt;b&gt;Browser must support Java to &lt;br&gt;view ColdFusion Java Applets!&lt;/b&gt;"/>
	</parameter>
</tag>
<!--
	cftreeitem
		value = "text"
		display = "text"
		parent = "parent_name"
		img = "filename"
		imgopen = "filename"
		href = "URL"
		target = "URL_target"
		query = "queryname"
		queryAsRoot = "boolean"
		expand = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cftreeitem" single="true" xmlstyle="false">
	<help><![CDATA[
		Populates a form tree control, created with the cftree tag,
		with elements. To display icons, you can use the img values
		that CFML provides, or reference your own icons.
	]]></help>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			Value passed when cfform is submitted. When populating a
			tree with data from a cfquery, specify columns in a
			delimited list. Example: value = "dept_id,emp_id"
		]]></help>
		<values/>
	</parameter>
	<parameter name="display" type="String" required="false">
		<help><![CDATA[
			Tree item label. When populating a tree with data from a
			query, specify names in a delimited list. Example:
			display = "dept_name,emp_name"
		]]></help>
		<values/>
	</parameter>
	<parameter name="parent" type="String" required="false">
		<help><![CDATA[
			Value for tree item parent.
		]]></help>
		<values/>
	</parameter>
	<parameter name="img" type="String" required="false">
		<help><![CDATA[
			Image name, filename, or file URL for tree item icon.

			You can specify a custom image. To do so, include path and
			file extension; for example:

			img = "../images/page1.gif"

			To specify more than one image in a tree, or an image at
			the second or subsequent level, use commas to separate
			names, corresponding to level; for example:

			img = "folder,document"
			img = ",document" (example of second level)
		]]></help>
		<values>
			<value option="cd"/>
			<value option="computer"/>
			<value option="document"/>
			<value option="element"/>
			<value option="folder"/>
			<value option="floppy"/>
			<value option="fixed"/>
			<value option="remote"/>
		</values>
	</parameter>
	<parameter name="imgopen" type="String" required="false">
		<help><![CDATA[
			Icon displayed with open tree item. You can specify icon
			filename with a relative path. You can use a CFML
			image.
		]]></help>
		<values/>
	</parameter>
	<parameter name="href" type="String" required="false">
		<help><![CDATA[
			URL to associate with tree item or query column for a tree
			that is populated from a query. If href is a query column,
			its value is the value populated by query. If href is not
			recognized as a query column, it is assumed that its text
			is an HTML href.

			When populating a tree with data from a query, HREFs can be
			specified in delimited list; for example:

			href = "http://dept_svr,http://emp_svr"
		]]></help>
		<values/>
	</parameter>
	<parameter name="target" type="String" required="false">
		<help><![CDATA[
			Target attribute of href URL. When populating a tree with
			data from a query, specify target in delimited list:

			target = "FRAME_BODY,_blank"
		]]></help>
		<values/>
	</parameter>
	<parameter name="query" type="String" required="false">
		<help><![CDATA[
			Query name to generate data for the treeitem.
		]]></help>
		<values/>
	</parameter>
	<parameter name="queryAsRoot" type="String" required="false">
		<help><![CDATA[
			Defines query as the root level. This avoids having to
			create another parent cftreeitem.

				* Yes
				* No
				* String to use as the root name
			If you do not specify a root name, CFML returns the
			query name as the root.
		]]></help>
		<values/>
	</parameter>
	<parameter name="expand" type="boolean" required="false">
		<help><![CDATA[
			Yes: expands tree to show tree item children
			No: keeps tree item collapsed
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
<!--
	cftry
	   Code that might throw an exception
	   One or more cfcatch blocks
	/cftry
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cftry" single="false" xmlstyle="false">
	<help><![CDATA[
		Used with one or more cfcatch tags. Together, they catch and
		process exceptions in CFML pages. Exceptions are events
		that disrupt the normal flow of instructions in a CFML
		page, such as failed database operations, missing include
		files, and developer-specified events.
	]]></help>
</tag>
<!--
	cfupdate
		dataSource = "ds_name"
		tableName = "table_name"
		tableOwner = "name"
		tableQualifier = "qualifier"
		username = "username"
		password = "password"
		formFields = "field_names"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfupdate" single="true" xmlstyle="false">
	<help><![CDATA[
		Updates records in a data source from data in a CFML form
		or form Scope.
	]]></help>
	<parameter name="datasource" type="String" required="true">
		<help><![CDATA[
			Name of the data source that contains the table
		]]></help>
		<values/>
	</parameter>
	<parameter name="tablename" type="String" required="true">
		<help><![CDATA[
			Name of table to update.
				For ORACLE drivers, must be uppercase.
				For Sybase driver: case-sensitive; must be in same case
				as used when the table was created
		]]></help>
		<values/>
	</parameter>
	<parameter name="tableowner" type="String" required="false">
		<help><![CDATA[
			For data sources that support table ownership (for example,
			SQL Server, Oracle, Sybase SQL Anywhere), the table owner.
		]]></help>
		<values/>
	</parameter>
	<parameter name="tablequalifier" type="String" required="false">
		<help><![CDATA[
			For data sources that support table qualifiers. The purpose
			of table qualifiers is as follows:
				SQL Server and Oracle: name of database that contains
				table
				Intersolv dBASE driver: directory of DBF files
		]]></help>
		<values/>
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			Overrides username value specified in ODBC setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			Overrides password value specified in ODBC setup.
		]]></help>
		<values/>
	</parameter>
	<parameter name="formfields" type="String" required="false">
		<help><![CDATA[
			Comma-delimited list of form fields to update.

			If a form field is not matched by a column name in the
			database, CFML throws an error.

			The formFields lies must include the database table primary
			key field, which must be present in the form. It can be
			hidden.
		]]></help>
		<values/>
	</parameter>
</tag>
<!--
	cfwddx
		action = "action"
		input = "inputdata"
		output = "resultvariablename"
		topLevelVariable = "toplevelvariablenameforjavascript"
		useTimeZoneInfo = "boolean"
		validate = "boolean"
--><tag xmlns="http://www.cfeclipse.org/version1/dictionary" name="cfwddx" single="true" xmlstyle="false">
	<help><![CDATA[
		Serializes and deserializes CFML data structures to the
		XML-based WDDX format. The WDDX is an XML vocabulary for
		describing complex data structures in a standard, generic way.
		Implementing it lets you use the HTTP protocol to such
		information among application server platforms, application
		servers, and browsers.

		This tag generates JavaScript statements to instantiate
		JavaScript objects equivalent to the contents of a WDDX packet
		or CFML data structure. Interoperates with Unicode.
	]]></help>
	<return type="Any" parameter="output"/>
	<parameter name="action" type="String" required="true">
		<help><![CDATA[
			cfml2wddx: serialize CFML to WDDX
			wddx2cfml: deserialize WDDX to CFML
			cfml2js: serialize CFML to JavaScript
			wddx2js: deserialize WDDX to JavaScript
		]]></help>
		<values>
			<value option="cfml2wddx"/>
			<value option="wddx2cfml"/>
			<value option="cfml2js"/>
			<value option="wddx2js"/>
		</values>
	</parameter>
	<parameter name="input" type="String" required="true">
		<help><![CDATA[
			A value to process
		]]></help>
		<values/>
	</parameter>
	<parameter name="output" type="variableName" required="false">
		<help><![CDATA[
			Name of variable for output. If action = "WDDX2JS" or
			"CFML2JS", and this attribute is omitted, result is output
			in HTML stream.
		]]></help>
		<values/>
	</parameter>
	<parameter name="toplevelvariable" type="String" required="false">
		<help><![CDATA[
			Name of top-level JavaScript object created by
			deserialization. The object is an instance of the
			WddxRecordset object.
		]]></help>
		<values/>
	</parameter>
	<parameter name="usetimezoneinfo" type="boolean" required="false">
		<help><![CDATA[
			Whether to output time-zone information when serializing
			CFML to WDDX.
				- Yes: the hour-minute offset, represented in ISO8601
					format, is output.
				- No: the local time is output.
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
	<parameter name="validate" type="boolean" required="false">
		<help><![CDATA[
			Applies if action = "wddx2cfml" or "wddx2js".
				- Yes: validates WDDX input with an XML parser using
					WDDX DTD. If parser processes input without error,
					packet is deserialized. Otherwise, an error is
					thrown.
				- No: no input validation
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</tag>
	</tags>

	<functions>
<!--
	Numeric Abs(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="abs" returns="Numeric">
	<help><![CDATA[
		Absolute-value function. The absolute value of a number is
		the number without its sign.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric ACos(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="acos" returns="Numeric">
	<help><![CDATA[
		Returns the angle whose cosine is the value passed as the argument.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
			The value to be converted into an angle. Must be between -1 and 1.
		]]></help>
	</parameter>
</function>
<!--
	boolean ArrayAppend(array, value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayappend" returns="boolean">
	<help><![CDATA[
		Appends an array element to an array.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
			The array to which the element should be appended.
		]]></help>
	</parameter>
	<parameter name="value" type="Any" required="true">
		<help><![CDATA[
			The element to append. Can be any type.
		]]></help>
	</parameter>
</function>
<!--
	Numeric ArrayAvg(array)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayavg" returns="Numeric">
	<help><![CDATA[
		Calculates the average of the values in an array.
		All elements in the array must contain values that can be
		automatically converted to numeric.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean ArrayClear(array)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayclear" returns="boolean">
	<help><![CDATA[
		Removes all elements from an array.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean ArrayDeleteAt(array, position)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraydeleteat" returns="boolean">
	<help><![CDATA[
		Deletes an element from an array and resizes the array
		so that the deleted element doesn't leave a gap.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
			The array that the element will be deleted from.
		]]></help>
	</parameter>
	<parameter name="position" type="Numeric" required="true">
		<help><![CDATA[
			The numeric position of the element. Remember that
			ColdFusion arrays start at 1 not 0.
		]]></help>
	</parameter>
</function>
<!--
	boolean ArrayInsertAt(array, position, value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayinsertat" returns="boolean">
	<help><![CDATA[
		Inserts a value at the specified position in the array. If
		the element is inserted before the end of the array, ColdFusion
		shifts the positions of all elements with a higher index to make room.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
			The array which will have the new element inserted.
		]]></help>
	</parameter>
	<parameter name="position" type="Numeric" required="true">
		<help><![CDATA[
			The numerical index in the array where the new element will be inserted.
			Must be less than or equal to the length of the array.
			Remember ColdFusion arrays start at 1 not 0.
		]]></help>
	</parameter>
	<parameter name="value" type="Any" required="true">
		<help><![CDATA[
			The new element to insert.
		]]></help>
	</parameter>
</function>
<!--
	boolean ArrayIsEmpty(array)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayisempty" returns="boolean">
	<help><![CDATA[
		Determines whether an array is empty. Equivalent to arrayLen().
		Calling this function on an array with 10 undefined elements
		will return false.
		CFML MX: this function can be used on XML objects.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric ArrayLen(array)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraylen" returns="Numeric">
	<help><![CDATA[
		Determines the number of elements in an array.
		CFML MX: this function can be used on child XML objects.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric ArrayMax(array)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraymax" returns="Numeric">
	<help><![CDATA[
		Returns the largest numeric value in an array. If the array
		parameter value is an empty array, returns zero.
		All elements must contain values that can be automatically
		converted to numeric values.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric ArrayMin(array)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraymin" returns="Numeric">
	<help><![CDATA[
		Returns the smallest numeric value in an array. If the array
		parameter value is an empty array, returns zero.
		All elements must contain values that can be automatically
		converted to numeric values.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Array ArrayNew(dimension)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraynew" returns="Array">
	<help><![CDATA[
		Creates an array of 1-3 dimensions. Index array elements
		with square brackets: [ ].
		CFML arrays expand dynamically as data is added.
	]]></help>
	<parameter name="dimension" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values default="1">
			<value option="1"/>
		</values>
	</parameter>
</function>
<!--
	boolean ArrayPrepend(array, value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayprepend" returns="boolean">
	<help><![CDATA[
		Inserts an array element at the beginning of an array
		and shifts the positions of the existing elements to
		make room.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean ArrayResize(array, minimum_size)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayresize" returns="boolean">
	<help><![CDATA[
		Resets an array to a specified minimum number of elements.
		This can improve performance, if used to size an array to its
		expected maximum. For more than 500 elements, use ArrayResize
		immediately after using the ArrayNew tag.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="size" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean ArraySet(array, start_pos, end_pos, value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayset" returns="boolean">
	<help><![CDATA[
		In a one-dimensional array, sets the elements in a specified
		index range to a value. Useful for initializing an array after
		a call to ArrayNew.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start_pos" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="end_pos" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean ArraySort(array, sort_type [, sort_order ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraysort" returns="boolean">
	<help><![CDATA[
		Sorts array elements numerically or alphanumerically.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
			Name of an array
		]]></help>
	</parameter>
	<parameter name="sort_type" type="String" required="true">
		<help><![CDATA[
			numeric: sorts numbers
			text: sorts text alphabetically, taking case into account
			(also known as case sensitive). All letters of one case
			precede the first letter of the other case:
				- aabzABZ, if sort_order = "asc" (ascending sort)
				- ZBAzbaa, if sort_order = "desc" (descending sort)

			textnocase: sorts text alphabetically, without regard to
			case (also known as case-insensitive). A letter in varying
			cases precedes the next letter:
 						- aAaBbBzzZ, in an ascending sort; preserves original
 							intra-letter order
				- ZzzBbBaAa, in a descending sort; reverses original
					intra-letter order
		]]></help>
		<values>
			<value option="numeric"/>
			<value option="text"/>
			<value option="textnocase"/>
		</values>
	</parameter>
	<parameter name="sort_order" type="String" required="false">
		<help><![CDATA[
			asc: ascending sort order. Default.
 						- aabzABZ or aAaBbBzzZ, depending on value of sort_type,
 							for letters
				- from smaller to larger, for numbers

			desc: descending sort order.
				- ZBAzbaa or ZzzBbBaAa, depending on value of sort_type,
					for letters
				- from larger to smaller, for numbers
		]]></help>
		<values default="asc">
			<value option="asc"/>
			<value option="desc"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ArraySum(array)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraysum" returns="Numeric">
	<help><![CDATA[
		The sum of values in an array. If the array parameter value is
		an empty array, returns zero.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean ArraySwap(array, position1, position2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arrayswap" returns="boolean">
	<help><![CDATA[
		Swaps array values of an array at specified positions. This
		function is more efficient than multiple cfset tags
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="position1" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="position2" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String ArrayToList(array [, delimiter ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="arraytolist" returns="String">
	<help><![CDATA[
		Converts a one-dimensional array to a list.
	]]></help>
	<parameter name="array" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option="_"/>
			<value option=";"/>
			<value option=":"/>
		</values>
	</parameter>
</function>
<!--
	Numeric Asc(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="asc" returns="Numeric">
	<help><![CDATA[
		Determines the value of a character.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric ASin(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="asin" returns="Numeric">
	<help><![CDATA[
		Determines the arcsine of a number. The arcsine is the angle
		whose sine is number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Atn(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="atn" returns="Numeric">
	<help><![CDATA[
		Arctangent function. The arctangent is the angle whose tangent
		is number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitAnd(number1, number2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitand" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise logical AND operation.
	]]></help>
	<parameter name="number1" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number2" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitMaskClear(number, start, length)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitmaskclear" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise mask clear operation.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="length" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitMaskRead(number, start, length)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitmaskread" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise mask read operation.
		Returns an integer, created from length bits of number,
		beginning at start.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="length" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitMaskSet(number, mask, start, length)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitmaskset" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise mask set operation.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="mask" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="length" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitNot(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitnot" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise logical NOT operation.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Bitor(number1, number2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitor" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise logical OR operation.
	]]></help>
	<parameter name="number1" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number2" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitSHLN(number, count)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitshln" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise shift-left, no-rotation operation.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="count" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitSHRN(number, count)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitshrn" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise shift-right, no-rotation operation.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="count" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric BitXor(number1, number2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="bitxor" returns="Numeric">
	<help><![CDATA[
		Performs a bitwise logical XOR operation.
	]]></help>
	<parameter name="number1" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number2" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Ceiling(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="ceiling" returns="Numeric">
	<help><![CDATA[
		Determines the closest integer that is greater than a
		specified number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Character Chr(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="chr" returns="char">
	<help><![CDATA[
		Converts a numeric value to a UCS-2 character.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String Cjustify(string, length)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="cjustify" returns="String">
	<help><![CDATA[
		Centers a string in a field length.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="length" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Compare(string1, string2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="compare" returns="Numeric">
	<help><![CDATA[
		Performs a case-sensitive comparison of two strings.
			-1, if string1 is less than string2
			0, if string1 is equal to string2
			1, if string1 is greater than string2
	]]></help>
	<parameter name="string1" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="string2" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric CompareNoCase(string1, string2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="comparenocase" returns="Numeric">
	<help><![CDATA[
		Performs a case-insensitive comparison of two strings.
        An indicator of the difference:
			A negative number, if string1 is less than string2
			0, if string1 is equal to string2
			A positive number, if string1 is greater than string2
	]]></help>
	<parameter name="string1" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="string2" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Cos(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="cos" returns="Numeric">
	<help><![CDATA[
		Calculates the cosine of an angle that is entered
		in radians.
		A number; the cosine of the angle.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	DateTime CreateDate(year, month, day)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createdate" returns="DateTime">
	<help><![CDATA[
		Creates a date/time object
	]]></help>
	<parameter name="year" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="year(now())"/>
		</values>
	</parameter>
	<parameter name="month" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="month(now())"/>
		</values>
	</parameter>
	<parameter name="day" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="day(now())"/>
		</values>
	</parameter>
</function>
<!--
	DateTime CreateDateTime(year, month, day, hour, minute, second)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createdatetime" returns="DateTime">
	<help><![CDATA[
		Creates a date-time object.
	]]></help>
	<parameter name="year" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="year(now())"/>
		</values>
	</parameter>
	<parameter name="month" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="month(now())"/>
		</values>
	</parameter>
	<parameter name="day" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="day(now())"/>
		</values>
	</parameter>
	<parameter name="hour" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="hour(now())"/>
		</values>
	</parameter>
	<parameter name="minute" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="minute(now())"/>
		</values>
	</parameter>
	<parameter name="second" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="second(now())"/>
		</values>
	</parameter>
</function>
<!--
	ODBCDate CreateODBCDate(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createodbcdate" returns="ODBCDate">
	<help><![CDATA[
		Creates an ODBC date object.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	ODBCDateTime CreateODBCDateTime(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createodbcdatetime" returns="ODBCDateTime">
	<help><![CDATA[
		Creates an ODBC date-time object.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	ODBCTime CreateODBCTime(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createodbctime" returns="ODBCTime">
	<help><![CDATA[
		Creates an ODBC time object.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	DateTime CreateTime(hour, minute, second)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createtime" returns="DateTime">
	<help><![CDATA[
		Creates a time variable.
	]]></help>
	<parameter name="hour" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="hour(now())"/>
		</values>
	</parameter>
	<parameter name="minute" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="minute(now())"/>
		</values>
	</parameter>
	<parameter name="second" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="second(now())"/>
		</values>
	</parameter>
</function>
<!--
	DateTime CreateTimeSpan(days, hours, minutes, seconds)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createtimespan" returns="DateTime">
	<help><![CDATA[
		Creates a date/time object that defines a time period. You
		can add or subtract it from other date/time objects and use
		it with the cachedWithin attribute of cfquery.
	]]></help>
	<parameter name="days" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="hours" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="minutes" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="seconds" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	UUID CreateUUID()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="createuuid" returns="UUID">
	<help><![CDATA[
		Creates a Universally Unique Identifier (UUID). A UUID is a
		35-character string representation of a unique 128-bit integer
		xxxxxxxx-xxxx-xxxx-xxxxxxxxxxxxxxxx : x is a hexadecimal digit
	]]></help>
</function>
<!--
	DateTime DateAdd("datepart", number, "date")
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="dateadd" returns="DateTime">
	<help><![CDATA[
		Adds units of time to a date.
		[datepart - quicky]
		yyyy: Year; q: Quarter; m: Month; y: Day of year; d: Day
		w: Weekday; ww: Week; h: Hour; n: Minute; s: Second
	]]></help>
	<parameter name="datepart" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="yyyy"/>
			<value option="q"/>
			<value option="m"/>
			<value option="y"/>
			<value option="d"/>
			<value option="w"/>
			<value option="ww"/>
			<value option="h"/>
			<value option="n"/>
			<value option="s"/>
		</values>
	</parameter>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric DateCompare("date1", "date2" [, "datePart"])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="datecompare" returns="Numeric">
	<help><![CDATA[
		Performs a full date/time comparison of two dates.
			-1, if date1 is less than date2
			0, if date1 is equal to date2
			1, if date1 is greater than date2
		[datepart - quicky]
		yyyy: Year; q: Quarter; m: Month; y: Day of year; d: Day
		w: Weekday; ww: Week; h: Hour; n: Minute; s: Second;
		l: Millisecond
	]]></help>
	<parameter name="date1" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
	<parameter name="date2" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
	<parameter name="datePart" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="yyyy"/>
			<value option="q"/>
			<value option="m"/>
			<value option="y"/>
			<value option="d"/>
			<value option="w"/>
			<value option="ww"/>
			<value option="h"/>
			<value option="n"/>
			<value option="s"/>
			<value option="l"/>
		</values>
	</parameter>
</function>
<!--
	DateTime DateConvert("conversion-type", "date")
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="dateconvert" returns="DateTime">
	<help><![CDATA[
		Converts local time to Coordinated Universal Time (UTC), or UTC
		to local time. The function uses the daylight savings settings
		in the executing computer to compute daylight savings time, if
		required.
		[type - quicky]
			local2Utc: Converts local time to UTC time.
			utc2Local: Converts UTC time to local time
	]]></help>
	<parameter name="type" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="local2Utc"/>
			<value option="utc2Local"/>
		</values>
	</parameter>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric DateDiff("datepart", "date1", "date2")
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="datediff" returns="Numeric">
	<help><![CDATA[
		Determines the integer number of units by which date1 is less
		than date2.
		[datepart - quicky]
		yyyy: Year; q: Quarter; m: Month; y: Day of year; d: Day
		w: Weekday; ww: Week; h: Hour; n: Minute; s: Second;
		l: Millisecond
	]]></help>
	<parameter name="datepart" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="yyyy"/>
			<value option="q"/>
			<value option="m"/>
			<value option="y"/>
			<value option="d"/>
			<value option="w"/>
			<value option="ww"/>
			<value option="h"/>
			<value option="n"/>
			<value option="s"/>
			<value option="l"/>
		</values>
	</parameter>
	<parameter name="date1" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
	<parameter name="date2" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	String DateFormat("date" [, "mask" ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="dateformat" returns="String">
	<help><![CDATA[
		Formats a date value using U.S. date formats. For
		international date support, use LSDateFormat.
		[mask - quicky]
		d,dd,ddd,dddd: Day of month / week
		m,mm,mmm,mmmm: Month; y,yy,yyyy: Year; gg: Period/era string
		short / medium / long / full
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
	<parameter name="mask" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="short"/>
			<value option="medium"/>
			<value option="long"/>
			<value option="full"/>
		</values>
	</parameter>
</function>
<!--
	Numeric DatePart("datepart", "date")
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="datepart" returns="Numeric">
	<help><![CDATA[
		Extracts a part from a date value as a numeric.
		[datepart - quicky]
		yyyy: Year; q: Quarter; m: Month; y: Day of year; d: Day
		w: Weekday; ww: Week; h: Hour; n: Minute; s: Second
	]]></help>
	<parameter name="datepart" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="yyyy"/>
			<value option="q"/>
			<value option="m"/>
			<value option="y"/>
			<value option="d"/>
			<value option="w"/>
			<value option="ww"/>
			<value option="h"/>
			<value option="n"/>
			<value option="s"/>
		</values>
	</parameter>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric Day(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="day" returns="Numeric">
	<help><![CDATA[
		Determines the day of the month, in a date.
		The ordinal for the day of the month, ranging from 1 to 31.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric DayOfWeek(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="dayofweek" returns="Numeric">
	<help><![CDATA[
		Determines the day of the week, in a date.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	String DayOfWeekAsString(day_of_week)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="dayofweekasstring" returns="String">
	<help><![CDATA[
		Determines the day of the week as a string from 1-7
	]]></help>
	<parameter name="day_of_week" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric DayOfYear(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="dayofyear" returns="Numeric">
	<help><![CDATA[
		Determines the day of the year, in a date.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric DaysInMonth(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="daysinmonth" returns="Numeric">
	<help><![CDATA[
		Determines the number of days in a month.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric DaysInYear(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="daysinyear" returns="Numeric">
	<help><![CDATA[
		Determines the number of days in a year.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Object DE(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="de" returns="Object">
	<help><![CDATA[
		Postpones evaluation of a string as an expression, when it is
		passed as a parameter to the IIf or Evaluate functions. Escapes
		any double quotation marks in the parameter and wraps the
		result in double quotation marks.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String DecimalFormat(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="decimalformat" returns="String">
	<help><![CDATA[
		Converts a number to a decimal-formatted string.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric DecrementValue(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="decrementvalue" returns="Numeric">
	<help><![CDATA[
		Decrements the integer part of a number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String Decrypt(encrypted_string, seed)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="decrypt" returns="String">
	<help><![CDATA[
		Decrypts a string that is encrypted with the Encrypt function.
	]]></help>
	<parameter name="encrypted_string" type="String" required="true">
		<help><![CDATA[
			String to decrypt.
		]]></help>
	</parameter>
	<parameter name="key" type="String" required="true">
		<help><![CDATA[
			String. Seed used to generate 32-bit encryption key.
			Can be any combination of any number of characters.
		]]></help>
	</parameter>
</function>
<!--
	boolean DeleteClientVariable("name")
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="deleteclientvariable" returns="boolean">
	<help><![CDATA[
		Deletes a client variable. (To test for the existence of a
		variable, use IsDefined.)
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean DirectoryExists(absolute_path)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="directoryexists" returns="boolean">
	<help><![CDATA[
		Determines whether a directory exists.
	]]></help>
	<parameter name="absolute_path" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String DollarFormat(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="dollarformat" returns="String">
	<help><![CDATA[
		Formats a string in U.S. format. (For other currencies, use
		LSCurrencyFormat or LSEuroCurrencyFormat.)
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Object Duplicate(variable_name)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="duplicate" returns="Object">
	<help><![CDATA[
		Returns a clone, also known as a deep copy, of a variable
		or XML object. There is no reference to the original variable.
	]]></help>
	<parameter name="variable" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String Encrypt(string, seed)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="encrypt" returns="String">
	<help><![CDATA[
		Encrypts a string. Uses a symmetric key-based algorithm, in
		which the same key is used to encrypt and decrypt a string.
		The security of the encrypted string depends on maintaining
		the secrecy of the key. Uses an XOR-based algorithm that uses
		a pseudo-random 32-bit key, based on a seed passed by the user
		as a function parameter.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			String to encrypt.
		]]></help>
	</parameter>
	<parameter name="seed" type="String" required="true">
		<help><![CDATA[
			Seed used to generate 32-bit encryption key.
			Can be any combination of any number of characters.
		]]></help>
	</parameter>
</function>
<!--
	Object Evaluate(string_expression1 [, string_expression2 [, ... ] ] )
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="evaluate" returns="Object">
	<help><![CDATA[
		Evaluates one or more string expressions, dynamically, from
		left to right. (The results of an evaluation on the left can
		have meaning in an expression to the right.) Returns the
		result of evaluating the rightmost expression.
	]]></help>
	<parameter name="expression1" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="expression2" type="String" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="expressionN" type="String" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Exp(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="exp" returns="Numeric">
	<help><![CDATA[
		Calculates the exponent whose base is e that represents number.
		The constant e equals 2.71828182845904, the base of the natural
		logarithm. This function is the inverse of Log, the natural
		logarithm of number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String ExpandPath(relative_path)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="expandpath" returns="String">
	<help><![CDATA[
		Creates an absolute, platform-appropriate path that is
		equivalent to the value of relative_path, appended to the base
		path. This function (despite its name) can accept an absolute
		or relative path in the relative_path attribute
	]]></help>
	<parameter name="relative_path" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean FileExists(absolute_path)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="fileexists" returns="boolean">
	<help><![CDATA[
		Determines whether a file exists
	]]></help>
	<parameter name="path" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Find(substring, string [, start ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="find" returns="Numeric">
	<help><![CDATA[
		Finds the first occurrence of a substring in a string, from a
		specified start position. The search is case-sensitive.
	]]></help>
	<parameter name="substring" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
		<values default="1">
			<value option="1"/>
		</values>
	</parameter>
</function>
<!--
	Numeric FindNoCase(substring, string [, start ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="findnocase" returns="Numeric">
	<help><![CDATA[
		Finds the first occurrence of a substring in a string, from a
		specified start position. If substring is not in string,
		returns zero. The search is case-insensitive.
	]]></help>
	<parameter name="substring" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
		<values default="1">
			<value option="1"/>
		</values>
	</parameter>
</function>
<!--
	Numeric FindOneOf(set, string [, start ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="findoneof" returns="Numeric">
	<help><![CDATA[
		Finds the first occurrence of any one of a set of characters
		in a string, from a specified start position. The search is
		case-sensitive.
	]]></help>
	<parameter name="set" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
		<values default="1">
			<value option="1"/>
		</values>
	</parameter>
</function>
<!--
	Numeric FirstDayOfMonth(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="firstdayofmonth" returns="Numeric">
	<help><![CDATA[
		Determines the ordinal (day number, in the year) of the first
		day of the month in which a given date falls.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric Fix(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="fix" returns="Numeric">
	<help><![CDATA[
		Converts a real number to an integer.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String FormatBaseN(number, radix)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="formatbasen" returns="String">
	<help><![CDATA[
		String Converts number to a string, in the base specified by
		radix. For example: #FormatBaseN(1024,16)#
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="radix" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Object GetBaseTagData(tagname [, instancenumber ] )
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getbasetagdata" returns="Object">
	<help><![CDATA[
		Used within a custom tag. Finds calling (ancestor) tag by
		name and accesses its data.
	]]></help>
	<parameter name="tagname" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="instancenumber" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String GetBaseTagList()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getbasetaglist" returns="String">
	<help><![CDATA[
		Gets ancestor tag names, starting with the parent tag.
	]]></help>
</function>
<!--
	String GetBaseTemplatePath()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getbasetemplatepath" returns="String">
	<help><![CDATA[
		Gets the absolute path of an application's base page.
	]]></help>
</function>
<!--
	String GetClientVariablesList()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getclientvariableslist" returns="String">
	<help><![CDATA[
		Finds the client variables to which a page has write access.
		Comma-delimited list of non-read-only client variables
	]]></help>
</function>
<!--
	String GetCurrentTemplatePath()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getcurrenttemplatepath" returns="String">
	<help><![CDATA[
		Gets the absolute path of the page that calls this function.
	]]></help>
</function>
<!--
	String GetDirectoryFromPath(path)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getdirectoryfrompath" returns="String">
	<help><![CDATA[
		Extracts a directory from an absolute path.
		Returns the absolute path, without the filename.
	]]></help>
	<parameter name="path" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Object getException(object)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getexception" returns="Object">
	<help><![CDATA[
		Used with the cftry and cfcatch tags. Retrieves a Java
		exception object from a Java object.
	]]></help>
	<parameter name="javaobject" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String GetFileFromPath(path)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getfilefrompath" returns="String">
	<help><![CDATA[
		Extracts a filename from an absolute path.
	]]></help>
	<parameter name="path" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Struct GetFunctionList()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getfunctionlist" returns="Struct">
	<help><![CDATA[
		Displays a list of the functions that are available in
		CFML.
	]]></help>
</function>
<!--
	Struct GetHttpRequestData()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gethttprequestdata" returns="Struct">
	<help><![CDATA[
		Makes HTTP request headers and body available to CFML pages.
		Useful for capturing SOAP request data, which can be delivered
		in an HTTP header.
	]]></help>
</function>
<!--
	String GetHttpTimeString(date_time_object)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gethttptimestring" returns="String">
	<help><![CDATA[
		Gets the current time, in the Universal Time code (UTC).
	]]></help>
	<parameter name="DateTime" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric GetK2ServerDocCount()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getk2serverdoccount" returns="Numeric">
	<help><![CDATA[
		Determines the number of documents that can be searched by the
		CFML registered K2 Server. This function is used
		primarily by the CFML Verity and K2Server Administrator
		pages, and requires significant processing time. Avoid using
		it in production applications. This function uses Verity
		K2Server Release K2.2.0.
	]]></help>
</function>
<!--
	Numeric GetK2ServerDocCountLimit()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getk2serverdoccountlimit" returns="Numeric">
	<help><![CDATA[
		Gets the maximum number of documents that the CFML
		registered K2 Server is permitted to return from a search.
		This function is used primarily by the CFML Verity and
		K2Server Administrator pages. This function uses Verity
		K2Server Release K2.2.0.
	]]></help>
</function>
<!--
	String GetLocale()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getlocale" returns="String">
	<help><![CDATA[
		Gets the current geographic/language locale value.
		To set the default display format of date, time, number, and
		currency values in a CFML application session, you use
		the SetLocale function.
	]]></help>
</function>
<!--
	Object GetMetricData(mode)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getmetricdata" returns="Object">
	<help><![CDATA[
		Gets server performance metrics
		[mode - quicky]
			perf_monitor - Returns internal data, in a structure.
			simple_load - Returns an integer value that is computed
			  	from the state of the server's internal
			  	queues. Indicates the overall server load.
			prev_req_time - Returns the time, in milliseconds, that it
				took the server to process the previous
				request.
 			avg_req_time - Returns the average time, in milliseconds,
 				that it takes the server to process a
 				request.
	]]></help>
	<parameter name="mode" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="perf_monitor"/>
			<value option="simple_load"/>
			<value option="prev_req_time"/>
			<value option="avg_req_time"/>
		</values>
	</parameter>
</function>
<!--
	String GetProfileString(iniPath, section, entry)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="getprofilestring" returns="String">
	<help><![CDATA[
		Gets an initialization file entry.
		An initialization file assigns values to configuration
		variables, also known as entries, that are set when the system
		boots, the operating system comes up, or an application starts.
		Returns the entry - if no value, returns an empty string.
	]]></help>
	<parameter name="inipath" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="section" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="entry" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String GetTempDirectory()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gettempdirectory" returns="String">
	<help><![CDATA[
		Gets the path of the directory that CFML uses for
		temporary files. Before using this function in an application,
		test to determine the directory it returns under your account.
		Returns the absolute pathname of a directory, including a
		trailing slash.
	]]></help>
</function>
<!--
	String GetTempFile(dir, prefix)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gettempfile" returns="String">
	<help><![CDATA[
		Creates a temporary file in a directory whose name starts with
		(at most) the first three characters of prefix.
	]]></help>
	<parameter name="dir" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="prefix" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	GetTemplatePath
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gettemplatepath" returns="String">
	<help><![CDATA[
		Use the GetBaseTemplatePath function instead.
	]]></help>
</function>
<!--
	Numeric GetTickCount()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gettickcount" returns="Numeric">
	<help><![CDATA[
		Returns the current value of an internal millisecond timer.
	]]></help>
</function>
<!--
	Object GetTimeZoneInfo()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gettimezoneinfo" returns="Object">
	<help><![CDATA[
		Gets local time zone information for the computer on which it
		is called, relative to Universal Time Coordinated (UTC). UTC is
		the mean solar time of the meridian of Greenwich, England.
	]]></help>
	<parameter name="text" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String GetToken(string, index [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="gettoken" returns="String">
	<help><![CDATA[
		Determines whether a token of the list in the delimiters
		parameter is present in a string.
		Returns the token found at position index of the string, as a
		string. If index is greater than the number of tokens in the
		string, returns an empty string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="index" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option=","/>
			<value option="|"/>
			<value option="_"/>
			<value option=";"/>
			<value option=":"/>
		</values>
	</parameter>
</function>
<!--
	String Hash(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="hash" returns="String">
	<help><![CDATA[
		Converts a variable-length string to a 32-byte, hexadecimal
		string, using the MD5 algorithm. (It is not possible to convert
		the hash result back to the source string.)
		32-byte, hexadecimal string
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Hour(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="hour" returns="Numeric">
	<help><![CDATA[
		Gets the current hour of the day.
		Ordinal value of the hour, in the range 0 - 23.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	String HTMLCodeFormat(string [, version ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="htmlcodeformat" returns="String">
	<help><![CDATA[
		Replaces special characters in a string with their HTML-escaped
		equivalents and inserts <pre> and </pre> tags at the beginning
		and end of the string.
		[version]
			HTML version to use. currently ignored.
			-1: The latest implementation of HTML
			2.0: HTML 2.0 (Default)
			3.2: HTML 3.2
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="version" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="-1"/>
			<value option="2.0"/>
			<value option="3.2"/>
		</values>
	</parameter>
</function>
<!--
	String HTMLEditFormat(string [, version ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="htmleditformat" returns="String">
	<help><![CDATA[
		Replaces special characters in a string with their
		HTML-escaped equivalents.
		[version]
			HTML version to use. currently ignored.
			-1: The latest implementation of HTML
			2.0: HTML 2.0 (Default)
			3.2: HTML 3.2
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="version" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="-1"/>
			<value option="2.0"/>
			<value option="3.2"/>
		</values>
	</parameter>
</function>
<!--
	String IIf(condition, string_expression1, string_expression2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="iif" returns="String">
	<help><![CDATA[
		Evaluates a Boolean conditional dynamic expression. Depending
		on whether the expression is true or false, dynamically
		evaluates one of two string expressions and returns the result.
	]]></help>
	<parameter name="condition" type="boolean" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="expression1" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="expression2" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric IncrementValue(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="incrementvalue" returns="Numeric">
	<help><![CDATA[
		Adds one to an integer. same as x=x+1
		Why bother?
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric InputBaseN(string, radix)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="inputbasen" returns="Numeric">
	<help><![CDATA[
		Converts string, using the base specified by radix, to an
		integer. For example: #InputBaseN("3ff",16)#
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="radix" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String Insert(substring, string, position)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="insert" returns="String">
	<help><![CDATA[
		Inserts a substring in a string after a specified character
		position. If position = 0, prefixes the substring to the
		string.
	]]></help>
	<parameter name="substring" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="position" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Int(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="int" returns="Numeric">
	<help><![CDATA[
		Calculates the closest integer that is smaller than number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsArray(value [, number ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isarray" returns="boolean">
	<help><![CDATA[
		Determines whether a value is an array.
		True, if value is an array, a query column object, or xml.
		also number = Dimension; function tests whether the array has
		exactly this dimension
	]]></help>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsBinary(value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isbinary" returns="boolean">
	<help><![CDATA[
		Determines whether a value is stored as binary data.
	]]></help>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsBoolean(value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isboolean" returns="boolean">
	<help><![CDATA[
		Determines whether a value can be converted to Boolean
	]]></help>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsCustomFunction(name)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="iscustomfunction" returns="boolean">
	<help><![CDATA[
		Determines whether a name represents a custom function
	]]></help>
	<parameter name="Object" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsDate(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isdate" returns="boolean">
	<help><![CDATA[
		Determines whether a string or Java object can be converted
		to a date/time value.
	]]></help>
	<parameter name="Object" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsDebugMode()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isdebugmode" returns="boolean">
	<help><![CDATA[
		Determines whether debugging output is enabled.
	]]></help>
</function>
<!--
	boolean IsDefined("variable_name")
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isdefined" returns="boolean">
	<help><![CDATA[
		Evaluates a string value to determine whether the variable
		named in it exists.
	]]></help>
	<parameter name="variable_name" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsK2ServerABroker()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isk2serverabroker" returns="boolean">
	<help><![CDATA[
		Determines whether the K2Server version is K2 Broker. For more
		information, see GetK2ServerDocCountLimit. This function is
		used primarily by the CFML Verity and K2Server
		Administrator pages. This function uses Verity K2Server
		Release K2.2.0.
	]]></help>
</function>
<!--
	boolean IsK2ServerDocCountExceeded()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isk2serverdoccountexceeded" returns="boolean">
	<help><![CDATA[
		Determines whether the number of documents that can be searched
		by the CFML registered K2 Server exceed the limit.
		Depends on the K2Server platform limit; see
		GetK2ServerDocCountLimit.
	]]></help>
</function>
<!--
	boolean IsK2ServerOnline()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isk2serveronline" returns="boolean">
	<help><![CDATA[
		Determines whether the K2Server is running and available to
		perform a search. This function is used primarily by the
		CFML Verity and K2Server Administrator pages. This
		function uses Verity K2Server Release K2.2.0.
	]]></help>
</function>
<!--
	boolean IsLeapYear(year)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isleapyear" returns="boolean">
	<help><![CDATA[
		Determines whether a year is a leap year.
	]]></help>
	<parameter name="year" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsNumeric(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isnumeric" returns="boolean">
	<help><![CDATA[
		Determines whether a string can be converted to a numeric value.
		Supports numbers in U.S. number format. For other number support
		use LSIsNumeric.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsNumericDate(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isnumericdate" returns="boolean">
	<help><![CDATA[
		Evaluates whether a real number is a valid representation of a
		date (date/time object).
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsQuery(value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isquery" returns="boolean">
	<help><![CDATA[
		Determines whether value is a query.
	]]></help>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsSimpleValue(value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="issimplevalue" returns="boolean">
	<help><![CDATA[
		Determines the type of a value.
	]]></help>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsStruct(variable)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="isstruct" returns="boolean">
	<help><![CDATA[
		Determines whether a variable is a structure.
		True, if variable is a CFML structure or is a Java object
		that implements the java.lang.Map interface. Returns False if the
		object in variable is a user-defined function (UDF).
	]]></help>
	<parameter name="variable" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean IsWDDX(value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="iswddx" returns="boolean">
	<help><![CDATA[
		Determines whether a value is a well-formed WDDX packet.
	]]></help>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Object JavaCast(type, variable)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="javacast" returns="Object">
	<help><![CDATA[
		Converts the data type of a CFML variable to pass as an
		argument to an overloaded method of a Java object. Use only
		for scalar and string arguments.
		[type - quicky]
		boolean,int,long,float,double,string
	]]></help>
	<parameter name="type" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="boolean"/>
			<value option="double"/>
			<value option="float"/>
			<value option="int"/>
			<value option="long"/>
			<value option="string"/>
		</values>
	</parameter>
	<parameter name="variable" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String JSStringFormat(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="jsstringformat" returns="String">
	<help><![CDATA[
		Escapes special JavaScript characters, such as single quotation
		mark, double quotation mark, and newline
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String LCase(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lcase" returns="String">
	<help><![CDATA[
		Converts the alphabetic characters in a string to lowercase.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String Left(string, count)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="left" returns="String">
	<help><![CDATA[
		Returns the leftmost count characters in a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="count" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Len(string or binary object)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="len" returns="Numeric">
	<help><![CDATA[
		Determines the length of a string or binary object
	]]></help>
	<parameter name="Object" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String ListAppend(list, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listappend" returns="String">
	<help><![CDATA[
		Concatenates a list or element to a list.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			An element or a list of elements.
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option="_"/>
			<value option=";"/>
			<value option=":"/>
		</values>
	</parameter>
</function>
<!--
	String ListChangeDelims(list, new_delimiter [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listchangedelims" returns="String">
	<help><![CDATA[
		Changes a list delimiter.
		Returns a copy of the list, with each delimiter character
		replaced by new_delimiter.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="new_delimiter" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ListContains(list, substring [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listcontains" returns="Numeric">
	<help><![CDATA[
		Determines the index of the first list element that contains a
		specified substring.
		Returns the index of the first list element that contains
		substring. If not found, returns zero.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="substring" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ListContainsNoCase(list, substring [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listcontainsnocase" returns="Numeric">
	<help><![CDATA[
		Determines the index of the first list element that contains a
		specified substring.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="substring" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListDeleteAt(list, position [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listdeleteat" returns="String">
	<help><![CDATA[
		Deletes an element from a list.
		Returns a copy of the list, without the specified element.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="position" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ListFind(list, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listfind" returns="Numeric">
	<help><![CDATA[
		Determines the index of the first list element in which a
		specified value occurs. Case-sensitive
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ListFindNoCase(list, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listfindnocase" returns="Numeric">
	<help><![CDATA[
		Determines the index of the first list element in which a
		specified value occurs
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false" default=",">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListFirst(list [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listfirst" returns="String">
	<help><![CDATA[
		Gets the first element of a list.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListGetAt(list, position [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listgetat" returns="String">
	<help><![CDATA[
		Gets a list element at a specified position.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="position" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListInsertAt(list, position, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listinsertat" returns="String">
	<help><![CDATA[
		Inserts an element in a list.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="position" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListLast(list [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listlast" returns="String">
	<help><![CDATA[
		Gets the last element of a list.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ListLen(list [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listlen" returns="Numeric">
	<help><![CDATA[
		Determines the number of elements in a list.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListPrepend(list, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listprepend" returns="String">
	<help><![CDATA[
		Inserts an element at the beginning of a list.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListQualify(list, qualifier [, delimiters ] [, elements ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listqualify" returns="String">
	<help><![CDATA[
		Inserts a string at the beginning and end of list elements.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="qualifier" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
	<parameter name="elements" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="all"/>
			<value option="char"/>
		</values>
	</parameter>
</function>
<!--
	String ListRest(list [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listrest" returns="String">
	<help><![CDATA[
		Gets a list, without its first element.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListSetAt(list, position, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listsetat" returns="String">
	<help><![CDATA[
		Replaces the contents of a list element.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="position" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String ListSort(list, sort_type [, sort_order] [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listsort" returns="String">
	<help><![CDATA[
		Sorts list elements according to a sort type and sort order.
		Returns a sorted copy of the list.
		[sort_type - quicky]
		numeric: sorts numbers
		text: sorts text alphabetically, taking case into account
			- aabzABZ, if sort_order = "asc"
			- ZBAzbaa, if sort_order = "desc"
		textnocase: sorts text alphabetically, without regard to case
			- aAaBbBzzZ, in an asc sort;
			- ZzzBbBaAa, in a desc sort;
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="sort_type" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="sort_order" type="String" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Array ListToArray(list [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listtoarray" returns="Array">
	<help><![CDATA[
		Copies the elements of a list to an array.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ListValueCount(list, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listvaluecount" returns="Numeric">
	<help><![CDATA[
		Counts instances of a specified value in a list. The search is
		case-sensitive.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric ListValueCountNoCase(list, value [, delimiters ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="listvaluecountnocase" returns="Numeric">
	<help><![CDATA[
		Counts instances of a specified value in a list. The search is
		case-insensitive.
	]]></help>
	<parameter name="list" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiters" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	String LJustify(string, length)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="ljustify" returns="String">
	<help><![CDATA[
		Left justifies characters in a string of a specified length.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="length" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Log(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="log" returns="Numeric">
	<help><![CDATA[
		Calculates the natural logarithm of a number. Natural
		logarithms are based on the constant e (2.71828182845904).
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Log10(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="log10" returns="Numeric">
	<help><![CDATA[
		Calculates the logarithm of number, to base 10.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String LSCurrencyFormat(number [, type ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lscurrencyformat" returns="String">
	<help><![CDATA[
		Formats a number in a locale-specific currency format. For
		countries that use the euro, the result depends on the JVM.
		[type - quicky]
		local: the currency format and currency symbol used locally.
			- With JDK 1.3, the default for Euro Zone: local currency.
			- With JDK 1.4, the default for Euro Zone: euro.
		international: the international standard currency format
		none: the local currency format; no currency symbol
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="local"/>
			<value option="international"/>
			<value option="none"/>
		</values>
	</parameter>
</function>
<!--
	String LSDateFormat(date [, mask ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsdateformat" returns="String">
	<help><![CDATA[
		Formats the date part of a date/time value in a locale-specific
		format.
		[mask - quicky]
		d,dd,ddd,dddd: Day of month / week
		m,mm,mmm,mmmm: Month; y,yy,yyyy: Year; gg: Period/era string
		short / medium / long / full
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
	<parameter name="mask" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="short"/>
			<value option="medium"/>
			<value option="long"/>
			<value option="full"/>
		</values>
	</parameter>
</function>
<!--
	String LSEuroCurrencyFormat(currency-number [, type ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lseurocurrencyformat" returns="String">
	<help><![CDATA[
		Formats a number in a locale-specific currency format.
		[type - quicky]
		local: the currency format used in the locale. (Default.)
		international: the international standard currency format
		none: the currency format used; no currency symbol
	]]></help>
	<parameter name="currency" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="type" type="String" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="local"/>
			<value option="international"/>
			<value option="none"/>
		</values>
	</parameter>
</function>
<!--
	boolean LSIsCurrency(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsiscurrency" returns="boolean">
	<help><![CDATA[
		Determines whether a string is a valid representation of a
		currency amount in the current locale.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean LSIsDate(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsisdate" returns="boolean">
	<help><![CDATA[
		Determines whether a string is a valid representation of a
		date/time value in the current locale.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean LSIsNumeric(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsisnumeric" returns="boolean">
	<help><![CDATA[
		Determines whether a string is a valid representation of a
		number in the current locale.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String LSNumberFormat(number [, mask ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsnumberformat" returns="String">
	<help><![CDATA[
		Formats a number in a locale-specific format.
		[mask - quicky]
		_,9 Digit placeholder; . decimal point; 0 Pads with zeros;
 		( ) less than zero, puts parentheses around the mask
 		+ plus sign before positive number minus before negative
 		- a space before positive minus sign before negative
 		, Separates every third decimal place with a comma.
 		L,C Left-justifies or center-justifies number
 		$ dollar sign before formatted number.
 		^ Separates left and right formatting.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="mask" type="String" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String LSParseCurrency(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsparsecurrency" returns="String">
	<help><![CDATA[
		Converts a locale-specific currency string into a formatted
		number. Attempts conversion by comparing the string with each
		the three supported currency formats (none, local,
		international) and using the first that matches.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	DateTime LSParseDateTime(date/time-string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsparsedatetime" returns="DateTime">
	<help><![CDATA[
		Converts a string that is a valid date/time representation in
		the current locale into a date/time object.
	]]></help>
	<parameter name="dt_string" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric LSParseEuroCurrency(currency-string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsparseeurocurrency" returns="Numeric">
	<help><![CDATA[
		Formats a locale-specific currency string as a number.
		Attempts conversion through each of the default currency
		formats (none, local, international). Ensures correct
		handling of euro currency for Euro zone countries.
	]]></help>
	<parameter name="currency_string" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric LSParseNumber(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lsparsenumber" returns="Numeric">
	<help><![CDATA[
		Converts a string that is a valid numeric representation in
		the current locale into a formatted number.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String LSTimeFormat(time [, mask ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="lstimeformat" returns="String">
	<help><![CDATA[
		Formats the time part of a date/time string into a string in a
		locale-specific format.
		[mask - quicky]
		h,hh,H,HH: Hours; m,mm: Minutes; s,ss: Seconds;
		t: A or P; tt: AM or PM
		"short" = h:mm tt; "medium" = h:mm:ss tt
	]]></help>
	<parameter name="time" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
	<parameter name="mask" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="short"/>
			<value option="medium"/>
			<value option="long"/>
		</values>
	</parameter>
</function>
<!--
	String LTrim(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="ltrim" returns="String">
	<help><![CDATA[
		Removes leading spaces from a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Max(number1, number2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="max" returns="Numeric">
	<help><![CDATA[
		Determines the greater of two numbers.
	]]></help>
	<parameter name="number1" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number2" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String Mid(string, start, count)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="mid" returns="String">
	<help><![CDATA[
		Extracts a substring from a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			The string from which the substring will be extracted.
			]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="true">
		<help><![CDATA[
		The position of the first character to retrieve.
		]]></help>
	</parameter>
	<parameter name="count" type="Numeric" required="true">
		<help><![CDATA[
		The number of characters to retrieve.
		]]></help>
	</parameter>
</function>
<!--
	Numeric Min(number1, number2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="min" returns="Numeric">
	<help><![CDATA[
		Determines the lesser of two numbers.
	]]></help>
	<parameter name="number1" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number2" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Minute(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="minute" returns="Numeric">
	<help><![CDATA[
		Extracts the minute value from a date/time object.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric Month(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="month" returns="Numeric">
	<help><![CDATA[
		Extracts the month value from a date/time object.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	String MonthAsString(month_number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="monthasstring" returns="String">
	<help><![CDATA[
	]]></help>
	<parameter name="month_number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	DateTime Now()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="now" returns="DateTime">
	<help><![CDATA[
		Gets the current date and time of the computer running the
		CFML server.
	]]></help>
</function>
<!--
	String NumberFormat(number [, mask ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="numberformat" returns="String">
	<help><![CDATA[
		Creates a custom-formatted number value. For international
		number formatting use LSNumberFormat.
		[mask - quicky]
		_,9 Digit placeholder; . decimal point; 0 Pads with zeros;
 		( ) less than zero, puts parentheses around the mask
 		+ plus sign before positive number minus before negative
 		- a space before positive minus sign before negative
 		, Separates every third decimal place with a comma.
 		L,C Left-justifies or center-justifies number
 		$ dollar sign before formatted number.
 		^ Separates left and right formatting.
 	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="mask" type="String" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String ParagraphFormat(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="paragraphformat" returns="String">
	<help><![CDATA[
		Replaces characters in a string:
		 * Single newline characters (CR/LF sequences) with spaces
		 * Double newline characters with HTML paragraph tags (<p>)
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	DateTime ParseDateTime(date/time-string [, pop-conversion ] )
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="parsedatetime" returns="DateTime">
	<help><![CDATA[
		Parses a date/time string according to the English (U.S.)
		locale conventions. (To format a date/time string for other
		locales, use the LSParseDateTime function.)
	]]></help>
	<parameter name="dt_string" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="pop_conversion" type="String" required="false">
		<help><![CDATA[
			- standard: (the default) function does no conversion.
			- pop: specifies that the date/time string is in POP format,
			  which includes the local time of the sender and a time-zone
			  offset from UTC. ColdFusion applies the offset and returns
			  a value with the UTC time.
		]]></help>
		<values default="standard">
			<value option="standard"/>
			<value option="pop"/>
		</values>
	</parameter>
</function>
<!--
	Numeric Pi()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="pi" returns="Numeric">
	<help><![CDATA[
		Gets the mathematical constant p, accurate to 15 digits.
		The number 3.14159265358979.
	]]></help>
</function>
<!--
	void PreserveSingleQuotes(variable)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="preservesinglequotes" returns="void">
	<help><![CDATA[
		Prevents CFML from automatically escaping single
		quotation mark characters that are contained in a variable.
		CFML does not evaluate the argument.

		Note: ColdFusion automatically escapes simple-variable,
		array-variable, and structure-variable references within a
		cfquery tag body or block.
	]]></help>
	<parameter name="variable" type="String" required="true">
		<help><![CDATA[
			Variable that contains a string in which to preserve
			single quotation marks.
		]]></help>
	</parameter>
</function>
<!--
	Numeric Quarter(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="quarter" returns="Numeric">
	<help><![CDATA[
		Calculates the quarter of the year in which a date falls.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	Numeric QueryAddColumn(query, column-name, array-name)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="queryaddcolumn" returns="Numeric">
	<help><![CDATA[
		Adds a column to a query and populates its rows with the
		contents of a one-dimensional array. Pads query columns,
		if necessary, to ensure that all columns have the same number
		of rows.
	]]></help>
	<parameter name="query" type="Query" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="column_name" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="array_name" type="Array" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric QueryAddRow(query [, number ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="queryaddrow" returns="Numeric">
	<help><![CDATA[
		Adds a specified number of empty rows to a query.
	]]></help>
	<parameter name="query" type="Query" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Query QueryNew(columnlist)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="querynew" returns="Query">
	<help><![CDATA[
		Creates an empty query (query object).
	]]></help>
	<parameter name="columnlist" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one. Delimited list
			of column names, or an empty string.
		]]></help>
	</parameter>
</function>
<!--
	boolean QuerySetCell(query, column_name, value [, row_number ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="querysetcell" returns="boolean">
	<help><![CDATA[
		Sets a cell to a value. If no row number is specified,
		the cell on the last row is set.
	]]></help>
	<parameter name="query" type="Query" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="column" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="row" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String QuotedValueList(query.column [, delimiter ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="quotedvaluelist" returns="String">
	<help><![CDATA[
		Gets the values of each record returned from an executed query.
		CFML does not evaluate the arguments
	]]></help>
	<parameter name="column" type="QueryColumn" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric Rand()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="rand" returns="Numeric">
	<help><![CDATA[
		Generates a pseudo-random number in the range 0 - 1.
	]]></help>
</function>
<!--
	Numeric Randomize(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="randomize" returns="Numeric">
	<help><![CDATA[
		Seeds the pseudo-random number generator with an
		integer number, ensuring repeatable number patterns.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric RandRange(number1, number2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="randrange" returns="Numeric">
	<help><![CDATA[
		Generates a random integer between two specified numbers.
		Requests for random integers that are greater than 100,000,000
		result in non-random numbers, to prevent overflow during
		internal computations.
	]]></help>
	<parameter name="number1" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="number2" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Object REFind(reg_expression, string [, start ][, returnsubexpressions ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="refind" returns="Object">
	<help><![CDATA[
	]]></help>
	<parameter name="reg_expression" type="Regex" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one. String in which
			to search.
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
		<values default="1">
			<value option="1"/>
		</values>
	</parameter>
	<parameter name="returnsubexpressions" type="boolean" required="false">
		<help><![CDATA[
			True: if the regular expression is found, the first array
				element contains the length and position, respectively,
				of the first match.
				If the regular expression contains parentheses that
					group subexpressions, each subsequent array element
					contains the length and position, respectively, of
					the first occurrence of each group.
				If the regular expression is not found, the arrays each
					contain one element with the value 0.
			False: the function returns the position in the string
				where the match begins. Default.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</function>
<!--
	Object REFindNoCase(reg_expression, string [, start] [, returnsubexpressions] )
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="refindnocase" returns="Object">
	<help><![CDATA[
		Uses a regular expression (RE) to search a string for a pattern,
		 starting from a specified position. The search is
		 case-insensitive.
	]]></help>
	<parameter name="reg_expression" type="Regex" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one. String in which
			to search.
		]]></help>
		<values default="1">
			<value option="1"/>
		</values>
	</parameter>
	<parameter name="start" type="Numeric" required="false">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="returnsubexpressions" type="boolean" required="false">
		<help><![CDATA[
			True: if the regular expression is found, the first array
				element contains the length and position, respectively,
				of the first match.
				If the regular expression contains parentheses that
					group subexpressions, each subsequent array element
					contains the length and position, respectively, of
					the first occurrence of each group.
				If the regular expression is not found, the arrays each
					contain one element with the value 0.
			False: the function returns the position in the string
				where the match begins. Default.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</function>
<!--
	String RemoveChars(string, start, count)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="removechars" returns="String">
	<help><![CDATA[
		Removes characters from a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="start" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="count" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String RepeatString(string, count)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="repeatstring" returns="String">
	<help><![CDATA[
		Creates a string that contains a specified number of
		repetitions of the specified string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="count" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String Replace(string, substring1, substring2 [, scope ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="replace" returns="String">
	<help><![CDATA[
		Replaces occurrences of substring1 in a string with substring2,
		in a specified scope. The search is case-sensitive.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="substring1" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="substring2" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="scope" type="String" required="false">
		<help><![CDATA[
			* one: replace the first occurrence (default)
			* all: replace all occurrences
		]]></help>
		<values>
			<value option="one"/>
			<value option="all"/>
		</values>
	</parameter>
</function>
<!--
	String ReplaceList(string, list1, list2)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="replacelist" returns="String">
	<help><![CDATA[
		Replaces occurrences of the elements from a delimited list
		in a string with corresponding elements from another delimited
		list. The search is case-sensitive.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="list1" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="list2" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String ReplaceNoCase(string, substring1, substring2 [, scope ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="replacenocase" returns="String">
	<help><![CDATA[
		Replaces occurrences of substring1 with substring2, in the
		specified scope. The search is case-insensitive.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string (or variable that contains one) within which to
			replace substring
		]]></help>
	</parameter>
	<parameter name="substring1" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="substring2" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="scope" type="String" required="false">
		<help><![CDATA[
			* one: Replace the first occurrence (default)
			* all: Replace all occurrences
		]]></help>
		<values>
			<value option="one"/>
			<value option="all"/>
		</values>
	</parameter>
</function>
<!--
	String REReplace(string, reg_expression, substring [, scope ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="rereplace" returns="String">
	<help><![CDATA[
		Uses a regular expression (RE) to search a string for a string
		pattern and replace it with another. The search is
		case-sensitive.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
	<parameter name="reg_expression" type="Regex" required="true">
		<help><![CDATA[
			Regular expression to replace.
		]]></help>
	</parameter>
	<parameter name="substring" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one. Replaces
			reg_expression
		]]></help>
	</parameter>
	<parameter name="scope" type="String" required="false">
		<help><![CDATA[
			* one: Replace the first occurrence of the regular
				expression. Default.
			* all: Replace all occurrences of the regular expression.
		]]></help>
		<values>
			<value option="one"/>
			<value option="all"/>
		</values>
	</parameter>
</function>
<!--
	String REReplaceNoCase(string, reg_expression, substring [, scope ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="rereplacenocase" returns="String">
	<help><![CDATA[
		Uses a regular expression to search a string for a string
		pattern and replace it with another. The search is
		case-insensitive.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
	<parameter name="reg_expression" type="Regex" required="true">
		<help><![CDATA[
			Regular expression to replace.
		]]></help>
	</parameter>
	<parameter name="substring" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one. Replaces
			reg_expression
		]]></help>
	</parameter>
	<parameter name="scope" type="String" required="false">
		<help><![CDATA[
			* one: Replace the first occurrence of the regular
				expression. Default.
			* all: Replace all occurrences of the regular expression.
		]]></help>
		<values>
			<value option="one"/>
			<value option="all"/>
		</values>
	</parameter>
</function>
<!--
	String Reverse(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="reverse" returns="String">
	<help><![CDATA[
		Reverses the order of items, such as the characters in a
		string, the digits in a number, or the elements in an array.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	String Right(string, count)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="right" returns="String">
	<help><![CDATA[
		Gets a specified number of characters from a string,
		beginning at the right.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="count" type="Numeric" required="true">
		<help><![CDATA[
			A positive integer or a variable that contains one.
			Number of characters to return.
		]]></help>
	</parameter>
</function>
<!--
	String RJustify(string, length)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="rjustify" returns="String">
	<help><![CDATA[
		Right justifies characters of a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="length" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Round(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="round" returns="Numeric">
	<help><![CDATA[
		Rounds a number to the closest integer.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String RTrim(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="rtrim" returns="String">
	<help><![CDATA[
		Removes spaces from the end of a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	Numeric Second(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="second" returns="Numeric">
	<help><![CDATA[
		Extracts the ordinal for the second from a date/time object.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
			A date/time object
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	String SetLocale(new_locale)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="setlocale" returns="String">
	<help><![CDATA[
		Sets the country/language locale for CFML processing
		and the page returned to the client. The locale value
		determines the default format of date, time, number, and
		currency values, according to language and regional
		conventions.
	]]></help>
	<parameter name="new_locale" type="String" required="true">
		<help><![CDATA[
			The name of a locale; for example, "English (US)"
		]]></help>
		<values>
			<value option="Chinese (China)"/>
			<value option="Chinese (Hong Kong)"/>
			<value option="Chinese (Taiwan)"/>
			<value option="Dutch (Belgian)"/>
			<value option="Dutch (Standard)"/>
			<value option="English (Australian)"/>
			<value option="English (Canadian)"/>
			<value option="English (New Zealand)"/>
			<value option="English (US)"/>
			<value option="English (UK)"/>
			<value option="French (Belgian)"/>
			<value option="French (Canadian)"/>
			<value option="French (Standard)"/>
			<value option="French (Swiss)"/>
			<value option="German (Austrian)"/>
			<value option="German (Standard)"/>
			<value option="German (Swiss)"/>
			<value option="Italian (Standard)"/>
			<value option="Italian (Swiss)"/>
			<value option="Japanese"/>
			<value option="Korean"/>
			<value option="Norwegian (Bokmal)"/>
			<value option="Norwegian (Nynorsk)"/>
			<value option="Portuguese (Brazilian)"/>
			<value option="Portuguese (Standard)"/>
			<value option="Spanish (Modern)"/>
			<value option="Spanish (Standard)"/>
			<value option="Swedish"/>
		</values>
	</parameter>
</function>
<!--
	String SetProfileString(iniPath, section, entry, value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="setprofilestring" returns="String">
	<help><![CDATA[
		Sets the value of a profile entry in an initialization file.
	]]></help>
	<parameter name="inipath" type="String" required="true">
		<help><![CDATA[
			Absolute path of initialization file
		]]></help>
	</parameter>
	<parameter name="section" type="String" required="true">
		<help><![CDATA[
			Section of the initialization file in which the entry is
			to be set
		]]></help>
	</parameter>
	<parameter name="entry" type="String" required="true">
		<help><![CDATA[
			Name of the entry to set
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			Value to which to set the entry
		]]></help>
	</parameter>
</function>
<!--
	void SetVariable(name, value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="setvariable" returns="void">
	<help><![CDATA[
		This function is no longer required in well-formed CFML
		pages. Sets a variable in the name parameter to the value of the
		value parameter.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Variable name
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			A string, the name of a string, or a number
		]]></help>
	</parameter>
</function>
<!--
	Numeric Sgn(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="sgn" returns="Numeric">
	<help><![CDATA[
		Determines the sign of a number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	Numeric Sin(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="sin" returns="Numeric">
	<help><![CDATA[
		Calculates the sine of an angle that is entered in radians.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String SpanExcluding(string, set)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="spanexcluding" returns="String">
	<help><![CDATA[
		Gets characters from a string, from the beginning to a
		character that is in a specified set of characters. The
		search is case-sensitive.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="set" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains a set of characters.
			Must contain one or more characters
		]]></help>
	</parameter>
</function>
<!--
	String SpanIncluding(string, set)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="spanincluding" returns="String">
	<help><![CDATA[
		Gets characters from a string, from the beginning to a
		character that is not in a specified set of characters. The
		search is case-sensitive.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="set" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains a set of characters.
			Must contain one or more characters
		]]></help>
	</parameter>
</function>
<!--
	Numeric Sqr(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="sqr" returns="Numeric">
	<help><![CDATA[
		Calculates the square root of a number.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
			A positive integer or a variable that contains one.
			Number whose square root to get.
		]]></help>
	</parameter>
</function>
<!--
	String StripCR(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="stripcr" returns="String">
	<help><![CDATA[
		Deletes return characters from a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	boolean StructAppend(struct1, struct2, overwriteFlag)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structappend" returns="boolean">
	<help><![CDATA[
		Appends one structure to another.
		CFML MX: Changed behavior: this function can be used on
		XML objects.
	]]></help>
	<parameter name="struct1" type="Struct" required="true">
		<help><![CDATA[
			Structure to append.
		]]></help>
	</parameter>
	<parameter name="struct2" type="Struct" required="true">
		<help><![CDATA[
			Structure that contains the data to append to struct1
		]]></help>
	</parameter>
	<parameter name="overwriteFlag" type="boolean" required="false">
		<help><![CDATA[
			Yes: values in struct2 overwrite corresponding values in
			struct1. Default.
		]]></help>
		<values default="true">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</function>
<!--
	boolean StructClear(structure)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structclear" returns="boolean">
	<help><![CDATA[
		Removes all data from a structure.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure to clear
		]]></help>
	</parameter>
</function>
<!--
	Struct StructCopy(structure)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structcopy" returns="Struct">
	<help><![CDATA[
		Copies a structure. Copies top-level keys, values, and arrays
		in the structure by value; copies nested structures by
		reference.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure to copy
		]]></help>
	</parameter>
</function>
<!--
	Numeric StructCount(structure)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structcount" returns="Numeric">
	<help><![CDATA[
		Counts the keys in a structure.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure to access
		]]></help>
	</parameter>
</function>
<!--
	boolean StructDelete(structure, key [, indicatenotexisting ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structdelete" returns="boolean">
	<help><![CDATA[
		Removes an element from a structure.
	]]></help>
	<parameter name="structure" type="String" required="true">
		<help><![CDATA[
			Structure or a variable that contains one. Contains element
			to remove
		]]></help>
	</parameter>
	<parameter name="key" type="String" required="true">
		<help><![CDATA[
			Element to remove
		]]></help>
	</parameter>
	<parameter name="indicatenotexisting" type="boolean" required="false">
		<help><![CDATA[
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</function>
<!--
	Object StructFind(structure, key)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structfind" returns="Object">
	<help><![CDATA[
		Determines the value associated with a key in a structure.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure that contains the value to return
		]]></help>
	</parameter>
	<parameter name="key" type="String" required="true">
		<help><![CDATA[
			Key whose value to return
		]]></help>
	</parameter>
</function>
<!--
	Array StructFindKey(top, value, scope)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structfindkey" returns="Array">
	<help><![CDATA[
		Searches recursively through a substructure of nested arrays,
		structures, and other elements, for structures whose values
		match the search key in the value parameter.
	]]></help>
	<parameter name="top" type="Object" required="true">
		<help><![CDATA[
			CFML object (structure or array) from which to start
			search. This attribute requires an object, not a name of
			an object.
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			String or a variable that contains one for which to search.
		]]></help>
	</parameter>
	<parameter name="scope" type="String" required="true">
		<help><![CDATA[
			* one: returns one matching key. Default.
			* all: returns all matching keys
		]]></help>
		<values>
			<value option="one"/>
			<value option="all"/>
		</values>
	</parameter>
</function>
<!--
	Array StructFindValue( top, value [, scope])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structfindvalue" returns="Array">
	<help><![CDATA[
		Searches recursively through a substructure of nested arrays,
		structures, and other elements for structures with values that
		match the search key in the value parameter.
	]]></help>
	<parameter name="top" type="Object" required="true">
		<help><![CDATA[
			CFML object (a structure or an array) from which to
			start search. This attribute requires an object, not a
			name of an object.
		]]></help>
	</parameter>
	<parameter name="value" type="String" required="true">
		<help><![CDATA[
			String or a variable that contains one for which to search.
			The type must be a simple object. Arrays and structures
			are not supported.
		]]></help>
	</parameter>
	<parameter name="scop" type="String" required="false">
		<help><![CDATA[
			one: function returns one matching key (default)
			all: function returns all matching keys
		]]></help>
		<values>
			<value option="one"/>
			<value option="all"/>
		</values>
	</parameter>
</function>
<!--
	Struct StructGet(pathDesired)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structget" returns="Struct">
	<help><![CDATA[
		Gets a structure(s) from a specified path.
	]]></help>
	<parameter name="pathdesired" type="String" required="true">
		<help><![CDATA[
			Pathname of variable that contains structure or array from
			which CFML retrieves structure
		]]></help>
	</parameter>
</function>
<!--
	boolean StructInsert(structure, key, value [, allowoverwrite ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structinsert" returns="boolean">
	<help><![CDATA[
		Inserts a key-value pair into a structure.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure to contain the new key-value pair.
		]]></help>
	</parameter>
	<parameter name="key" type="String" required="true">
		<help><![CDATA[
			Key that contains the inserted value.
		]]></help>
	</parameter>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
			Value to add.
		]]></help>
	</parameter>
	<parameter name="allowoverwrite" type="boolean" required="false">
		<help><![CDATA[
			Whether to allow overwriting a key. Default: False.
		]]></help>
		<values default="false">
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</function>
<!--
	boolean StructIsEmpty(structure)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structisempty" returns="boolean">
	<help><![CDATA[
		Determines whether a structure contains data.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure to test
		]]></help>
	</parameter>
</function>
<!--
	Array StructKeyArray(structure)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structkeyarray" returns="Array">
	<help><![CDATA[
		Finds the keys in a CFML structure.
		An array of keys; if structure does not exist, CFML
		throws an exception.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	boolean StructKeyExists(structure, "key")
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structkeyexists" returns="boolean">
	<help><![CDATA[
		Determines whether a specific key is present in a structure.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Name of structure to test
		]]></help>
	</parameter>
	<parameter name="key" type="String" required="true">
		<help><![CDATA[
			Key to test
		]]></help>
	</parameter>
</function>
<!--
	String StructKeyList(structure [, delimiter])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structkeylist" returns="String">
	<help><![CDATA[
		Extracts keys from a CFML structure.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure from which to extract a list of keys
		]]></help>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			Character that separates keys in list. Default: comma.
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Struct StructNew()
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structnew" returns="Struct">
	<help><![CDATA[
		Creates a structure.
	]]></help>
</function>
<!--
	Array StructSort(base, sortType, sortOrder, pathToSubElement)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structsort" returns="Array">
	<help><![CDATA[
		Returns a sorted array of the top level keys in a structure.
		Sorts using alphabetic or numeric sorting, and can sort based
		on the values of any structure element.
	]]></help>
	<parameter name="base" type="Struct" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
	<parameter name="sorttype" type="String" required="true">
		<help><![CDATA[
			* numeric
			* text: case sensitive Default.
			* textnocase
		]]></help>
		<values>
			<value option="numeric"/>
			<value option="text"/>
			<value option="textnocase"/>
		</values>
	</parameter>
	<parameter name="sortorder" type="String" required="true">
		<help><![CDATA[
			* asc: ascending (a to z) sort order. Default.
			* desc: descending (z to a) sort order
		]]></help>
	</parameter>
	<parameter name="pathtosubelement" type="String" required="true">
		<help><![CDATA[
			String or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	boolean StructUpdate(structure, key, value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="structupdate" returns="boolean">
	<help><![CDATA[
		Updates a key with a value.
	]]></help>
	<parameter name="structure" type="Struct" required="true">
		<help><![CDATA[
			Structure to update
		]]></help>
	</parameter>
	<parameter name="key" type="String" required="true">
		<help><![CDATA[
			Key, the value of which to update
		]]></help>
	</parameter>
	<parameter name="value" type="Object" required="true">
		<help><![CDATA[
			New value
		]]></help>
	</parameter>
</function>
<!--
	Numeric Tan(number)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="tan" returns="Numeric">
	<help><![CDATA[
		Calculates the tangent of an angle that is entered in radians.
	]]></help>
	<parameter name="number" type="Numeric" required="true">
		<help><![CDATA[
			Angle, in radians, for which to calculate the tangent
		]]></help>
	</parameter>
</function>
<!--
	String TimeFormat(time [, mask ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="timeformat" returns="String">
	<help><![CDATA[
		Formats a time value using US English time formatting
		conventions. If no mask is specified, returns a time value
		using the hh:mm tt format. For international time formatting,
		see LSTimeFormat.
		[mask]
		h,hh,H,HH: Hours; m,mm: Minutes; s,ss: Seconds;
		l: Milliseconds; t: A or P; tt: AM or PM
		"short" = h:mm tt; "medium" = h:mm:ss tt
	]]></help>
	<parameter name="time" type="DateTime" required="true">
		<help><![CDATA[
			A date/time value or string to convert
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
	<parameter name="mask" type="String" required="false">
		<help><![CDATA[
			Masking characters that determine the format
		]]></help>
		<values>
			<value option="short"/>
			<value option="medium"/>
			<value option="long"/>
			<value option="full"/>
		</values>
	</parameter>
</function>
<!--
	String ToBase64(string_or_object[, encoding])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="tobase64" returns="String">
	<help><![CDATA[
		Calculates the Base64 representation of a string or binary
		object. The Base64 format uses printable characters, allowing
		binary data to be sent in forms and e-mail, and stored in a
		database or file.
	]]></help>
	<parameter name="string_or_object" type="Object" required="true">
		<help><![CDATA[
			A string, the name of a string, or a binary object.
		]]></help>
	</parameter>
	<parameter name="encoding" type="String" required="false">
		<help><![CDATA[
			For a string, defines how characters are represented in a
			byte array.
		]]></help>
		<values>
			<value option="utf-8"/>
			<value option="iso-8859-1"/>
			<value option="windows-1252"/>
			<value option="us-ascii"/>
			<value option="shift_jis"/>
			<value option="iso-2022-jp"/>
			<value option="euc-jp"/>
			<value option="euc-kr"/>
			<value option="big5"/>
			<value option="euc-cn"/>
			<value option="utf-16"/>
		</values>
	</parameter>
</function>
<!--
	Binary ToBinary(string_in_Base64 or binary_value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="tobinary" returns="Binary">
	<help><![CDATA[
		Calculates the binary representation of Base64-encoded data.
	]]></help>
	<parameter name="base64_or_object" type="Object" required="true">
		<help><![CDATA[
			A string or a variable that contains one:
			* In Base64 format to convert to binary
			* In binary format to test whether it is valid
		]]></help>
	</parameter>
</function>
<!--
	String ToString(any_value[, encoding])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="tostring" returns="String">
	<help><![CDATA[
		Converts a value to a string.
	]]></help>
	<parameter name="any_value" type="Object" required="true">
		<help><![CDATA[
			Value to convert to a string
		]]></help>
	</parameter>
	<parameter name="encoding" type="String" required="false">
		<help><![CDATA[
			The character encoding (character set) of the string.
		]]></help>
		<values>
			<value option="utf-8"/>
			<value option="iso-8859-1"/>
			<value option="windows-1252"/>
			<value option="us-ascii"/>
			<value option="shift_jis"/>
			<value option="iso-2022-jp"/>
			<value option="euc-jp"/>
			<value option="euc-kr"/>
			<value option="big5"/>
			<value option="euc-cn"/>
			<value option="utf-16"/>
		</values>
	</parameter>
</function>
<!--
	String Trim(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="trim" returns="String">
	<help><![CDATA[
		Removes leading and trailing spaces from a string.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	String UCase(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="ucase" returns="String">
	<help><![CDATA[
		Converts the alphabetic characters in a string to uppercase.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	String URLDecode(urlEncodedString)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="urldecode" returns="String">
	<help><![CDATA[
		Decodes a URL-encoded string.
	]]></help>
	<parameter name="urlencodedstring" type="String" required="true">
		<help><![CDATA[
		]]></help>
	</parameter>
</function>
<!--
	String URLEncodedFormat(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="urlencodedformat" returns="String">
	<help><![CDATA[
		Generates a URL-encoded string. For example, it replaces spaces
		with %20, and non-alphanumeric characters with equivalent
		hexadecimal escape sequences. Passes arbitrary strings within a
		URL.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	Numeric Val(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="val" returns="Numeric">
	<help><![CDATA[
		Converts numeric characters that occur at the beginning of a
		string to a number. If conversion fails, returns zero.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	String ValueList(query.column [, delimiter ])
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="valuelist" returns="String">
	<help><![CDATA[
		Inserts a delimiter between each value in an executed query.
		CFML does not evaluate the arguments.
		A delimited list of the values of each record returned from an
		executed query
	]]></help>
	<parameter name="column" type="QueryColumn" required="true">
		<help><![CDATA[
			Name of an executed query and column. Separate query name
			and column name with a period.
		]]></help>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			A delimiter character to separate column data items.
			Default: comma (,).
		]]></help>
		<values default=",">
			<value option=","/>
			<value option="|"/>
			<value option=";"/>
			<value option="chr(9)"/>
			<value option="chr(10)"/>
			<value option="chr(13)"/>
		</values>
	</parameter>
</function>
<!--
	Numeric Week(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="week" returns="Numeric">
	<help><![CDATA[
		From a date/time object, determines the week number within
		the year. An integer in the range 1-53; the ordinal of the
		week, within the year.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
			A date/time object in the range 100 AD-9999 AD.
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	String WriteOutput(string)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="writeoutput" returns="String">
	<help><![CDATA[
		Appends text to the page-output stream.
		This function writes to the page-output stream regardless of
		conditions established by the cfsetting tag.
	]]></help>
	<parameter name="String" type="String" required="true">
		<help><![CDATA[
			A string, or a variable that contains one
		]]></help>
	</parameter>
</function>
<!--
	Numeric Year(date)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="year" returns="Numeric">
	<help><![CDATA[
		From a date/time object, gets the year value.
	]]></help>
	<parameter name="date" type="DateTime" required="true">
		<help><![CDATA[
		]]></help>
		<values>
			<value option="now()"/>
		</values>
	</parameter>
</function>
<!--
	String YesNoFormat(value)
--><function xmlns="http://www.cfeclipse.org/version1/dictionary" name="yesnoformat" returns="String">
	<help><![CDATA[
		Yes, for a non-zero value; No, otherwise.
	]]></help>
	<parameter name="value" type="boolean" required="true">
		<help><![CDATA[
			A number or Boolean value
		]]></help>
		<values>
			<value option="true"/>
			<value option="false"/>
		</values>
	</parameter>
</function>
	</functions>

	<scopes>
<scopes xmlns="http://www.cfeclipse.org/version1/dictionary">
	<!-- Updated by Jordan Clark: jclark@imagineeringstudio.com -->

	
	<!-- Server scope variables -->
	<scope value="Server.ColdFusion.ProductName" type="String"><help><![CDATA[ 
		ColdFusion product name, usually "ColdFusion Server"
	]]></help></scope>
	<scope value="Server.ColdFusion.ProductVersion" type="String"><help><![CDATA[ 
		ColdFusion product release information. Comma seperated list
		of build numbers, first number is the major build number.
		For example: 5,0,0,12345
	]]></help></scope>
	<scope value="Server.ColdFusion.ProductLevel" type="String"><help><![CDATA[ 
		ColdFusion product level information, for example:
		"Professional", "Enterprise", or "Developer"
	]]></help></scope>
	<scope value="Server.ColdFusion.SerialNumber" type="String"><help><![CDATA[ 
		ColdFusion serial number.
	]]></help></scope>
	<scope value="Server.ColdFusion.SupportedLocales" type="String"><help><![CDATA[ 
		Locales supported by ColdFusion, comma seperated.
	]]></help></scope>
	<scope value="Server.ColdFusion.Expiration" type="DateTime"><help><![CDATA[ 
		Expiration date of ColdFusion.
	]]></help></scope>
	<scope value="Server.OS.Name" type="String"><help><![CDATA[ 
		Server operating system name.
	]]></help></scope>
	<scope value="Server.OS.AdditionalInformation" type="String"><help><![CDATA[ 
		Information about the host operating system.
	]]></help></scope>
	<scope value="Server.OS.Version" type="Numeric"><help><![CDATA[ 
		Operating system version.
	]]></help></scope>
	<scope value="Server.OS.Arch" type="String"><help><![CDATA[ 
		The computer architecture, Windows computers are: x86
	]]></help></scope>
	<scope value="Server.OS.BuildNumber" type="String"><help><![CDATA[ 
		Build number of the host operating system.
	]]></help></scope>
	
	
	<!-- Application Scope variables -->
	<scope value="Application.ApplicationName" type="String"><help><![CDATA[ 
		Name of the application set with the cfapplication tag.
	]]></help></scope>
	
	<!-- Client scope variables -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/js/html/wwhelp.htm?href=00001134.htm#1133743 -->
	<!-- REFERENCE: expressionelements.vtm -->
	<scope value="Client.CFID" type="Numeric"><help><![CDATA[ 
		Unique client ID. Part of the session key.
	]]></help></scope>
	<scope value="Client.CFToken" type="Numeric"><help><![CDATA[ 
		Unique ID. Part of the session key.
	]]></help></scope>
	<scope value="Client.HitCount" type="Numeric"><help><![CDATA[ 
		Number of client visits.
	]]></help></scope>
	<scope value="Client.LastVisit" type="DateTime"><help><![CDATA[ 
		Date and time of the last visit.
	]]></help></scope>
	<scope value="Client.TimeCreated" type="DateTime"><help><![CDATA[ 
		Date and time of first visit.
	]]></help></scope>
	<scope value="Client.URLToken" type="String"><help><![CDATA[ 
		CFID combined with CFTOKEN.
		Example: CFID=123&CFTOKEN=45678
	]]></help></scope>
	
	
	<!-- Session Scope variables -->
	<scope value="Session.CFID" type="Numeric"><help><![CDATA[ 
		Unique Session ID. Part of the session key.
	]]></help></scope>
	<scope value="Session.CFToken" type="Numeric"><help><![CDATA[ 
		Unique Session ID. Part of the session key.
	]]></help></scope>
	<scope value="Session.URLToken" type="String"><help><![CDATA[ 
		CFID combined with CFTOKEN
		Eexample: CFID=123&CFTOKEN=45678
	]]></help></scope>
	<scope value="Session.SessionID" type="String"><help><![CDATA[ 
		A unique identifier for the session. ColdFusion session
		management: a combination of the application name and CFID
		and CFToken values. 
	]]></help></scope>
	
	
	<!-- Custom tag variables -->
	<scope value="ThisTag.ExecutionMode" type="String"><help><![CDATA[ 
		A custom tag template may be invoked in either of two modes:
		"Start" tag execution and "End" tag execution. "Inactive" is
		another possible value, but for unknown purposes.
	]]></help></scope>
	<scope value="ThisTag.HasEndTag" type="boolean"><help><![CDATA[ 
		Used for code validation, it distinguishes between custom
		tags that have and don't have end tags for
		ExecutionMode='start'. The name of the Boolean value is
		ThisTagHasEndTag.
	]]></help></scope>
	<scope value="ThisTag.GeneratedContent" type="String"><help><![CDATA[ 
		Custom tags can access and modify the generated content of
		any of its instances using the ThisTag.GeneratedContent
		variable.
	]]></help></scope>
	<scope value="ThisTag.AssocAttribs" type="Struct"><help><![CDATA[ 
		Holds the attributes of all nested tags if CFASSOCIATE has
		used them.
	]]></help></scope>
	
	
	<!-- cffile action="upload" variables -->
	<scope value="CFFILE.AttemptedServerFile" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion attempted to save a file.
	]]></help></scope>
	<scope value="CFFILE.ClientDirectory" type="String"><help><![CDATA[ 
		Full path of the uploaded file on the clients system.
	]]></help></scope>
	<scope value="CFFILE.ClientFile" type="String"><help><![CDATA[ 
		Filename of the uploaded file on the clients system.
	]]></help></scope>
	<scope value="CFFILE.ClientFileExt" type="String"><help><![CDATA[ 
		Extension of the uploaded file on the clients system without
		a period.
	]]></help></scope>
	<scope value="CFFILE.ClientFileName" type="String"><help><![CDATA[ 
		Filename without an extension of the uploaded file on the
		client's system.
	]]></help></scope>
	<scope value="CFFILE.ContentSubType" type="String"><help><![CDATA[ 
		MIME content subtype of the saved file.
	]]></help></scope>
	<scope value="CFFILE.ContentType" type="String"><help><![CDATA[ 
		MIME content type of the saved file.
	]]></help></scope>
	<scope value="CFFILE.DateLastAccessed" type="DateTime"><help><![CDATA[ 
		Date and time the uploaded file was last accessed.
	]]></help></scope>
	<scope value="CFFILE.FileExisted" type="boolean"><help><![CDATA[ 
		Specifies whether or not the file already existed with the
		same path.
	]]></help></scope>
	<scope value="CFFILE.FileSize" type="Numeric"><help><![CDATA[ 
		Size of the uploaded file.
	]]></help></scope>
	<scope value="CFFILE.FileWasAppended" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion appended a file to an
		existing file.
	]]></help></scope>
	<scope value="CFFILE.FileWasOverwritten" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion overwrote a file.
	]]></help></scope>
	<scope value="CFFILE.FileWasRenamed" type="boolean"><help><![CDATA[ 
		Specifies whether or not the uploaded file was renamed to
		avoid a name conflict.
	]]></help></scope>
	<scope value="CFFILE.FileWasSaved" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion saved a file.
	]]></help></scope>
	<scope value="CFFILE.OldFileSize" type="Numeric"><help><![CDATA[ 
		Size of a file that was overwritten in the file upload
		operation.
	]]></help></scope>
	<scope value="CFFILE.ServerDirectory" type="String"><help><![CDATA[ 
		Full path of the file actually saved.
	]]></help></scope>
	<scope value="CFFILE.ServerFile" type="String"><help><![CDATA[ 
		Filename of the file actually saved.
	]]></help></scope>
	<scope value="CFFILE.ServerFileExt" type="String"><help><![CDATA[ 
		Extension of the uploaded file on the server, without a period
		Example: txt
	]]></help></scope>
	<scope value="CFFILE.ServerFileName" type="String"><help><![CDATA[ 
		Filename, without an extension, of the uploaded file on the
		server.
	]]></help></scope>
	<scope value="CFFILE.TimeCreated" type="DateTime"><help><![CDATA[ 
		Time the uploaded file was created.
	]]></help></scope>
	<scope value="CFFILE.TimeLastModified" type="DateTime"><help><![CDATA[ 
		Date and time of the last modification to the uploaded file.
	]]></help></scope>
	
	
	<!-- FILE action="upload" variables -->
	<!-- FILE prefix can be renamed with RESULT attribute -->
	<scope value="FILE.AttemptedServerFile" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion attempted to save a file.
	]]></help></scope>
	<scope value="FILE.ClientDirectory" type="String"><help><![CDATA[ 
		Full path of the uploaded file on the clients system.
	]]></help></scope>
	<scope value="FILE.ClientFile" type="String"><help><![CDATA[ 
		Filename of the uploaded file on the clients system.
	]]></help></scope>
	<scope value="FILE.ClientFileExt" type="String"><help><![CDATA[ 
		Extension of the uploaded file on the clients system without
		a period.
	]]></help></scope>
	<scope value="FILE.ClientFileName" type="String"><help><![CDATA[ 
		Filename without an extension of the uploaded file on the
		client's system.
	]]></help></scope>
	<scope value="FILE.ContentSubType" type="String"><help><![CDATA[ 
		MIME content subtype of the saved file.
	]]></help></scope>
	<scope value="FILE.ContentType" type="String"><help><![CDATA[ 
		MIME content type of the saved file.
	]]></help></scope>
	<scope value="FILE.DateLastAccessed" type="DateTime"><help><![CDATA[ 
		Date and time the uploaded file was last accessed.
	]]></help></scope>
	<scope value="FILE.FileExisted" type="boolean"><help><![CDATA[ 
		Specifies whether or not the file already existed with the
		same path.
	]]></help></scope>
	<scope value="FILE.FileSize" type="Numeric"><help><![CDATA[ 
		Size of the uploaded file.
	]]></help></scope>
	<scope value="FILE.FileWasAppended" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion appended a file to an
		existing file.
	]]></help></scope>
	<scope value="FILE.FileWasOverwritten" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion overwrote a file.
	]]></help></scope>
	<scope value="FILE.FileWasRenamed" type="boolean"><help><![CDATA[ 
		Specifies whether or not the uploaded file was renamed to
		avoid a name conflict.
	]]></help></scope>
	<scope value="FILE.FileWasSaved" type="boolean"><help><![CDATA[ 
		Specifies whether or not ColdFusion saved a file.
	]]></help></scope>
	<scope value="FILE.OldFileSize" type="Numeric"><help><![CDATA[ 
		Size of a file that was overwritten in the file upload
		peration.
	]]></help></scope>
	<scope value="FILE.ServerDirectory" type="String"><help><![CDATA[ 
		Full path of the file actually saved.
	]]></help></scope>
	<scope value="FILE.ServerFile" type="String"><help><![CDATA[ 
		Filename of the file actually saved.
	]]></help></scope>
	<scope value="FILE.ServerFileExt" type="String"><help><![CDATA[ 
		Extension of the uploaded file on the server, without a period
		Example: txt
	]]></help></scope>
	<scope value="FILE.ServerFileName" type="String"><help><![CDATA[ 
		Filename, without an extension, of the uploaded file on the
		server.
	]]></help></scope>
	<scope value="FILE.TimeCreated" type="DateTime"><help><![CDATA[ 
		Time the uploaded file was created.
	]]></help></scope>
	<scope value="FILE.TimeLastModified" type="DateTime"><help><![CDATA[ 
		Date and time of the last modification to the uploaded file.
	]]></help></scope>
	
	
	<!-- CFFTP variables -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/common/html/wwhelp.htm?context=ColdFusion_Documentation&file=00000261.htm -->
	<!-- REFERENCE: expressionelements.vtm -->
	<scope value="CFFTP.ReturnValue" type="String"><help><![CDATA[ 
		The result value depending on the action performed, as
		follows:
		getCurrentDir = current directory (string)
		getCurrentURL = current URL (string)
		existsDir = yes/no
		existsFile = yes/no
		exists = yes/no
	]]></help></scope>
	<scope value="CFFTP.Succeeded" type="boolean"><help><![CDATA[ 
		Yes or No dependent on value of ErrorCode.
	]]></help></scope>
	<scope value="CFFTP.ErrorCode" type="Numeric"><help><![CDATA[ 
		Error code.
	]]></help></scope>
	<scope value="CFFTP.ErrorText" type="String"><help><![CDATA[ 
		Text associated with ErrorCode.
	]]></help></scope>
	
	
	<!-- Returned from "ListDir" action as a query with these fields -->
	<!-- CFFTP prefix is set by NAME attribute -->
	<scope value="CFFTPList.Name" type="String"><help><![CDATA[ 
		ListDir Query Field: Filename of the current element.
	]]></help></scope>
	<scope value="CFFTPList.Path" type="String"><help><![CDATA[ 
		ListDir Query Field: File path (without the drive
		designation) of the current element.
	]]></help></scope>
	<scope value="CFFTPList.URL" type="String"><help><![CDATA[ 
		ListDir Query Field: Complete URL for the current element
		(file or directory).
	]]></help></scope>
	<scope value="CFFTPList.Length" type="Numeric"><help><![CDATA[ 
		ListDir Query Field: Number indicating file size of the
		current element.
	]]></help></scope>
	<scope value="CFFTPList.LastModified" type="DateTime"><help><![CDATA[ 
		ListDir Query Field: Unformatted date/time value of the
		current element.
	]]></help></scope>
	<scope value="CFFTPList.Attributes" type="String"><help><![CDATA[ 
		ListDir Query Field: Indicates attributes of the current
		element.
	]]></help></scope>
	<scope value="CFFTPList.IsDirectory" type="boolean"><help><![CDATA[ 
		ListDir Query Field: Indicates whether object is a file or
		directory.
	]]></help></scope>
	<scope value="CFFTPList.CurrentRow" type="String"><help><![CDATA[ 
		The current row of the query in a loop.
	]]></help></scope>
	<scope value="CFFTPList.RecordCount" type="Numeric"><help><![CDATA[ 
		Total number of records in the query.
	]]></help></scope>
	<scope value="CFFTPList.ColumnList" type="Numeric"><help><![CDATA[ 
		Column list, comma seperated.
	]]></help></scope>
	
	
	<!-- CFDIRECTORY ACTION="LIST" QUERY -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/js/html/wwhelp.htm?href=00001134.htm#1133743 -->
	<!-- REFERENCE: expressionelements.vtm -->
	<!-- CFDIRECTORY prefix is set by QUERY attribute -->
	<scope value="CFDIRECTORY.Attributes" type="String"><help><![CDATA[ 
		Returns file attributes, if applicable.
	]]></help></scope>
	<scope value="CFDIRECTORY.DateLastModified" type="DateTime"><help><![CDATA[ 
		Returns the date an entry was last modified.
	]]></help></scope>
	<scope value="CFDIRECTORY.Mode" type="String"><help><![CDATA[ 
		File mode for solaris.
	]]></help></scope>
	<scope value="CFDIRECTORY.Name" type="String"><help><![CDATA[ 
		Returns the directory or file entry name.
	]]></help></scope>
	<scope value="CFDIRECTORY.Size" type="Numeric"><help><![CDATA[ 
		Returns the size of directory or file entry.
	]]></help></scope>
	<scope value="CFDIRECTORY.Type" type="String"><help><![CDATA[ 
		Returns entry type: "File" or "Dir".
	]]></help></scope>
	<scope value="CFDIRECTORY.CurrentRow" type="String"><help><![CDATA[ 
		The current row of the query in a loop.
	]]></help></scope>
	<scope value="CFDIRECTORY.RecordCount" type="Numeric"><help><![CDATA[ 
		Total number of records in the query.
	]]></help></scope>
	<scope value="CFDIRECTORY.ColumnList" type="Numeric"><help><![CDATA[ 
		Column list, comma seperated.
	]]></help></scope>
	
	
	<!-- CFREGISTRY ACTION="GETALL" QUERY -->
	<!-- REFERENCE: expressionelements.vtm -->
	<!-- CFREGISTRY prefix is set by NAME attribute -->
	<scope value="CFREGISTRY.Entry" type="String"><help><![CDATA[ 
		Registry value name.
	]]></help></scope>
	<scope value="CFREGISTRY.Type" type="String"><help><![CDATA[ 
		Data type.
	]]></help></scope>
	<scope value="CFREGISTRY.Value" type="String"><help><![CDATA[ 
		Registry value data.
	]]></help></scope>
	<scope value="CFREGISTRY.CurrentRow" type="String"><help><![CDATA[ 
		The current row of the query in a loop.
	]]></help></scope>
	<scope value="CFREGISTRY.RecordCount" type="Numeric"><help><![CDATA[ 
		Total number of records in the query.
	]]></help></scope>
	<scope value="CFREGISTRY.ColumnList" type="Numeric"><help><![CDATA[ 
		Column list, comma seperated.
	]]></help></scope>
	
	
	<!-- CFSEARCH QUERY -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/js/html/wwhelp.htm?href=00001134.htm#1133743 -->
	<!-- CFSEARCH prefix is set by NAME attribute -->
	<scope value="CFSEARCH.URL" type="String"><help><![CDATA[ 
		Value of URLpath attribute in the cfindex tag used to
		populate a collection.
	]]></help></scope>
	<scope value="CFSEARCH.Key" type="String"><help><![CDATA[ 
		Value of the key attribute in the cfindex tag used to
		populate a collection.
	]]></help></scope>
	<scope value="CFSEARCH.Title" type="String"><help><![CDATA[ 
		Value of title attribute in cfindex tag used to populate the
		collection, including PDF and Office document titles. If a
		title is not extracted from the document, the tag uses the
		cfindex title attribute value for each row.
	]]></help></scope>
	<scope value="CFSEARCH.Score" type="Numeric"><help><![CDATA[ 
		Relevancy score of document based on search criteria, from
		0-1. Example: 0.92 (would be 92%)
	]]></help></scope>
	<scope value="CFSEARCH.Custom1" type="String"><help><![CDATA[ 
		Value of custom fields in cfindex tag used to populate a
		collection.
	]]></help></scope>
	<scope value="CFSEARCH.Custom2" type="String"><help><![CDATA[ 
		Value of custom fields in cfindex tag used to populate a
		collection.
	]]></help></scope>
	<scope value="CFSEARCH.Summary" type="String"><help><![CDATA[ 
		Contents of automatic summary generated by cfindex.
	]]></help></scope>
	<scope value="CFSEARCH.CurrentRow" type="String"><help><![CDATA[ 
		The current row of the query in a loop.
	]]></help></scope>
	<scope value="CFSEARCH.RecordCount" type="Numeric"><help><![CDATA[ 
		Total number of records in the query.
	]]></help></scope>
	<scope value="CFSEARCH.ColumnList" type="Numeric"><help><![CDATA[ 
		Column list, comma seperated.
	]]></help></scope>
	
	
	<!-- CFCOLLECTION -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/common/html/wwhelp.htm?context=ColdFusion_Documentation&file=00000230.htm#1097667 -->
	<!-- CFCOLLECTION prefix is set by NAME attribute -->
	<scope value="CFCOLLECTION.charset" type="String"><help><![CDATA[ 
		The character set of the collection.
	]]></help></scope>
	<scope value="CFCOLLECTION.created" type="DateTime"><help><![CDATA[ 
		The date and time that the collection was created.
	]]></help></scope>
	<scope value="CFCOLLECTION.external" type="String"><help><![CDATA[ 
		- yes: the collection is external.
		- no: the collection is not external.
		- Not Found: the collection is registered but is not available in the defined path .
	]]></help></scope>
	<scope value="CFCOLLECTION.language" type="String"><help><![CDATA[ 
		The locale setting of the collection.
		(This information is not available for K2Server collections.)
	]]></help></scope>
	<scope value="CFCOLLECTION.name" type="String"><help><![CDATA[ 
		The name of the collection.
	]]></help></scope>
	<scope value="CFCOLLECTION.path" type="String"><help><![CDATA[ 
		Absolute path to the collection.
	]]></help></scope>
	<scope value="CFCOLLECTION.mapped" type="boolean"><help><![CDATA[ 
		The collection is mapped.
		(This information is not available for K2Server collections.)
	]]></help></scope>
	<scope value="CFCOLLECTION.online" type="boolean"><help><![CDATA[ 
		The collection can be searched.
		(If EXTERNAL = "Not Found", this value is "No".)
	]]></help></scope>
	<scope value="CFCOLLECTION.registered" type="String"><help><![CDATA[ 
		- CF: collection is registered by ColdFusion
		- K2: collection is registered by K2Server
	]]></help></scope>
	
	
	<!-- CFSTOREDPROC -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/js/html/wwhelp.htm?href=00001134.htm#1133743 -->
	<scope value="CFSTOREDPROC.StatusCode" type="String"><help><![CDATA[ 
		Status code for the stored procedure.
		(only when returnCode="true")
	]]></help></scope>
	<scope value="CFSTOREDPROC.ExecutionTime" type="Numeric"><help><![CDATA[ 
		Execution time for the request in milliseconds.
		(only when returnCode="true")
	]]></help></scope>
	
	
	<!-- CFPOP action="GETALL" and action="GETHEADERONLY" QUERY -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/js/html/wwhelp.htm?href=00001134.htm#1133743 -->
	<!-- CFPOP prefix is set by NAME attribute -->
	<scope value="CFPOP.Attachments" type="String"><help><![CDATA[ 
		Contains a tab-separated list of all original attachment
		names.
		(only when action="getall")
	]]></help></scope>
	<scope value="CFPOP.AttachmentFiles" type="String"><help><![CDATA[ 
		Contains a tab-separated list of the actual temporary
		filenames written to the server.
		(only when action="getall")
	]]></help></scope>
	<scope value="CFPOP.Body" type="String"><help><![CDATA[ 
		Body of message.
		(only when action="getall")
	]]></help></scope>
	<scope value="CFPOP.CC" type="String"><help><![CDATA[ 
		CC value from message header.
	]]></help></scope>
	<scope value="CFPOP.Date" type="DateTime"><help><![CDATA[ 
		Date sent value from message header.
	]]></help></scope>
	<scope value="CFPOP.From" type="String"><help><![CDATA[ 
		From value from message header.
	]]></help></scope>
	<scope value="CFPOP.Header" type="String"><help><![CDATA[ 
		Entire message header.
		(only when action="getall")
	]]></help></scope>
	<scope value="CFPOP.MessageNumber" type="String"><help><![CDATA[ 
		Sequential message number of message on POP server.
	]]></help></scope>
	<scope value="CFPOP.ReplyTo" type="String"><help><![CDATA[ 
		ReplyTo value from message header.
	]]></help></scope>
	<scope value="CFPOP.Subject" type="String"><help><![CDATA[ 
		Subject value from message header.
	]]></help></scope>
	<scope value="CFPOP.To" type="String"><help><![CDATA[ 
		To value from message header.
	]]></help></scope>
	<scope value="CFPOP.ColumnList" type="String"><help><![CDATA[ 
		Column list, comma seperated.
	]]></help></scope>
	<scope value="CFPOP.CurrentRow" type="Numeric"><help><![CDATA[ 
		The current row of the query in a loop.
	]]></help></scope>
	<scope value="CFPOP.RecordCount" type="Numeric"><help><![CDATA[ 
		Total number of records in the query.
	]]></help></scope>
	
	
	<!-- Any Query -->
	<scope value="QUERY.CurrentRow" type="String"><help><![CDATA[ 
		The current row of the query in a loop.
	]]></help></scope>
	<scope value="QUERY.RecordCount" type="Numeric"><help><![CDATA[ 
		Total number of records in the query.
	]]></help></scope>
	<scope value="QUERY.ColumnList" type="Numeric"><help><![CDATA[ 
		Column list, comma seperated.
	]]></help></scope>
	
	
	<!-- cfhttp variables -->
	<!-- CFHTTP prefix can be renamed with RESULT attribute -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/common/html/wwhelp.htm?context=ColdFusion_Documentation&file=00000272.htm -->
	<scope value="CFHTTP.FileContent" type="String"><help><![CDATA[ 
		Response body; for example: the contents of a html page
		retrieved by a GET operation. Empty if you save the response
		in a file.
	]]></help></scope>
	<scope value="CFHTTP.Header" type="String"><help><![CDATA[ 
		Raw response header containing all header information in a
		single string. Contains the same information as the
		#cfhttp.responseHeader# variable.
	]]></help></scope>
	<scope value="CFHTTP.MimeType" type="String"><help><![CDATA[ 
		MIME type specified by the response Content-Type header,
		Example: text/html
	]]></help></scope>
	<scope value="CFHTTP.ResponseHeader" type="String"><help><![CDATA[ 
		The response headers formatted into a structure. Each element
		key is the header name, such as Content-Type or Status_Code.
		If there is more than one instance of a header type, the type
		values are put in an array. One common technique is to
		dynamically access the cfhttp.responseHeader structure as a
		dynamic array, example: #cfhttp.resonseHeader[fieldVariable]#
	]]></help></scope>
	<scope value="CFHTTP.StatusCode" type="String"><help><![CDATA[ 
		The HTTP status_code header value followed by the HTTP
		Explanation header value.
		Example: 200 OK
	]]></help></scope>
	
	
	<!-- CGI scope variables -->
	<!-- REFERENCE: Apache: http://www.zytrax.com/tech/web/env_var.htm -->
	<!-- REFERENCE: IIS: http://msdn.microsoft.com/library/default.asp?url=/library/en-us/iissdk/html/21b3be8f-d4ed-4059-8e21-6cba2c253006.asp -->
	<!-- REFERENCE: Zeus: http://www.zeus.com/extra/docsystem/docroot/apps/web/docs/modules/cgi/reference.html -->
	<scope value="CGI.ALL_HTTP" type="String"><help><![CDATA[ 
		All HTTP headers that were not already parsed into one of the
		listed variables. These variables are of the form HTTP_header
		field name with each variable separated by a semi-colon
	]]></help></scope>
	<scope value="CGI.ALL_RAW" type="String"><help><![CDATA[ 
		(IIS) Retrieves all headers in raw form. The difference
		between CGI.ALL_RAW and CGI.ALL_HTTP is that CGI.ALL_HTTP
		places an HTTP_ prefix before the header name and the header
		name is always capitalized. In ALL_RAW the header name and
		values appear as they are sent by the client.
	]]></help></scope>
	<scope value="CGI.APP_POOL_ID" type="String"><help><![CDATA[ 
		(IIS) Returns the name of the application pool that is
		running in the IIS worker process that is handling the
		request. There is also an CGI.APP_POOL_ID environment
		variable that is available to applications that are running
		in the IIS worker process. (Note: IIS 5.1 and earlier: This server
		variable is not available.)
	]]></help></scope>
	<scope value="CGI.APPL_MD_PATH" type="String"><help><![CDATA[ 
		(IIS) Retrieves the metabase path of the application.
	]]></help></scope>
	<scope value="CGI.APPL_PHYSICAL_PATH" type="String"><help><![CDATA[ 
		(IIS) Retrieves the physical path corresponding to the
		metabase path in CGI.APPL_MD_PATH.
	]]></help></scope>
	<scope value="CGI.AUTH_PASSWORD" type="String"><help><![CDATA[ 
		(IIS) The value entered in the client's authentication
		dialog. This variable is available only if Basic
		authentication is used.
	]]></help></scope>
	<scope value="CGI.AUTH_TYPE" type="String"><help><![CDATA[ 
		If the server supports user authentication, and the script
		is protected, this is the protocol-specific authentication
		method used to validate the user.
	]]></help></scope>
	<scope value="CGI.AUTH_USER" type="String"><help><![CDATA[ 
		(IIS) The name of the user as it is derived from the
		authorization header sent by the client, before the user
		name is mapped to a Windows account. This variable is no
		different from CGI.REMOTE_USER. If you have an authentication
		filter installed on your Web server that maps incoming users
		to accounts, use CGI.LOGON_USER to view the mapped user name.
	]]></help></scope>
	<scope value="CGI.CACHE_URL" type="String"><help><![CDATA[ 
		(IIS) Returns the full URL
		Example: http://www.macromedia.com:80/index.cfm?query=string
		(Note: IIS 5.1 and earlier: This server variable is not
		available.)
	]]></help></scope>
	<scope value="CGI.CERT_COOKIE" type="String"><help><![CDATA[ 
		(IIS) Unique ID for the client certificate, returned as a
		string. This can be used as a signature for the whole client
		certificate.
	]]></help></scope>
	<scope value="CGI.CERT_FLAGS" type="String"><help><![CDATA[ 
		(IIS) bit0 is set to 1 if the client certificate is present.
		bit1 is set to 1 if the certification authority of the client
		certificate is invalid (that is, it is not in the list of
		recognized certification authorities on the server). If bit
		1 of CGI.CERT_FLAGS is set to 1, indicating that the
		certificate is invalid, IIS version 4.0 and later will reject
		the certificate.
		(Note: Earlier versions of IIS will not reject the
		certificate.)
	]]></help></scope>
	<scope value="CGI.CERT_ISSUER" type="String"><help><![CDATA[ 
		Issuer field of the client certificate
		(O=MS, OU=IAS, CN=user name, C=USA).
	]]></help></scope>
	<scope value="CGI.CERT_KEYSIZE" type="String"><help><![CDATA[ 
		(IIS) Number of bits in the Secure Sockets Layer (SSL)
		connection key size.
		Example: 128
	]]></help></scope>
	<scope value="CGI.CERT_SECRETKEYSIZE" type="String"><help><![CDATA[ 
		(IIS) Number of bits in server certificate private key.
		Example: 1024
	]]></help></scope>
	<scope value="CGI.CERT_SERIALNUMBER" type="String"><help><![CDATA[ 
		(IIS) Serial number field of the client certificate.
	]]></help></scope>
	<scope value="CGI.CERT_SERVER_ISSUER" type="String"><help><![CDATA[ 
		(IIS) Issuer field of the server certificate.
	]]></help></scope>
	<scope value="CGI.CERT_SERVER_SUBJECT" type="String"><help><![CDATA[ 
		(IIS) Subject field of the server certificate.
	]]></help></scope>
	<scope value="CGI.CERT_SUBJECT" type="String"><help><![CDATA[ 
		Subject field of the client certificate.
	]]></help></scope>
	<scope value="CGI.CF_TEMPLATE_PATH" type="String"><help><![CDATA[ 
		Show the entire file path to the coldfusion template, similar
		to CGI.PATH_TRANSLATED.
		Example: c:\inetpub\wwwroot\somesite\somepage.cfm
	]]></help></scope>
	<scope value="CGI.CLIENT_CERT_ENCODED" type="String"><help/></scope>
	<scope value="CGI.CONTENT_LENGTH" type="String"><help><![CDATA[ 
		The length of the content as given by the client.
	]]></help></scope>
	<scope value="CGI.CONTENT_TYPE" type="String"><help><![CDATA[ 
		For queries that have attached information, such as HTTP POST
		and PUT, this is the content type of the data.
	]]></help></scope>
	<scope value="CGI.DATE_GMT" type="String"><help><![CDATA[ 
		(Apache SSI) The current date and time in Greenwich Mean Time
		(now Unviversal Co-ordinated Time (UCT) in the default or
		#config defined format). Thursday, 03-May-2001 21:18:54 GMT
	]]></help></scope>
	<scope value="CGI.DATE_LOCAL" type="String"><help><![CDATA[ 
		(Apache SSI) The current date and time in the local (server)
		timezone (in the default or #config defined format),
		Example: Thursday, 03-May-2001 17:18:54 EDT
	]]></help></scope>
	<scope value="CGI.DOCUMENT_ARGS" type="String"><help><![CDATA[ 
		(Zeus SSI) This will be set to the CGI.QUERY_STRING of the
		master document. The value of CGI.QUERY_STRING for an SSI
		sub-request will contain the query string in the sub-request
		URL, if present, else the master document's CGI.QUERY_STRING.
	]]></help></scope>
	<scope value="CGI.DOCUMENT_NAME" type="String"><help><![CDATA[ 
		(Apache SSI) The file name (excludes directories) of the
		document requested by the user.
		Example: ssi.htm
	]]></help></scope>
	<scope value="CGI.DOCUMENT_PATH_INFO" type="String"><help><![CDATA[ 
		(Apache SSI/Zeus SSI) This will be set to the CGI.PATH_INFO of
		the master document.
	]]></help></scope>
	<scope value="CGI.DOCUMENT_ROOT" type="String"><help><![CDATA[ 
		(Apache SSI) The root directory of this site defined by the
		'DocumentRoot' directive in the General Section or a
		<virtualhost> section.
		Example: /var/www/zytrax 
	]]></help></scope>
	<scope value="CGI.DOCUMENT_URI" type="String"><help><![CDATA[ 
		(Apache SSI/Zeus SSI) The URL path of the document requested
		by the user.
		Example: /tech/web/ssi.htm
	]]></help></scope>
	<scope value="CGI.GATEWAY_INTERFACE" type="String"><help><![CDATA[ 
		The revision of the CGI specification to which this server
		complies. Format: CGI/revision.
	]]></help></scope>
	<scope value="CGI.HTTP_ACCEPT" type="String"><help><![CDATA[ 
		List of Content-types the browser can accept (defined by the
		HTTP Accept header).
	]]></help></scope>
	<scope value="CGI.HTTP_ACCEPT_ENCODING" type="String"><help><![CDATA[ 
		(IIS) Returns a list of accepted encoding types.
		Example: gzip, deflate
	]]></help></scope>
	<scope value="CGI.HTTP_ACCEPT_LANGUAGE" type="String"><help><![CDATA[ 
		(IIS) Returns a string describing the language to use for
		displaying content.
	]]></help></scope>
	<scope value="CGI.HTTP_CONNECTION" type="String"><help><![CDATA[ 
		(IIS) Returns a string describing the connection type.
		Example: Keep-Alive
	]]></help></scope>
	<scope value="CGI.HTTP_COOKIE" type="String"><help><![CDATA[ 
		(IIS) Returns the cookie string that was included with the
		request.
	]]></help></scope>
	<scope value="CGI.HTTP_HOST" type="String"><help><![CDATA[ 
		(IIS) Returns the name of the Web server. This may or may
		not be the same as CGI.SERVER_NAME depending on type of name
		resolution you are using on your Web server (IP address,
		host header).
	]]></help></scope>
	<scope value="CGI.HTTP_IF_MODIFIED_SINCE" type="String"><help/></scope>
	<scope value="CGI.HTTP_METHOD" type="String"><help><![CDATA[ 
		(IIS) The method used to make the request
		(Note: same as CGI.REQUEST_METHOD).
	]]></help></scope>
	<scope value="CGI.HTTP_REFERER" type="String"><help><![CDATA[ 
		The referring document. The document that linked to or
		submitted form data.
	]]></help></scope>
	<scope value="CGI.HTTP_URL" type="String"><help><![CDATA[ 
		(IIS) Returns the raw, encoded URL.
		Example: /vdir/default.asp?querystring
	]]></help></scope>
	<scope value="CGI.HTTP_USER_AGENT" type="String"><help><![CDATA[ 
		The browser the client is currently using to send the
		request. Format: software/version library/version.
	]]></help></scope>
	<scope value="CGI.HTTP_VERSION" type="String"><help><![CDATA[ 
		(IIS) The name and version of the request protocol (the raw
		form of CGI.SERVER_PROTOCOL).
	]]></help></scope>
	<scope value="CGI.HTTPS" type="String"><help><![CDATA[ 
		(IIS/Zeus) Returns ON if the request came in through a secure
		channel; or it returns OFF, if the request is for an
		insecure channel.
		Example: SSL
	]]></help></scope>
	<scope value="CGI.HTTPS_KEYSIZE" type="String"><help><![CDATA[ 
		(IIS/Zeus) Number of bits in the SSL connection key size.
		Example: 128
	]]></help></scope>
	<scope value="CGI.HTTPS_SECRETKEYSIZE" type="String"><help><![CDATA[ 
		(IIS/Zeus) Number of bits in the server certificate private
		key.
		Example: 1024
	]]></help></scope>
	<scope value="CGI.HTTPS_SERVER_ISSUER" type="String"><help><![CDATA[ 
		(IIS) Issuer field of the server certificate.
	]]></help></scope>
	<scope value="CGI.HTTPS_SERVER_SUBJECT" type="String"><help><![CDATA[ 
		(IIS) Subject field of the server certificate.
	]]></help></scope>
	<scope value="CGI.HTTPS_SESSIONID" type="String"><help><![CDATA[ 
		(Zeus SSI) The value of the session id used by the SSL
		session. This value is unique for each distinct SSL session
	]]></help></scope>
	<scope value="CGI.INSTANCE_ID" type="String"><help><![CDATA[ 
		(IIS) The ID for the IIS instance in textual format. If the
		instance ID is 1, it appears as a string. You can use this
		variable to retrieve the ID of the Web server instance (in
		the metabase) to which the request belongs.
	]]></help></scope>
	<scope value="CGI.INSTANCE_META_PATH" type="String"><help><![CDATA[ 
		(IIS) The metabase path for the instance of IIS that responds
		to the request.
	]]></help></scope>
	<scope value="CGI.LAST_MODIFIED" type="String"><help><![CDATA[ 
		(Apache SSI) The last modification date of the document (file)
		requested by the user (in the default or #config defined
		format). This variable related to the file currently being
		accessed i.e. if you put this is an included 'footer' file
		is is the modification date of the footer NOT the base
		document (you need to use a simple 'wheeze' to pass a USER
		variable which contains the calling documents modification
		date (see here).
		Example: Thursday, 03-May-2001 17:18:45 EDT
	]]></help></scope>
	<scope value="CGI.LOCAL_ADDR" type="String"><help><![CDATA[ 
		(IIS) Returns the server address on which the request came
		in. This is important on computers where there can be
		multiple IP addresses bound to the computer, and you want to
		find out which address the request used.
	]]></help></scope>
	<scope value="CGI.LOGON_USER" type="String"><help><![CDATA[ 
		(IIS) The Windows account that the user is impersonating
		while connected to your Web server. Use CGI.REMOTE_USER,
		CGI.UNMAPPED_REMOTE_USER, or CGI.AUTH_USER to view the raw
		user name that is contained in the request header. The only
		time CGI.LOGON_USER holds a different value than these other
		variables is if you have an authentication filter installed.
	]]></help></scope>
	<scope value="CGI.PATH" type="String"><help><![CDATA[ 
		(Apache) The PATH(s) available to the server for this web site
		Example: /sbin:/usr/sbin:/bin:/usr/bin:/usr/X11R6/bin 
	]]></help></scope>
	<scope value="CGI.PATH_INFO" type="String"><help><![CDATA[ 
		The extra path information, as given by the client. In other
		words, scripts can be accessed by their virtual pathname,
		followed by extra information at the end of this path. The
		extra information is sent as CGI.PATH_INFO.
	]]></help></scope>
	<scope value="CGI.PATH_TRANSLATED" type="String"><help><![CDATA[ 
		The server provides a translated version of CGI.PATH_INFO,
		which takes the path and does any virtual-to-physical mapping
		to it.
	]]></help></scope>
	<scope value="CGI.QUERY_STRING" type="String"><help><![CDATA[ 
		The query information that follows the ? in the URL that
		referenced this script.
	]]></help></scope>
	<scope value="CGI.REMOTE_ADDR" type="String"><help><![CDATA[ 
		The IP address of the remote host making the request.
	]]></help></scope>
	<scope value="CGI.REMOTE_HOST" type="String"><help><![CDATA[ 
		The hostname making the request. If the server does not have
		this information, it sets CGI.REMOTE_ADDR and leaves this
		unset.
	]]></help></scope>
	<scope value="CGI.REMOTE_IDENT" type="String"><help><![CDATA[ 
		If the HTTP server supports RFC 931 identification, then this
		variable is set to the remote user name retrieved from the
		server. Usage of this variable should be limited to logging
		only.
	]]></help></scope>
	<scope value="CGI.REMOTE_PORT" type="String"><help><![CDATA[ 
		(IIS) The client port number of the TCP connection.
	]]></help></scope>
	<scope value="CGI.REMOTE_USER" type="String"><help><![CDATA[ 
		If the server supports user authentication, and the script is
		protected, this is the username they have authenticated as.
		(Also available as CGI.AUTH_USER.)
	]]></help></scope>
	<scope value="CGI.REQUEST_BODY" type="String"><help><![CDATA[ 
		The entity body (if any) sent with an HTTP request or
		response is in a format and encoding defined by the
		Entity-Header fields. See the HTTP protocol specification
		for details.
	]]></help></scope>
	<scope value="CGI.REQUEST_METHOD" type="String"><help><![CDATA[ 
		The method with which the request was made. For HTTP, this
		"GET", "HEAD", "POST", etc.
	]]></help></scope>
	<scope value="CGI.REQUEST_URI" type="String"><help><![CDATA[ 
		(Apache) The URI for this request (relative to
		CGI.DOCUMENT_ROOT)
		Example: /tech/web/ssi.htm
	]]></help></scope>
	<scope value="CGI.SCRIPT_FILENAME" type="String"><help><![CDATA[ 
		(Apache) The path to the script being executed (relative to
		CGI.DOCUMENT_ROOT)
		Example: /tech/web/ssi.htm 
	]]></help></scope>
	<scope value="CGI.SCRIPT_NAME" type="String"><help><![CDATA[ 
		A virtual path to the script being executed, used for
		self-referencing URLs.
	]]></help></scope>
	<scope value="CGI.SCRIPT_TRANSLATED" type="String"><help><![CDATA[ 
		(IIS) The canonical physical path to the script listed in
		CGI.SCRIPT_NAME
		Example: \\?\c:\inetpub\wwwroot\vdir\default.asp
		(Note: IIS 5.1 and earlier: This server variable is not
		available.)
	]]></help></scope>
	<scope value="CGI.SERVER_ADMIN" type="String"><help><![CDATA[ 
		(Apache) The administrators e-mail address for this
		CGI.SERVER_NAME.
		Example: webmaster@zytrax.com
	]]></help></scope>
	<scope value="CGI.SERVER_NAME" type="String"><help><![CDATA[ 
		The servers hostname, DNS alias, or IP address as it appears
		in self-referencing URLs.
	]]></help></scope>
	<scope value="CGI.SERVER_PORT" type="String"><help><![CDATA[ 
		The port number to which the request was sent.
	]]></help></scope>
	<scope value="CGI.SERVER_PORT_SECURE" type="String"><help><![CDATA[ 
		(IIS) A string that contains either 0 or 1. If the request is
		being handled on the secure port, then this is 1. Otherwise,
		it is 0.
	]]></help></scope>
	<scope value="CGI.SERVER_PROTOCOL" type="String"><help><![CDATA[ 
		The name and revision of the information protocol this
		request came in with. Format: protocol/revision.
	]]></help></scope>
	<scope value="CGI.SERVER_SIGNATURE" type="String"><help><![CDATA[ 
		(Apache) The HTML string that may be embedded in the page to
		identify this host.
		Example: <address>Apache/1.3.14 Server at www.zytrax.com Port
		80</address>
	]]></help></scope>
	<scope value="CGI.SERVER_SOFTWARE" type="String"><help><![CDATA[ 
		The name and version of the information server software
		answering the request (and running the gateway).
		Format: name/version.
	]]></help></scope>
	<scope value="CGI.SSI_EXEC_DISABLED" type="String"><help><![CDATA[ 
		(IIS) Returns a 1 if the server-side include directive,
		#exec, is disabled. Otherwise, CGI.SSI_EXE_DISABLED returns a
		0. To enable or disable #exec, use the SSIExecDisablemetabase
		property. (Note: IIS 5.1 and earlier: This server variable is
		not available.)
	]]></help></scope>
	<scope value="CGI.UNENCODED_URL" type="String"><help><![CDATA[ 
		(IIS) Returns the raw, unencoded URL
		Example: /vdir/default.asp?querystring
		(Note: IIS 4.0 and earlier: This server variable is not
		available)
	]]></help></scope>
	<scope value="CGI.UNMAPPED_REMOTE_USER" type="String"><help><![CDATA[ 
		(IIS) The name of the user as it is derived from the
		authorization header sent by the client, before the user name
		is mapped to a Windows account (same as CGI.REMOTE_USER). If
		you have an authentication filter installed on your Web server
		that maps incoming users to accounts, use CGI.LOGON_USER to
		view the mapped user name.
	]]></help></scope>
	<scope value="CGI.URL" type="String"><help><![CDATA[ 
		(IIS) Gives the base portion of the URL, without any
		querystring or extra path information. For the raw URL, use
		CGI.HTTP_URL or CGI.UNENCODED_URL.
		Example: "/vdir/default.asp". 
	]]></help></scope>
	<scope value="CGI.URL_PATH_INFO" type="String"><help><![CDATA[ 
		(IIS) Use CGI.PATH_INFO instead. (Note: This server variable
		is only available on IIS 5.0.)
	]]></help></scope>
	<scope value="CGI.USER_NAME" type="String"><help><![CDATA[ 
		(Apache SSI) The user name of the web site in which this web
		site runs.
		Example: zytrax
	]]></help></scope>
	
	
	<!-- CFCATCH variables -->
	<scope value="CFCATCH.Type" type="String"><help><![CDATA[ 
		The exception's type, possible values: Application, Database,
		Template, Security, Object, MissingInclude, Expression, Lock,
		or a Custom Type.
	]]></help></scope>
	<scope value="CFCATCH.Detail" type="String"><help><![CDATA[ 
		A detailed message from the CFML compiler. This message,
		which can contain HTML formatting, can help to determine
		which tag threw the exception.
	]]></help></scope>
	<scope value="CFCATCH.ErrorCode" type="String"><help><![CDATA[ 
		The cfthrow tag can supply a value for this code through the
		errorCode attribute. For Type="Database", CFCATCH.ErrorCode
		has the same value as CFCATCH.SQLState. Otherwise, the value
		of CFCATCH.ErrorCode is the empty string.
	]]></help></scope>
	<scope value="CFCATCH.ExtendedInfo" type="String"><help><![CDATA[ 
		Custom error message information. This is returned only to
		CFCATCH tags for which the type attribute is "Application" or
		a custom type. Otherwise, the value of CFCATCH.ExtendedInfo
		is empty.
	]]></help></scope>
	<scope value="CFCATCH.Message" type="String"><help><![CDATA[ 
		The exception's default diagnostic message, if one was
		provided. If no diagnostic message is available, this is
		empty.
	]]></help></scope>
	<scope value="CFCATCH.TagContext" type="Array"><help><![CDATA[ 
		Array of tag information structures.
	]]></help></scope>
	<scope value="CFCATCH.TagContext[x].Column" type="Numeric"><help><![CDATA[ 
		The column on the line where the tag is located.
	]]></help></scope>
	<scope value="CFCATCH.TagContext[x].ID" type="String"><help><![CDATA[ 
		The tag in which the exception occurred. Exceptions in
		CFScript are indicated by two question marks (??). All custom
		tags, including those called directly, are identified as
		cfmodule.
	]]></help></scope>
	<scope value="CFCATCH.TagContext[x].Line" type="Numeric"><help><![CDATA[ 
		The line on the page in which the tag is located.
	]]></help></scope>
	<scope value="CFCATCH.TagContext[x].Template" type="String"><help><![CDATA[ 
		The pathname of the application page that contains the tag.
	]]></help></scope>
	<scope value="CFCATCH.TagContext[x].Type" type="String"><help><![CDATA[ 
		The type of page; it is always a ColdFusion page.
	]]></help></scope>
	<!-- expression exceptions -->
	<scope value="CFCATCH.ErrNumber" type="String"><help><![CDATA[ 
		An internal expression error number.
		Available for expression exceptions.
	]]></help></scope>
	<!-- locking exceptions -->
	<scope value="CFCATCH.LockName" type="String"><help><![CDATA[ 
		The name of the affected lock. This is set to "anonymous" if
		the lock name is unknown.
		Available for locking exceptions.
	]]></help></scope>
	<scope value="CFCATCH.LockOperation" type="String"><help><![CDATA[ 
		The operation that failed. This is set to "unknown" if the
		failed operation is unknown.
		Available for locking exceptions.
	]]></help></scope>
	<!-- Missing include exceptions -->
	<scope value="CFCATCH.MissingFileName" type="String"><help><![CDATA[ 
		The name of the missing file.
		Available for missingInclude exceptions.
	]]></help></scope>
	<!-- Database exceptions -->
	<scope value="CFCATCH.NativeErrorCode" type="String"><help><![CDATA[ 
		The native error code associated with this exception.
		Database drivers typically provide error codes to assist in
		the diagnosis of failing database operations. The values
		assumed by CFCATCH.NativeErrorCode are driver-dependent. If
		no error code is provided, the value of
		CFCATCH.nativeErrorCode is -1. The value is 0 for queries of
		queries.
		Available for database exceptions.
	]]></help></scope>
	<scope value="CFCATCH.SQLState" type="String"><help><![CDATA[ 
		The SQLState code associated with this exception. Database
		drivers typically provide error codes to assist in the
		diagnosis of failing database operations. SQLState codes are
		more consistent across database systems than native error
		codes. If the driver does not provide an SQLState value, the
		value of CFCATCH.SQLState is -1.
		Available for database exceptions.
	]]></help></scope>
	
	<!-- CFERROR variables -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/common/html/wwhelp.htm?context=ColdFusion_Documentation&file=00001138.htm -->
	<!-- Type: Validation -->
	<scope value="CFERROR.InvalidFields" type="String"><help><![CDATA[ 
		Unordered list of validation errors that occurred. This
		includes any text that you specify in the value attribute
		or a hidden tag used to validate form input.
		Available for Validation type errors.
	]]></help></scope>
	<scope value="CFERROR.ValidationHeader" type="String"><help><![CDATA[ 
		Text for the header of the default validation message.
		Available for Validation type errors.
	]]></help></scope>
	<scope value="CFERROR.ValidationFooter" type="String"><help><![CDATA[ 
		Text for the footer of the default validation message.
		Available for Validation type errors.
	]]></help></scope>
	<!-- Exception and Request -->
	<scope value="CFERROR.Browser" type="String"><help><![CDATA[ 
		Browser that was running when the error occurred.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="CFERROR.DateTime" type="DateTime"><help><![CDATA[ 
		Date and time when the error occurred.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="CFERROR.Diagnostics" type="String"><help><![CDATA[ 
		Detailed error diagnostics.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="CFERROR.GeneratedContent" type="String"><help><![CDATA[ 
		Any content that ColdFusion generated in response to the
		request prior to the error.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="CFERROR.HTTPReferer" type="String"><help><![CDATA[ 
		Page containing the HTML link to the page on which the error
		occurred. This value is an empty string if the user specified
		the page directly in the browser. (string).
		Available for Exception and Request type errors
	]]></help></scope>
	<scope value="CFERROR.MailTo" type="String"><help><![CDATA[ 
		E-mail address of the administrator who should be notified.
		This value is set in the mailTo attribute of the cferror
		tag.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="CFERROR.QueryString" type="String"><help><![CDATA[ 
		URL query string of the client's request, if any.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="CFERROR.RemoteAddress" type="String"><help><![CDATA[ 
		IP address of the remote client.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="CFERROR.Template" type="String"><help><![CDATA[ 
		Page being executed when the error occurred.
		Available for Exception and Request type errors.
	]]></help></scope>
	<!-- Exception Only -->
	<scope value="CFERROR.Message" type="String"><help><![CDATA[ 
		Error message associated with the exception.
		Available for Exception type errors.
	]]></help></scope>
	<scope value="CFERROR.Type" type="String"><help><![CDATA[ 
		Exception type, possible values: Application, Database,
		Template, Security, Object, MissingInclude, Expression, Lock,
		or a Custom Type.
	]]></help></scope>
	<scope value="CFERROR.TagContext" type="Array"><help><![CDATA[ 
		Array of structures containing information for each tag in
		the tag stack The tag stack consists of each tag that is
		currently open.
		Available for Exception type errors.
	]]></help></scope>
	<scope value="CFERROR.TagContext[x].Column" type="Numeric"><help><![CDATA[ 
		The column on the line where the tag is located.
	]]></help></scope>
	<scope value="CFERROR.TagContext[x].ID" type="String"><help><![CDATA[ 
		The tag in which the exception occurred. Exceptions in CFScript
		are indicated by two question marks (??). All custom tags,
		including those called directly, are identified as cfmodule.
	]]></help></scope>
	<scope value="CFERROR.TagContext[x].Line" type="Numeric"><help><![CDATA[ 
		The line on the page in which the tag is located. (int)
	]]></help></scope>
	<scope value="CFERROR.TagContext[x].Raw_Trace" type="String"><help><![CDATA[ 
		The raw Java stack trace for the error.
	]]></help></scope>
	<scope value="CFERROR.TagContext[x].Template" type="String"><help><![CDATA[ 
		The pathname of the application page that contains the tag.
	]]></help></scope>
	<scope value="CFERROR.TagContext[x].Type" type="String"><help><![CDATA[ 
		The type of page; it is always a ColdFusion page.
	]]></help></scope>
	
	
	<!-- ERROR variables -->
	<!-- REFERENCE: http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/common/html/wwhelp.htm?context=ColdFusion_Documentation&file=00001138.htm -->
	<!-- Type: Validation -->
	<scope value="ERROR.InvalidFields" type="String"><help><![CDATA[ 
		Unordered list of validation errors that occurred. This
		includes any text that you specify in the value attribute
		or a hidden tag used to validate form input.
		Available for Validation type errors.
	]]></help></scope>
	<scope value="ERROR.ValidationHeader" type="String"><help><![CDATA[ 
		Text for the header of the default validation message.
		Available for Validation type errors.
	]]></help></scope>
	<scope value="ERROR.ValidationFooter" type="String"><help><![CDATA[ 
		Text for the footer of the default validation message.
		Available for Validation type errors.
	]]></help></scope>
	<!-- Exception and Request -->
	<scope value="ERROR.Browser" type="String"><help><![CDATA[ 
		Browser that was running when the error occurred.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="ERROR.DateTime" type="DateTime"><help><![CDATA[ 
		Date and time when the error occurred.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="ERROR.Diagnostics" type="String"><help><![CDATA[ 
		Detailed error diagnostics.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="ERROR.GeneratedContent" type="String"><help><![CDATA[ 
		Any content that ColdFusion generated in response to the
		request prior to the error.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="ERROR.HTTPReferer" type="String"><help><![CDATA[ 
		Page containing the HTML link to the page on which the error
		occurred. This value is an empty string if the user specified
		the page directly in the browser. (string).
		Available for Exception and Request type errors
	]]></help></scope>
	<scope value="ERROR.MailTo" type="String"><help><![CDATA[ 
		E-mail address of the administrator who should be notified.
		This value is set in the mailTo attribute of the ERROR
		tag.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="ERROR.QueryString" type="String"><help><![CDATA[ 
		URL query string of the client's request, if any.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="ERROR.RemoteAddress" type="String"><help><![CDATA[ 
		IP address of the remote client.
		Available for Exception and Request type errors.
	]]></help></scope>
	<scope value="ERROR.Template" type="String"><help><![CDATA[ 
		Page being executed when the error occurred.
		Available for Exception and Request type errors.
	]]></help></scope>
	<!-- Exception Only -->
	<scope value="ERROR.Message" type="String"><help><![CDATA[ 
		Error message associated with the exception.
		Available for Exception type errors.
	]]></help></scope>
	<scope value="ERROR.Type" type="String"><help><![CDATA[ 
		Exception type, possible values: Application, Database,
		Template, Security, Object, MissingInclude, Expression, Lock,
		or a Custom Type.
	]]></help></scope>
	<scope value="ERROR.TagContext" type="Array"><help><![CDATA[ 
		Array of structures containing information for each tag in
		the tag stack The tag stack consists of each tag that is
		currently open.
		Available for Exception type errors.
	]]></help></scope>
	<scope value="ERROR.TagContext[x].Column" type="Numeric"><help><![CDATA[ 
		The column on the line where the tag is located.
	]]></help></scope>
	<scope value="ERROR.TagContext[x].ID" type="String"><help><![CDATA[ 
		The tag in which the exception occurred. Exceptions in CFScript
		are indicated by two question marks (??). All custom tags,
		including those called directly, are identified as cfmodule.
	]]></help></scope>
	<scope value="ERROR.TagContext[x].Line" type="Numeric"><help><![CDATA[ 
		The line on the page in which the tag is located. (int)
	]]></help></scope>
	<scope value="ERROR.TagContext[x].Template" type="String"><help><![CDATA[ 
		The pathname of the application page that contains the tag.
	]]></help></scope>
	<scope value="ERROR.TagContext[x].Type" type="String"><help><![CDATA[ 
		The type of page; it is always a ColdFusion page.
	]]></help></scope>
		
</scopes>
	</scopes>
</dictionary>
